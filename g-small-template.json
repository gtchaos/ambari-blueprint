{
  "ambari": {
    "rpm": "http://db-dcdev.db01.example.com:8090/ambari/centos6/1.x/updates/1.6.0/ambari.repo",
    "server.port": "8080"
  },
  "ams-env": {
    "ambari_metrics_user": "ams",
    "content": "\n# Set environment variables here.\n\n# The java implementation to use. Java 1.6 required.\nexport JAVA_HOME={{java64_home}}\n\n# Collector Log directory for log4j\nexport AMS_COLLECTOR_LOG_DIR={{ams_collector_log_dir}}\n\n# Monitor Log directory for outfile\nexport AMS_MONITOR_LOG_DIR={{ams_monitor_log_dir}}\n\n# Collector pid directory\nexport AMS_COLLECTOR_PID_DIR={{ams_collector_pid_dir}}\n\n# Monitor pid directory\nexport AMS_MONITOR_PID_DIR={{ams_monitor_pid_dir}}\n\n# AMS HBase pid directory\nexport AMS_HBASE_PID_DIR={{hbase_pid_dir}}\n\n# AMS Collector heapsize\nexport AMS_COLLECTOR_HEAPSIZE={{metrics_collector_heapsize}}\n\n# HBase compaction policy enabled\nexport AMS_HBASE_NORMALIZER_ENABLED={{ams_hbase_normalizer_enabled}}\n\n# HBase compaction policy enabled\nexport AMS_HBASE_FIFO_COMPACTION_ENABLED={{ams_hbase_fifo_compaction_enabled}}\n\n# AMS Collector options\nexport AMS_COLLECTOR_OPTS=\"-Djava.library.path=/usr/lib/ams-hbase/lib/hadoop-native\"\n{% if security_enabled %}\nexport AMS_COLLECTOR_OPTS=\"$AMS_COLLECTOR_OPTS -Djava.security.auth.login.config={{ams_collector_jaas_config_file}}\"\n{% endif %}\n\n# AMS Collector GC options\nexport AMS_COLLECTOR_GC_OPTS=\"-XX:+UseConcMarkSweepGC -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:{{ams_collector_log_dir}}/collector-gc.log-`date +'%Y%m%d%H%M'`\"\nexport AMS_COLLECTOR_OPTS=\"$AMS_COLLECTOR_OPTS $AMS_COLLECTOR_GC_OPTS\"",
    "metrics_collector_heapsize": "512",
    "metrics_collector_log_dir": "/mnt/bmr/log/ambari-metrics-collector",
    "metrics_collector_pid_dir": "/var/run/ambari-metrics-collector",
    "metrics_monitor_log_dir": "/mnt/bmr/log/ambari-metrics-monitor",
    "metrics_monitor_pid_dir": "/var/run/ambari-metrics-monitor"
  },
  "ams-hbase-env": {
    "content": "\n# Set environment variables here.\n\n# The java implementation to use. Java 1.6+ required.\nexport JAVA_HOME={{java64_home}}\n\n# HBase Configuration directory\nexport HBASE_CONF_DIR=${HBASE_CONF_DIR:-{{hbase_conf_dir}}}\n\n# Extra Java CLASSPATH elements. Optional.\nadditional_cp={{hbase_classpath_additional}}\nif [  -n \"$additional_cp\" ];\nthen\n  export HBASE_CLASSPATH=${HBASE_CLASSPATH}:$additional_cp\nelse\n  export HBASE_CLASSPATH=${HBASE_CLASSPATH}\nfi\n\n# The maximum amount of heap to use for hbase shell.\nexport HBASE_SHELL_OPTS=\"-Xmx256m\"\n\n# Extra Java runtime options.\n# Below are what we set by default. May only work with SUN JVM.\n# For more on why as well as other possible settings,\n# see http://wiki.apache.org/hadoop/PerformanceTuning\nexport HBASE_OPTS=\"-XX:+UseConcMarkSweepGC -XX:ErrorFile={{hbase_log_dir}}/hs_err_pid%p.log -Djava.io.tmpdir={{hbase_tmp_dir}}\"\nexport SERVER_GC_OPTS=\"-verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:{{hbase_log_dir}}/gc.log-`date +'%Y%m%d%H%M'`\"\n# Uncomment below to enable java garbage collection logging.\n# export HBASE_OPTS=\"$HBASE_OPTS -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:$HBASE_HOME/logs/gc-hbase.log\"\n\n# Uncomment and adjust to enable JMX exporting\n# See jmxremote.password and jmxremote.access in $JRE_HOME/lib/management to configure remote password access.\n# More details at: http://java.sun.com/javase/6/docs/technotes/guides/management/agent.html\n#\n# export HBASE_JMX_BASE=\"-Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false\"\n\n{% if java_version < 8 %}\nexport HBASE_MASTER_OPTS=\" -XX:PermSize=64m -XX:MaxPermSize={{hbase_master_maxperm_size}} -Xms{{hbase_heapsize}} -Xmx{{hbase_heapsize}} -Xmn{{hbase_master_xmn_size}} -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly\"\nexport HBASE_REGIONSERVER_OPTS=\"-XX:MaxPermSize=128m -Xmn{{regionserver_xmn_size}} -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly -Xms{{regionserver_heapsize}} -Xmx{{regionserver_heapsize}}\"\n{% else %}\nexport HBASE_MASTER_OPTS=\" -Xms{{hbase_heapsize}} -Xmx{{hbase_heapsize}} -Xmn{{hbase_master_xmn_size}} -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly\"\nexport HBASE_REGIONSERVER_OPTS=\" -Xmn{{regionserver_xmn_size}} -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly -Xms{{regionserver_heapsize}} -Xmx{{regionserver_heapsize}}\"\n{% endif %}\n\n\n# export HBASE_THRIFT_OPTS=\"$HBASE_JMX_BASE -Dcom.sun.management.jmxremote.port=10103\"\n# export HBASE_ZOOKEEPER_OPTS=\"$HBASE_JMX_BASE -Dcom.sun.management.jmxremote.port=10104\"\n\n# File naming hosts on which HRegionServers will run. $HBASE_HOME/conf/regionservers by default.\nexport HBASE_REGIONSERVERS=${HBASE_CONF_DIR}/regionservers\n\n# Extra ssh options. Empty by default.\n# export HBASE_SSH_OPTS=\"-o ConnectTimeout=1 -o SendEnv=HBASE_CONF_DIR\"\n\n# Where log files are stored. $HBASE_HOME/logs by default.\nexport HBASE_LOG_DIR={{hbase_log_dir}}\n\n# A string representing this instance of hbase. $USER by default.\n# export HBASE_IDENT_STRING=$USER\n\n# The scheduling priority for daemon processes. See 'man nice'.\n# export HBASE_NICENESS=10\n\n# The directory where pid files are stored. /tmp by default.\nexport HBASE_PID_DIR={{hbase_pid_dir}}\n\n# Seconds to sleep between slave commands. Unset by default. This\n# can be useful in large clusters, where, e.g., slave rsyncs can\n# otherwise arrive faster than the master can service them.\n# export HBASE_SLAVE_SLEEP=0.1\n\n# Tell HBase whether it should manage it's own instance of Zookeeper or not.\nexport HBASE_MANAGES_ZK=false\n\n{% if security_enabled %}\nexport HBASE_OPTS=\"$HBASE_OPTS -Djava.security.auth.login.config={{client_jaas_config_file}}\"\nexport HBASE_MASTER_OPTS=\"$HBASE_MASTER_OPTS -Djava.security.auth.login.config={{master_jaas_config_file}}\"\nexport HBASE_REGIONSERVER_OPTS=\"$HBASE_REGIONSERVER_OPTS -Djava.security.auth.login.config={{regionserver_jaas_config_file}}\"\nexport HBASE_ZOOKEEPER_OPTS=\"$HBASE_ZOOKEEPER_OPTS -Djava.security.auth.login.config={{ams_zookeeper_jaas_config_file}}\"\n{% endif %}\n\n# use embedded native libs\n_HADOOP_NATIVE_LIB=\"/usr/lib/ams-hbase/lib/hadoop-native/\"\nexport HBASE_OPTS=\"$HBASE_OPTS -Djava.library.path=${_HADOOP_NATIVE_LIB}\"\n\n# Unset HADOOP_HOME to avoid importing HADOOP installed cluster related configs like: /usr/hdp/2.2.0.0-2041/hadoop/conf/\nexport HADOOP_HOME={{ams_hbase_home_dir}}",
    "hbase_classpath_additional": "",
    "hbase_log_dir": "/mnt/bmr/log/ambari-metrics-collector",
    "hbase_master_heapsize": "256",
    "hbase_master_maxperm_size": "128",
    "hbase_master_xmn_size": "192",
    "hbase_pid_dir": "/var/run/ambari-metrics-collector/",
    "hbase_regionserver_heapsize": "256",
    "hbase_regionserver_xmn_ratio": "0.2",
    "max_open_files_limit": "32768",
    "regionserver_xmn_size": "256"
  },
  "ams-hbase-log4j": {
    "content": "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n\n# Define some default values that can be overridden by system properties\nhbase.root.logger=INFO,console\nhbase.security.logger=INFO,console\nhbase.log.dir=.\nhbase.log.file=hbase.log\n\n# Define the root logger to the system property \"hbase.root.logger\".\nlog4j.rootLogger=${hbase.root.logger}\n\n# Logging Threshold\nlog4j.threshold=ALL\n\n#\n# Daily Rolling File Appender\n#\nlog4j.appender.DRFA=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.DRFA.File=${hbase.log.dir}/${hbase.log.file}\n\n# Rollver at midnight\nlog4j.appender.DRFA.DatePattern=.yyyy-MM-dd\n\n# 30-day backup\n#log4j.appender.DRFA.MaxBackupIndex=30\nlog4j.appender.DRFA.layout=org.apache.log4j.PatternLayout\n\n# Pattern format: Date LogLevel LoggerName LogMessage\nlog4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\n\n# Rolling File Appender properties\nhbase.log.maxfilesize=256MB\nhbase.log.maxbackupindex=20\n\n# Rolling File Appender\nlog4j.appender.RFA=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFA.File=${hbase.log.dir}/${hbase.log.file}\n\nlog4j.appender.RFA.MaxFileSize=${hbase.log.maxfilesize}\nlog4j.appender.RFA.MaxBackupIndex=${hbase.log.maxbackupindex}\n\nlog4j.appender.RFA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\n\n#\n# Security audit appender\n#\nhbase.security.log.file=SecurityAuth.audit\nhbase.security.log.maxfilesize=256MB\nhbase.security.log.maxbackupindex=20\nlog4j.appender.RFAS=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFAS.File=${hbase.log.dir}/${hbase.security.log.file}\nlog4j.appender.RFAS.MaxFileSize=${hbase.security.log.maxfilesize}\nlog4j.appender.RFAS.MaxBackupIndex=${hbase.security.log.maxbackupindex}\nlog4j.appender.RFAS.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFAS.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\nlog4j.category.SecurityLogger=${hbase.security.logger}\nlog4j.additivity.SecurityLogger=false\n#log4j.logger.SecurityLogger.org.apache.hadoop.hbase.security.access.AccessController=TRACE\n\n#\n# Null Appender\n#\nlog4j.appender.NullAppender=org.apache.log4j.varia.NullAppender\n\n#\n# console\n# Add \"console\" to rootlogger above if you want to use this\n#\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.target=System.err\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\n\n# Custom Logging levels\n\nlog4j.logger.org.apache.zookeeper=INFO\n#log4j.logger.org.apache.hadoop.fs.FSNamesystem=DEBUG\nlog4j.logger.org.apache.hadoop.hbase=INFO\n# Make these two classes INFO-level. Make them DEBUG to see more zk debug.\nlog4j.logger.org.apache.hadoop.hbase.zookeeper.ZKUtil=INFO\nlog4j.logger.org.apache.hadoop.hbase.zookeeper.ZooKeeperWatcher=INFO\n#log4j.logger.org.apache.hadoop.dfs=DEBUG\n# Set this class to log INFO only otherwise its OTT\n# Enable this to get detailed connection error/retry logging.\n# log4j.logger.org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation=TRACE\n\n\n# Uncomment this line to enable tracing on _every_ RPC call (this can be a lot of output)\n#log4j.logger.org.apache.hadoop.ipc.HBaseServer.trace=DEBUG\n\n# Uncomment the below if you want to remove logging of client region caching'\n# and scan of .META. messages\n# log4j.logger.org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation=INFO\n# log4j.logger.org.apache.hadoop.hbase.client.MetaScanner=INFO"
  },
  "ams-hbase-policy": {
    "security.admin.protocol.acl": "*",
    "security.client.protocol.acl": "*",
    "security.masterregion.protocol.acl": "*"
  },
  "ams-hbase-security-site": {
    "hbase.coprocessor.master.classes": "org.apache.hadoop.hbase.security.access.AccessController",
    "hbase.myclient.keytab": "/etc/security/keytabs/ams.collector.keytab",
    "hadoop.security.authentication": "kerberos",
    "hbase.myclient.principal": "amshbase/_HOST@EXAMPLE.COM",
    "ams.zookeeper.keytab": "/etc/security/keytabs/ams-zk.service.keytab",
    "hbase.zookeeper.property.jaasLoginRenew": "3600000",
    "hbase.regionserver.keytab.file": "/etc/security/keytabs/ams-hbase.regionserver.keytab",
    "hbase.zookeeper.property.authProvider.1": "org.apache.zookeeper.server.auth.SASLAuthenticationProvider",
    "hbase.regionserver.kerberos.principal": "amshbase/_HOST@EXAMPLE.COM",
    "hbase.zookeeper.property.kerberos.removeHostFromPrincipal": "true",
    "hbase.coprocessor.region.classes": "org.apache.hadoop.hbase.security.token.TokenProvider,org.apache.hadoop.hbase.security.access.AccessController",
    "hbase.master.keytab.file": "/etc/security/keytabs/ams-hbase.master.keytab",
    "hbase.zookeeper.property.kerberos.removeRealmFromPrincipal": "true",
    "hbase.master.kerberos.principal": "amshbase/_HOST@EXAMPLE.COM",
    "ams.zookeeper.principal": "amszk/_HOST@EXAMPLE.COM"
  },
  "ams-hbase-site": {
    "dfs.client.read.shortcircuit": "true",
    "hbase.client.scanner.caching": "10000",
    "hbase.client.scanner.timeout.period": "900000",
    "hbase.cluster.distributed": "false",
    "hbase.hregion.majorcompaction": "0",
    "hbase.hregion.max.filesize": "4294967296",
    "hbase.hregion.memstore.block.multiplier": "4",
    "hbase.hregion.memstore.flush.size": "134217728",
    "hbase.hstore.blockingStoreFiles": "200",
    "hbase.hstore.flusher.count": "2",
    "hbase.local.dir": "${hbase.tmp.dir}/local",
    "hbase.master.info.bindAddress": "0.0.0.0",
    "hbase.master.info.port": "61310",
    "hbase.master.normalizer.class": "org.apache.hadoop.hbase.master.normalizer.SimpleRegionNormalizer",
    "hbase.master.port": "61300",
    "hbase.master.wait.on.regionservers.mintostart": "1",
    "hbase.normalizer.enabled": "true",
    "hbase.normalizer.period": "600000",
    "hbase.regionserver.global.memstore.lowerLimit": "0.3",
    "hbase.regionserver.global.memstore.upperLimit": "0.35",
    "hbase.regionserver.info.port": "61330",
    "hbase.regionserver.port": "61320",
    "hbase.regionserver.thread.compaction.large": "2",
    "hbase.regionserver.thread.compaction.small": "3",
    "hbase.replication": "false",
    "hbase.rootdir": "file:///var/lib/ambari-metrics-collector/hbase",
    "hbase.snapshot.enabled": "false",
    "hbase.tmp.dir": "/var/lib/ambari-metrics-collector/hbase-tmp",
    "hbase.zookeeper.leaderport": "61388",
    "hbase.zookeeper.peerport": "61288",
    "hbase.zookeeper.property.clientPort": "{{zookeeper_clientPort}}",
    "hbase.zookeeper.property.dataDir": "${hbase.tmp.dir}/zookeeper",
    "hbase.zookeeper.property.tickTime": "6000",
    "hbase.zookeeper.quorum": "{{zookeeper_quorum_hosts}}",
    "hfile.block.cache.size": "0.3",
    "phoenix.coprocessor.maxMetaDataCacheSize": "20480000",
    "phoenix.coprocessor.maxServerCacheTimeToLiveMs": "60000",
    "phoenix.groupby.maxCacheSize": "307200000",
    "phoenix.mutate.batchSize": "10000",
    "phoenix.query.maxGlobalMemoryPercentage": "15",
    "phoenix.query.rowKeyOrderSaltedTable": "true",
    "phoenix.query.spoolThresholdBytes": "12582912",
    "phoenix.query.timeoutMs": "1200000",
    "phoenix.sequence.saltBuckets": "2",
    "phoenix.spool.directory": "${hbase.tmp.dir}/phoenix-spool",
    "zookeeper.session.timeout": "120000",
    "zookeeper.session.timeout.localHBaseCluster": "120000",
    "zookeeper.znode.parent": "/ams-hbase-unsecure"
  },
  "ams-log4j": {
    "content": "\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n# Define some default values that can be overridden by system properties\nams.log.dir=.\nams.log.file=ambari-metrics-collector.log\n\n# Root logger option\nlog4j.rootLogger=INFO,file\n\n# Direct log messages to a log file\nlog4j.appender.file=org.apache.log4j.RollingFileAppender\nlog4j.appender.file.File=${ams.log.dir}/${ams.log.file}\nlog4j.appender.file.MaxFileSize=80MB\nlog4j.appender.file.MaxBackupIndex=60\nlog4j.appender.file.layout=org.apache.log4j.PatternLayout\nlog4j.appender.file.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n"
  },
  "ams-site": {
    "phoenix.query.maxGlobalMemoryPercentage": "25",
    "phoenix.spool.directory": "/tmp",
    "timeline.metrics.aggregator.checkpoint.dir": "/var/lib/ambari-metrics-collector/checkpoint",
    "timeline.metrics.cluster.aggregate.splitpoints": " ",
    "timeline.metrics.cluster.aggregator.daily.checkpointCutOffMultiplier": "1",
    "timeline.metrics.cluster.aggregator.daily.disabled": "false",
    "timeline.metrics.cluster.aggregator.daily.interval": "86400",
    "timeline.metrics.cluster.aggregator.daily.ttl": "604800",
    "timeline.metrics.cluster.aggregator.hourly.checkpointCutOffMultiplier": "2",
    "timeline.metrics.cluster.aggregator.hourly.disabled": "false",
    "timeline.metrics.cluster.aggregator.hourly.interval": "3600",
    "timeline.metrics.cluster.aggregator.hourly.ttl": "604800",
    "timeline.metrics.cluster.aggregator.minute.checkpointCutOffMultiplier": "2",
    "timeline.metrics.cluster.aggregator.minute.disabled": "false",
    "timeline.metrics.cluster.aggregator.minute.interval": "300",
    "timeline.metrics.cluster.aggregator.minute.ttl": "604800",
    "timeline.metrics.cluster.aggregator.second.checkpointCutOffMultiplier": "2",
    "timeline.metrics.cluster.aggregator.second.disabled": "false",
    "timeline.metrics.cluster.aggregator.second.interval": "120",
    "timeline.metrics.cluster.aggregator.second.timeslice.interval": "30",
    "timeline.metrics.cluster.aggregator.second.ttl": "2592000",
    "timeline.metrics.daily.aggregator.minute.interval": "86400",
    "timeline.metrics.hbase.compression.scheme": "SNAPPY",
    "timeline.metrics.hbase.data.block.encoding": "FAST_DIFF",
    "timeline.metrics.hbase.fifo.compaction.enabled": "true",
    "timeline.metrics.host.aggregate.splitpoints": " ",
    "timeline.metrics.host.aggregator.daily.checkpointCutOffMultiplier": "1",
    "timeline.metrics.host.aggregator.daily.disabled": "false",
    "timeline.metrics.host.aggregator.daily.ttl": "604800",
    "timeline.metrics.host.aggregator.hourly.checkpointCutOffMultiplier": "2",
    "timeline.metrics.host.aggregator.hourly.disabled": "false",
    "timeline.metrics.host.aggregator.hourly.interval": "3600",
    "timeline.metrics.host.aggregator.hourly.ttl": "604800",
    "timeline.metrics.host.aggregator.minute.checkpointCutOffMultiplier": "2",
    "timeline.metrics.host.aggregator.minute.disabled": "false",
    "timeline.metrics.host.aggregator.minute.interval": "300",
    "timeline.metrics.host.aggregator.minute.ttl": "604800",
    "timeline.metrics.host.aggregator.ttl": "86400",
    "timeline.metrics.service.checkpointDelay": "60",
    "timeline.metrics.service.cluster.aggregator.appIds": "datanode,nodemanager,hbase",
    "timeline.metrics.service.default.result.limit": "15840",
    "timeline.metrics.service.operation.mode": "embedded",
    "timeline.metrics.service.resultset.fetchSize": "2000",
    "timeline.metrics.service.rpc.address": "0.0.0.0:60200",
    "timeline.metrics.service.use.groupBy.aggregators": "true",
    "timeline.metrics.service.watcher.delay": "30",
    "timeline.metrics.service.watcher.initial.delay": "600",
    "timeline.metrics.service.watcher.timeout": "30",
    "timeline.metrics.service.webapp.address": "0.0.0.0:6188",
    "timeline.metrics.sink.collection.period": "60",
    "timeline.metrics.sink.report.interval": "60"
  },
  "bmr-env": {
    "bmr_shell_log_dir": "/mnt/bmrShell/"
  },
  "capacity-scheduler": {
    "yarn.scheduler.capacity.default.minimum-user-limit-percent": "100",
    "yarn.scheduler.capacity.maximum-am-resource-percent": "0.2",
    "yarn.scheduler.capacity.maximum-applications": "10000",
    "yarn.scheduler.capacity.node-locality-delay": "-1",
    "yarn.scheduler.capacity.resource-calculator": "org.apache.hadoop.yarn.util.resource.DefaultResourceCalculator",
    "yarn.scheduler.capacity.root.accessible-node-labels": "*",
    "yarn.scheduler.capacity.root.acl_administer_queue": "*",
    "yarn.scheduler.capacity.root.capacity": "100",
    "yarn.scheduler.capacity.root.default-node-label-expression": " ",
    "yarn.scheduler.capacity.root.default.acl_administer_jobs": "*",
    "yarn.scheduler.capacity.root.default.acl_submit_applications": "*",
    "yarn.scheduler.capacity.root.default.capacity": "100",
    "yarn.scheduler.capacity.root.default.maximum-capacity": "100",
    "yarn.scheduler.capacity.root.default.state": "RUNNING",
    "yarn.scheduler.capacity.root.default.user-limit-factor": "1",
    "yarn.scheduler.capacity.root.queues": "default"
  },
  "cluster-env": {
    "fetch_nonlocal_groups": "false",
    "hadoop-streaming_tar_destination_folder": "hdfs:///hdp/apps/mapreduce/",
    "hadoop-streaming_tar_source": "/opt/bmr/hadoop/share/hadoop/tools/lib/hadoop-streaming-2.7.1.jar",
    "hive_tar_destination_folder": "hdfs:///hdp/apps/hive/",
    "hive_tar_source": "/opt/bmr/hive/hive.tar.gz",
    "ignore_groupsusers_create": "false",
    "kerberos_domain": "EXAMPLE.COM",
    "mapreduce_tar_destination_folder": "hdfs:///hdp/apps/mapreduce/",
    "mapreduce_tar_source": "/opt/bmr/hadoop/mapreduce.tar.gz",
    "override_uid": "true",
    "pig_tar_destination_folder": "hdfs:///hdp/apps/pig/",
    "pig_tar_source": "/opt/bmr/pig/pig.tar.gz",
    "repo_suse_rhel_template": "[{{repo_id}}] name={{repo_id}} {% if mirror_list %}mirrorlist={{mirror_list}}{% else %}baseurl={{base_url}}{% endif %} path=/ enabled=1 gpgcheck=0",
    "repo_ubuntu_template": "{{package_type}} {{base_url}} {{components}}",
    "security_enabled": "false",
    "smokeuser": "ambari-qa",
    "smokeuser_keytab": "/etc/security/keytabs/smokeuser.headless.keytab",
    "sqoop_tar_destination_folder": "hdfs:///hdp/apps/sqoop/",
    "sqoop_tar_source": "/opt/bmr/sqoop/sqoop.tar.gz",
    "tez_tar_destination_folder": "hdfs:///hdp/apps/tez/",
    "tez_tar_source": "/opt/bmr/tez/tez.tar.gz",
    "user_group": "hadoop"
  },
  "core-site": {
    "fs.bos.access.key": "bmrak",
    "fs.bos.endpoint": "10.220.155.63:8080",
    "fs.bos.impl": "org.apache.hadoop.fs.bos.BaiduBosFileSystem",
    "fs.bos.multipart.uploads.attempts": "5",
    "fs.bos.multipart.uploads.block.size": "9437184",
    "fs.bos.multipart.uploads.cocurrent.size": "3",
    "fs.bos.multipart.uploads.factor": "10.0",
    "fs.bos.multipart.uploads.speed": "10485760",
    "fs.bos.secret.access.key": "bmrsk",
    "fs.defaultFS": "hdfs://%NN_HOST%:8020",
    "fs.trash.interval": "360",
    "ha.failover-controller.active-standby-elector.zk.op.retries": "120",
    "hadoop.http.authentication.simple.anonymous.allowed": "true",
    "hadoop.http.staticuser.user": "yarn",
    "hadoop.proxyuser.hcat.groups": "users",
    "hadoop.proxyuser.hcat.hosts": "%WEBHCAT_HOST%",
    "hadoop.proxyuser.hdfs.groups": "*",
    "hadoop.proxyuser.hdfs.hosts": "*",
    "hadoop.proxyuser.hive.groups": "*",
    "hadoop.proxyuser.hive.hosts": "%HIVE_HOST%",
    "hadoop.proxyuser.httpfs.groups": "*",
    "hadoop.proxyuser.httpfs.hosts": "*",
    "hadoop.proxyuser.hue.groups": "*",
    "hadoop.proxyuser.hue.hosts": "*",
    "hadoop.proxyuser.oozie.groups": "*",
    "hadoop.proxyuser.oozie.hosts": "%OOZIE_HOST%",
    "hadoop.proxyuser.root.groups": "root,hdfs,hue",
    "hadoop.proxyuser.root.hosts": "%ROOT_HOST%",
    "hadoop.security.key.provider.path": "",
    "io.compression.codecs": "org.apache.hadoop.io.compress.GzipCodec,org.apache.hadoop.io.compress.DefaultCodec,org.apache.hadoop.io.compress.SnappyCodec,com.hadoop.compression.lzo.LzoCodec,com.hadoop.compression.lzo.LzopCodec,org.apache.hadoop.io.compress.BZip2Codec",
    "io.file.buffer.size": "131072",
    "io.serializations": "org.apache.hadoop.io.serializer.WritableSerialization",
    "ipc.client.connect.max.retries": "50",
    "ipc.client.connection.maxidletime": "30000",
    "ipc.client.idlethreshold": "8000",
    "ipc.server.tcpnodelay": "true",
    "mapreduce.jobtracker.webinterface.trusted": "false",
    "net.topology.script.file.name": "/etc/hadoop/conf/topology_script.py"
  },
  "ganglia-env": {
    "ganglia_conf_dir": "/etc/ganglia/hdp",
    "ganglia_runtime_dir": "/var/run/ganglia/hdp",
    "gmetad_user": "nobody",
    "gmond_user": "nobody",
    "rrdcached_base_dir": "/mnt/ganglia/rrds",
    "rrdcached_delay": "1800",
    "rrdcached_flush_timeout": "7200",
    "rrdcached_timeout": "3600",
    "rrdcached_write_threads": "4"
  },
  "hadoop-env": {
    "content": "\n# Set Hadoop-specific environment variables here.\n\n# The only required environment variable is JAVA_HOME.  All others are\n# optional.  When running a distributed configuration it is best to\n# set JAVA_HOME in this file, so that it is correctly defined on\n# remote nodes.\n\n# The java implementation to use.  Required.\nexport JAVA_HOME={{java_home}}\nexport HADOOP_HOME_WARN_SUPPRESS=1\n\n# Hadoop home directory\nexport HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\n\n# Hadoop Configuration Directory\n\n{# this is different for HDP1 #}\n# Path to jsvc required by secure HDP 2.0 datanode\nexport JSVC_HOME={{jsvc_path}}\n\n\n# The maximum amount of heap to use, in MB. Default is 1000.\nexport HADOOP_HEAPSIZE=\"{{hadoop_heapsize}}\"\n\nexport HADOOP_NAMENODE_INIT_HEAPSIZE=\"-Xms{{namenode_heapsize}}\"\n\n# Extra Java runtime options.  Empty by default.\nexport HADOOP_OPTS=\"-Djava.net.preferIPv4Stack=true ${HADOOP_OPTS}\"\n\n# Command specific options appended to HADOOP_OPTS when specified\nexport HADOOP_NAMENODE_OPTS=\"-server -XX:ParallelGCThreads=8 -XX:+UseConcMarkSweepGC -XX:ErrorFile={{hdfs_log_dir_prefix}}/$USER/hs_err_pid%p.log -XX:NewSize={{namenode_opt_newsize}} -XX:MaxNewSize={{namenode_opt_maxnewsize}} -Xloggc:{{hdfs_log_dir_prefix}}/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -Xms{{namenode_heapsize}} -Xmx{{namenode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dhdfs.audit.logger=INFO,DRFAAUDIT ${HADOOP_NAMENODE_OPTS}\"\nHADOOP_JOBTRACKER_OPTS=\"-server -XX:ParallelGCThreads=8 -XX:+UseConcMarkSweepGC -XX:ErrorFile={{hdfs_log_dir_prefix}}/$USER/hs_err_pid%p.log -XX:NewSize={{jtnode_opt_newsize}} -XX:MaxNewSize={{jtnode_opt_maxnewsize}} -Xloggc:{{hdfs_log_dir_prefix}}/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -Xmx{{jtnode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dmapred.audit.logger=INFO,MRAUDIT -Dhadoop.mapreduce.jobsummary.logger=INFO,JSA ${HADOOP_JOBTRACKER_OPTS}\"\n\nHADOOP_TASKTRACKER_OPTS=\"-server -Xmx{{ttnode_heapsize}} -Dhadoop.security.logger=ERROR,console -Dmapred.audit.logger=ERROR,console ${HADOOP_TASKTRACKER_OPTS}\"\nexport HADOOP_DATANODE_OPTS=\"-Xmx{{dtnode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dhdfs.audit.logger=INFO,DRFAAUDIT ${HADOOP_DATANODE_OPTS}\"\nHADOOP_BALANCER_OPTS=\"-server -Xmx{{hadoop_heapsize}}m ${HADOOP_BALANCER_OPTS}\"\n\nexport HADOOP_SECONDARYNAMENODE_OPTS=$HADOOP_NAMENODE_OPTS\n\n# The following applies to multiple commands (fs, dfs, fsck, distcp etc)\nexport HADOOP_CLIENT_OPTS=\"-Xmx${HADOOP_HEAPSIZE}m -XX:MaxPermSize=512m $HADOOP_CLIENT_OPTS\"\n\n# On secure datanodes, user to run the datanode as after dropping privileges\nexport HADOOP_SECURE_DN_USER=${HADOOP_SECURE_DN_USER:-{{hadoop_secure_dn_user}}}\n\n# Extra ssh options.  Empty by default.\nexport HADOOP_SSH_OPTS=\"-o ConnectTimeout=5 -o SendEnv=HADOOP_CONF_DIR\"\n\n# Where log files are stored.  $HADOOP_HOME/logs by default.\nexport HADOOP_LOG_DIR={{hdfs_log_dir_prefix}}/$USER\n\n# History server logs\nexport HADOOP_MAPRED_LOG_DIR={{mapred_log_dir_prefix}}/$USER\n\n# Where log files are stored in the secure data environment.\nexport HADOOP_SECURE_DN_LOG_DIR={{hdfs_log_dir_prefix}}/$HADOOP_SECURE_DN_USER\n\n# File naming remote slave hosts.  $HADOOP_HOME/conf/slaves by default.\n# export HADOOP_SLAVES=${HADOOP_HOME}/conf/slaves\n\n# host:path where hadoop code should be rsync'd from.  Unset by default.\n# export HADOOP_MASTER=master:/home/$USER/src/hadoop\n\n# Seconds to sleep between slave commands.  Unset by default.  This\n# can be useful in large clusters, where, e.g., slave rsyncs can\n# otherwise arrive faster than the master can service them.\n# export HADOOP_SLAVE_SLEEP=0.1\n\n# The directory where pid files are stored. /tmp by default.\nexport HADOOP_PID_DIR={{hadoop_pid_dir_prefix}}/$USER\nexport HADOOP_SECURE_DN_PID_DIR={{hadoop_pid_dir_prefix}}/$HADOOP_SECURE_DN_USER\n\n# History server pid\nexport HADOOP_MAPRED_PID_DIR={{mapred_pid_dir_prefix}}/$USER\n\nYARN_RESOURCEMANAGER_OPTS=\"-Dyarn.server.resourcemanager.appsummary.logger=INFO,RMSUMMARY\"\n\n# A string representing this instance of hadoop. $USER by default.\nexport HADOOP_IDENT_STRING=$USER\n\n# The scheduling priority for daemon processes.  See 'man nice'.\n\n# export HADOOP_NICENESS=10\n\n# Use libraries from standard classpath\nJAVA_JDBC_LIBS=\"\"\n#Add libraries required by mysql connector\nfor jarFile in `ls /usr/share/java/*mysql* 2>/dev/null`\ndo\n  JAVA_JDBC_LIBS=${JAVA_JDBC_LIBS}:$jarFile\ndone\n# Add libraries required by oracle connector\nfor jarFile in `ls /usr/share/java/*ojdbc* 2>/dev/null`\ndo\n  JAVA_JDBC_LIBS=${JAVA_JDBC_LIBS}:$jarFile\ndone\n# Add libraries required by nodemanager\nMAPREDUCE_LIBS={{mapreduce_libs_path}}\nexport HADOOP_CLASSPATH=${HADOOP_CLASSPATH}${JAVA_JDBC_LIBS}:${MAPREDUCE_LIBS}:/opt/bmr/hadoop/lib/*\n\n# added to the HADOOP_CLASSPATH\nif [ -d \"/opt/bmr/tez\" ]; then\n  if [ -d \"/etc/tez/conf/\" ]; then\n    # When using versioned RPMs, the tez-client will be a symlink to the current folder of tez in HDP.\n    export HADOOP_CLASSPATH=${HADOOP_CLASSPATH}:/opt/bmr/tez/*:/opt/bmr/tez/lib/*:/etc/tez/conf/\n  fi\nfi\n\nif [ -d \"/opt/bmr/hbase\" ]; then\n  if [ -d \"/etc/hbase/conf/\" ]; then\n    # When using versioned RPMs, the hbase-client will be a symlink to the current folder of hbase in HDP.\n    export HADOOP_CLASSPATH=${HADOOP_CLASSPATH}:/opt/bmr/hbase/*:/opt/bmr/hbase/lib/*:/etc/hbase/conf\n  fi\nfi\n\n# Setting path to hdfs command line\nexport HADOOP_LIBEXEC_DIR={{hadoop_libexec_dir}}\n\n# Mostly required for hadoop 2.0\nexport JAVA_LIBRARY_PATH=${JAVA_LIBRARY_PATH}:/opt/bmr/hadoop/lib/native/:/opt/bmr/hadoop/lib/native/Linux-amd64-64/\n\nexport HADOOP_OPTS=\"$HADOOP_OPTS\"\n    ",
    "dfs.datanode.data.dir.mount.file": "/etc/hadoop/conf/dfs_data_dir_mount.hist",
    "dtnode_heapsize": "1024m",
    "hadoop_heapsize": "1024",
    "hadoop_pid_dir_prefix": "/var/run/hadoop",
    "hadoop_root_logger": "INFO,RFA",
    "hdfs_log_dir_prefix": "/mnt/bmr/log/hadoop",
    "hdfs_user": "hdfs",
    "hdfs_user_nofile_limit": "128000",
    "hdfs_user_nproc_limit": "65536",
    "keyserver_host": "",
    "keyserver_port": "",
    "namenode_heapsize": "1024m",
    "namenode_opt_maxnewsize": "256m",
    "namenode_opt_maxpermsize": "256m",
    "namenode_opt_newsize": "200m",
    "namenode_opt_permsize": "128m",
    "nfsgateway_heapsize": "1024",
    "proxyuser_group": "users"
  },
  "hadoop-policy": {
    "security.admin.operations.protocol.acl": "hadoop",
    "security.client.datanode.protocol.acl": "*",
    "security.client.protocol.acl": "*",
    "security.datanode.protocol.acl": "*",
    "security.inter.datanode.protocol.acl": "*",
    "security.inter.tracker.protocol.acl": "*",
    "security.job.client.protocol.acl": "*",
    "security.job.task.protocol.acl": "*",
    "security.namenode.protocol.acl": "*",
    "security.refresh.policy.protocol.acl": "hadoop",
    "security.refresh.usertogroups.mappings.protocol.acl": "hadoop"
  },
  "hbase-env": {
    "content": "\n# Set environment variables here.\n\n# The java implementation to use. Java 1.6 required.\nexport JAVA_HOME={{java64_home}}\n\n# HBase Configuration directory\nexport HBASE_CONF_DIR=${HBASE_CONF_DIR:-{{hbase_conf_dir}}}\n\n# Extra Java CLASSPATH elements. Optional.\nexport HBASE_CLASSPATH=${HBASE_CLASSPATH}\n\n# The maximum amount of heap to use, in MB. Default is 1000.\n# export HBASE_HEAPSIZE=1000\n\n# Extra Java runtime options.\n# Below are what we set by default. May only work with SUN JVM.\n# For more on why as well as other possible settings,\n# see http://wiki.apache.org/hadoop/PerformanceTuning\nexport SERVER_GC_OPTS=\"-verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:{{log_dir}}/gc.log-`date +'%Y%m%d%H%M'`\"\n# Uncomment below to enable java garbage collection logging.\n# export HBASE_OPTS=\"$HBASE_OPTS -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:$HBASE_HOME/logs/gc-hbase.log\"\n\n# Uncomment and adjust to enable JMX exporting\n# See jmxremote.password and jmxremote.access in $JRE_HOME/lib/management to configure remote password access.\n# More details at: http://java.sun.com/javase/6/docs/technotes/guides/management/agent.html\n#\n# export HBASE_JMX_BASE=\"-Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false\"\n# If you want to configure BucketCache, specify '-XX: MaxDirectMemorySize=' with proper direct memory size\n# export HBASE_THRIFT_OPTS=\"$HBASE_JMX_BASE -Dcom.sun.management.jmxremote.port=10103\"\n# export HBASE_ZOOKEEPER_OPTS=\"$HBASE_JMX_BASE -Dcom.sun.management.jmxremote.port=10104\"\n\n# File naming hosts on which HRegionServers will run. $HBASE_HOME/conf/regionservers by default.\nexport HBASE_REGIONSERVERS=${HBASE_CONF_DIR}/regionservers\n\n# Extra ssh options. Empty by default.\n# export HBASE_SSH_OPTS=\"-o ConnectTimeout=1 -o SendEnv=HBASE_CONF_DIR\"\n\n# Where log files are stored. $HBASE_HOME/logs by default.\nexport HBASE_LOG_DIR={{log_dir}}\n\n# A string representing this instance of hbase. $USER by default.\n# export HBASE_IDENT_STRING=$USER\n\n# The scheduling priority for daemon processes. See 'man nice'.\n# export HBASE_NICENESS=10\n\n# The directory where pid files are stored. /tmp by default.\nexport HBASE_PID_DIR={{pid_dir}}\n\n# Seconds to sleep between slave commands. Unset by default. This\n# can be useful in large clusters, where, e.g., slave rsyncs can\n# otherwise arrive faster than the master can service them.\n# export HBASE_SLAVE_SLEEP=0.1\n\n# Tell HBase whether it should manage it's own instance of Zookeeper or not.\nexport HBASE_MANAGES_ZK=false\n\n{% if security_enabled %}\nexport HBASE_OPTS=\"$HBASE_OPTS -XX:+HeapDumpOnOutOfMemoryError -XX:+UseParallelGC -XX:+UseParallelOldGC -XX:NewRatio=6 -XX:SurvivorRatio=3 -XX:ErrorFile={{log_dir}}/hs_err_pid%p.log -Djava.security.auth.login.config={{client_jaas_config_file}}\"\nexport HBASE_MASTER_OPTS=\"$HBASE_MASTER_OPTS -Xmx{{master_heapsize}} -Djava.security.auth.login.config={{master_jaas_config_file}}\"\nexport HBASE_REGIONSERVER_OPTS=\"$HBASE_REGIONSERVER_OPTS -Xmn{{regionserver_xmn_size}} -Xms{{regionserver_heapsize}} -Xmx{{regionserver_heapsize}} -Djava.security.auth.login.config={{regionserver_jaas_config_file}}\"\n{% else %}\nexport HBASE_OPTS=\"$HBASE_OPTS -XX:+HeapDumpOnOutOfMemoryError -XX:+UseParallelGC -XX:+UseParallelOldGC -XX:NewRatio=6 -XX:SurvivorRatio=3 -XX:ErrorFile={{log_dir}}/hs_err_pid%p.log\"\nexport HBASE_MASTER_OPTS=\"$HBASE_MASTER_OPTS -Xmx{{master_heapsize}}\"\nexport HBASE_REGIONSERVER_OPTS=\"$HBASE_REGIONSERVER_OPTS -Xmn{{regionserver_xmn_size}} -Xms{{regionserver_heapsize}} -Xmx{{regionserver_heapsize}}\"\n{% endif %}\n    ",
    "hbase_log_dir": "/mnt/bmr/log/hbase",
    "hbase_master_heapsize": "2048m",
    "hbase_pid_dir": "/var/run/hbase",
    "hbase_regionserver_heapsize": "2048m",
    "hbase_regionserver_xmn_max": "512",
    "hbase_regionserver_xmn_ratio": "0.2",
    "hbase_user": "hbase"
  },
  "hbase-log4j": {
    "content": "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n\n# Define some default values that can be overridden by system properties\nhbase.root.logger=INFO,console\nhbase.security.logger=INFO,console\nhbase.log.dir=.\nhbase.log.file=hbase.log\n\n# Define the root logger to the system property \"hbase.root.logger\".\nlog4j.rootLogger=${hbase.root.logger}\n\n# Logging Threshold\nlog4j.threshold=ALL\n\n#\n# Daily Rolling File Appender\n#\nlog4j.appender.DRFA=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.DRFA.File=${hbase.log.dir}/${hbase.log.file}\n\n# Rollver at midnight\nlog4j.appender.DRFA.DatePattern=.yyyy-MM-dd\n\n# 30-day backup\n#log4j.appender.DRFA.MaxBackupIndex=30\nlog4j.appender.DRFA.layout=org.apache.log4j.PatternLayout\n\n# Pattern format: Date LogLevel LoggerName LogMessage\nlog4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\n\n# Rolling File Appender properties\nhbase.log.maxfilesize=256MB\nhbase.log.maxbackupindex=20\n\n# Rolling File Appender\nlog4j.appender.RFA=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFA.File=${hbase.log.dir}/${hbase.log.file}\n\nlog4j.appender.RFA.MaxFileSize=${hbase.log.maxfilesize}\nlog4j.appender.RFA.MaxBackupIndex=${hbase.log.maxbackupindex}\n\nlog4j.appender.RFA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\n\n#\n# Security audit appender\n#\nhbase.security.log.file=SecurityAuth.audit\nhbase.security.log.maxfilesize=256MB\nhbase.security.log.maxbackupindex=20\nlog4j.appender.RFAS=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFAS.File=${hbase.log.dir}/${hbase.security.log.file}\nlog4j.appender.RFAS.MaxFileSize=${hbase.security.log.maxfilesize}\nlog4j.appender.RFAS.MaxBackupIndex=${hbase.security.log.maxbackupindex}\nlog4j.appender.RFAS.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFAS.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\nlog4j.category.SecurityLogger=${hbase.security.logger}\nlog4j.additivity.SecurityLogger=false\n#log4j.logger.SecurityLogger.org.apache.hadoop.hbase.security.access.AccessController=TRACE\n\n#\n# Null Appender\n#\nlog4j.appender.NullAppender=org.apache.log4j.varia.NullAppender\n\n#\n# console\n# Add \"console\" to rootlogger above if you want to use this\n#\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.target=System.err\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\n\n# Custom Logging levels\n\nlog4j.logger.org.apache.zookeeper=INFO\n#log4j.logger.org.apache.hadoop.fs.FSNamesystem=DEBUG\nlog4j.logger.org.apache.hadoop.hbase=DEBUG\n# Make these two classes INFO-level. Make them DEBUG to see more zk debug.\nlog4j.logger.org.apache.hadoop.hbase.zookeeper.ZKUtil=INFO\nlog4j.logger.org.apache.hadoop.hbase.zookeeper.ZooKeeperWatcher=INFO\n#log4j.logger.org.apache.hadoop.dfs=DEBUG\n# Set this class to log INFO only otherwise its OTT\n# Enable this to get detailed connection error/retry logging.\n# log4j.logger.org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation=TRACE\n\n\n# Uncomment this line to enable tracing on _every_ RPC call (this can be a lot of output)\n#log4j.logger.org.apache.hadoop.ipc.HBaseServer.trace=DEBUG\n\n# Uncomment the below if you want to remove logging of client region caching'\n# and scan of .META. messages\n# log4j.logger.org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation=INFO\n# log4j.logger.org.apache.hadoop.hbase.client.MetaScanner=INFO\n\n    "
  },
  "hbase-policy": {
    "security.admin.protocol.acl": "*",
    "security.client.protocol.acl": "*",
    "security.masterregion.protocol.acl": "*"
  },
  "hbase-site": {
    "dfs.domain.socket.path": "/var/lib/hadoop-hdfs/dn_socket",
    "hbase.client.keyvalue.maxsize": "10485760",
    "hbase.client.scanner.caching": "100",
    "hbase.cluster.distributed": "true",
    "hbase.defaults.for.version.skip": "true",
    "hbase.hregion.majorcompaction": "604800000",
    "hbase.hregion.majorcompaction.jitter": "0.50",
    "hbase.hregion.max.filesize": "10737418240",
    "hbase.hregion.memstore.block.multiplier": "4",
    "hbase.hregion.memstore.flush.size": "134217728",
    "hbase.hregion.memstore.mslab.enabled": "true",
    "hbase.hstore.blockingStoreFiles": "10",
    "hbase.hstore.compactionThreshold": "3",
    "hbase.hstore.flush.retries.number": "120",
    "hbase.local.dir": "${hbase.tmp.dir}/local",
    "hbase.master.info.bindAddress": "0.0.0.0",
    "hbase.master.info.port": "60010",
    "hbase.master.port": "60000",
    "hbase.regionserver.global.memstore.lowerLimit": "0.38",
    "hbase.regionserver.global.memstore.upperLimit": "0.4",
    "hbase.regionserver.handler.count": "60",
    "hbase.regionserver.info.port": "60030",
    "hbase.rootdir": "hdfs://%NN_HOST%:8020/apps/hbase/data",
    "hbase.superuser": "hbase",
    "hbase.tmp.dir": "/hadoop/hbase",
    "hbase.zookeeper.property.clientPort": "2181",
    "hbase.zookeeper.property.dataDir": "/hadoop/zookeeper",
    "hbase.zookeeper.quorum": "%ZOOKEEPER_HOST%",
    "hbase.zookeeper.useMulti": "true",
    "hfile.block.cache.size": "0.40",
    "zookeeper.session.timeout": "30000",
    "zookeeper.znode.parent": "/hbase-unsecure"
  },
  "hcat-env": {
    "content": "\n      # Licensed to the Apache Software Foundation (ASF) under one\n      # or more contributor license agreements. See the NOTICE file\n      # distributed with this work for additional information\n      # regarding copyright ownership. The ASF licenses this file\n      # to you under the Apache License, Version 2.0 (the\n      # \"License\"); you may not use this file except in compliance\n      # with the License. You may obtain a copy of the License at\n      #\n      # http://www.apache.org/licenses/LICENSE-2.0\n      #\n      # Unless required by applicable law or agreed to in writing, software\n      # distributed under the License is distributed on an \"AS IS\" BASIS,\n      # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n      # See the License for the specific language governing permissions and\n      # limitations under the License.\n\n      JAVA_HOME={{java64_home}}\n      HCAT_PID_DIR={{hcat_pid_dir}}/\n      HCAT_LOG_DIR={{hcat_log_dir}}/\n      HCAT_CONF_DIR={{hcat_conf_dir}}\n      HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\n      #DBROOT is the path where the connector jars are downloaded\n      DBROOT={{hcat_dbroot}}\n      USER={{hcat_user}}\n      METASTORE_PORT={{hive_metastore_port}}\n    "
  },
  "hdfs-log4j": {
    "content": "\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#  http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n\n\n# Define some default values that can be overridden by system properties\n# To change daemon root logger use hadoop_root_logger in hadoop-env\nhadoop.root.logger=INFO,console\nhadoop.log.dir=.\nhadoop.log.file=hadoop.log\n\n\n# Define the root logger to the system property \"hadoop.root.logger\".\nlog4j.rootLogger=${hadoop.root.logger}, EventCounter\n\n# Logging Threshold\nlog4j.threshhold=ALL\n\n#\n# Daily Rolling File Appender\n#\n\nlog4j.appender.DRFA=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.DRFA.File=${hadoop.log.dir}/${hadoop.log.file}\n\n# Rollver at midnight\nlog4j.appender.DRFA.DatePattern=.yyyy-MM-dd\n\n# 30-day backup\n#log4j.appender.DRFA.MaxBackupIndex=30\nlog4j.appender.DRFA.layout=org.apache.log4j.PatternLayout\n\n# Pattern format: Date LogLevel LoggerName LogMessage\nlog4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\n# Debugging Pattern format\n#log4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n\n\n\n#\n# console\n# Add \"console\" to rootlogger above if you want to use this\n#\n\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.target=System.err\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{2}: %m%n\n\n#\n# TaskLog Appender\n#\n\n#Default values\nhadoop.tasklog.taskid=null\nhadoop.tasklog.iscleanup=false\nhadoop.tasklog.noKeepSplits=4\nhadoop.tasklog.totalLogFileSize=100\nhadoop.tasklog.purgeLogSplits=true\nhadoop.tasklog.logsRetainHours=12\n\nlog4j.appender.TLA=org.apache.hadoop.mapred.TaskLogAppender\nlog4j.appender.TLA.taskId=${hadoop.tasklog.taskid}\nlog4j.appender.TLA.isCleanup=${hadoop.tasklog.iscleanup}\nlog4j.appender.TLA.totalLogFileSize=${hadoop.tasklog.totalLogFileSize}\n\nlog4j.appender.TLA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.TLA.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\n\n#\n#Security audit appender\n#\nhadoop.security.logger=INFO,console\nhadoop.security.log.maxfilesize=256MB\nhadoop.security.log.maxbackupindex=20\nlog4j.category.SecurityLogger=${hadoop.security.logger}\nhadoop.security.log.file=SecurityAuth.audit\nlog4j.appender.DRFAS=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.DRFAS.File=${hadoop.log.dir}/${hadoop.security.log.file}\nlog4j.appender.DRFAS.layout=org.apache.log4j.PatternLayout\nlog4j.appender.DRFAS.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\nlog4j.appender.DRFAS.DatePattern=.yyyy-MM-dd\n\nlog4j.appender.RFAS=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFAS.File=${hadoop.log.dir}/${hadoop.security.log.file}\nlog4j.appender.RFAS.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFAS.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\nlog4j.appender.RFAS.MaxFileSize=${hadoop.security.log.maxfilesize}\nlog4j.appender.RFAS.MaxBackupIndex=${hadoop.security.log.maxbackupindex}\n\n#\n# hdfs audit logging\n#\nhdfs.audit.logger=INFO,console\nlog4j.logger.org.apache.hadoop.hdfs.server.namenode.FSNamesystem.audit=${hdfs.audit.logger}\nlog4j.additivity.org.apache.hadoop.hdfs.server.namenode.FSNamesystem.audit=false\nlog4j.appender.DRFAAUDIT=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.DRFAAUDIT.File=${hadoop.log.dir}/hdfs-audit.log\nlog4j.appender.DRFAAUDIT.layout=org.apache.log4j.PatternLayout\nlog4j.appender.DRFAAUDIT.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n\nlog4j.appender.DRFAAUDIT.DatePattern=.yyyy-MM-dd\n\n#\n# mapred audit logging\n#\nmapred.audit.logger=INFO,console\nlog4j.logger.org.apache.hadoop.mapred.AuditLogger=${mapred.audit.logger}\nlog4j.additivity.org.apache.hadoop.mapred.AuditLogger=false\nlog4j.appender.MRAUDIT=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.MRAUDIT.File=${hadoop.log.dir}/mapred-audit.log\nlog4j.appender.MRAUDIT.layout=org.apache.log4j.PatternLayout\nlog4j.appender.MRAUDIT.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n\nlog4j.appender.MRAUDIT.DatePattern=.yyyy-MM-dd\n\n#\n# Rolling File Appender\n#\n\nlog4j.appender.RFA=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFA.File=${hadoop.log.dir}/${hadoop.log.file}\n\n# Logfile size and and 30-day backups\nlog4j.appender.RFA.MaxFileSize=256MB\nlog4j.appender.RFA.MaxBackupIndex=10\n\nlog4j.appender.RFA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} - %m%n\nlog4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n\n\n\n# Custom Logging levels\n\nhadoop.metrics.log.level=INFO\n#log4j.logger.org.apache.hadoop.mapred.JobTracker=DEBUG\n#log4j.logger.org.apache.hadoop.mapred.TaskTracker=DEBUG\n#log4j.logger.org.apache.hadoop.fs.FSNamesystem=DEBUG\nlog4j.logger.org.apache.hadoop.metrics2=${hadoop.metrics.log.level}\n\n# Jets3t library\nlog4j.logger.org.jets3t.service.impl.rest.httpclient.RestS3Service=ERROR\n\n#\n# Null Appender\n# Trap security logger on the hadoop client side\n#\nlog4j.appender.NullAppender=org.apache.log4j.varia.NullAppender\n\n#\n# Event Counter Appender\n# Sends counts of logging messages at different severity levels to Hadoop Metrics.\n#\nlog4j.appender.EventCounter=org.apache.hadoop.log.metrics.EventCounter\n\n# Removes \"deprecated\" messages\nlog4j.logger.org.apache.hadoop.conf.Configuration.deprecation=WARN\n\n#\n# HDFS block state change log from block manager\n#\n# Uncomment the following to suppress normal block state change\n# messages from BlockManager in NameNode.\n#log4j.logger.BlockStateChange=WARN\n    "
  },
  "hdfs-site": {
    "dfs.block.access.token.enable": "true",
    "dfs.blockreport.initialDelay": "120",
    "dfs.blocksize": "134217728",
    "dfs.client.read.shortcircuit": "true",
    "dfs.client.read.shortcircuit.streams.cache.size": "4096",
    "dfs.client.retry.policy.enabled": "false",
    "dfs.cluster.administrators": " hdfs",
    "dfs.content-summary.limit": "5000",
    "dfs.datanode.balance.bandwidthPerSec": "6250000",
    "dfs.datanode.data.dir": "/mnt/hadoop/hdfs/data",
    "dfs.datanode.data.dir.perm": "750",
    "dfs.datanode.du.reserved": "10737418240",
    "dfs.datanode.failed.volumes.tolerated": "0",
    "dfs.datanode.https.address": "0.0.0.0:50475",
    "dfs.datanode.ipc.address": "0.0.0.0:8010",
    "dfs.datanode.max.transfer.threads": "1024",
    "dfs.domain.socket.path": "/var/lib/hadoop-hdfs/dn_socket",
    "dfs.encrypt.data.transfer.cipher.suites": "AES/CTR/NoPadding",
    "dfs.encryption.key.provider.uri": "",
    "dfs.heartbeat.interval": "3",
    "dfs.hosts.exclude": "/etc/hadoop/conf/dfs.exclude",
    "dfs.http.policy": "HTTP_ONLY",
    "dfs.https.port": "50470",
    "dfs.journalnode.edits.dir": "/hadoop/hdfs/journalnode",
    "dfs.journalnode.http-address": "0.0.0.0:8480",
    "dfs.journalnode.https-address": "0.0.0.0:8481",
    "dfs.namenode.accesstime.precision": "0",
    "dfs.namenode.acls.enabled": "false",
    "dfs.namenode.audit.log.async": "true",
    "dfs.namenode.avoid.read.stale.datanode": "true",
    "dfs.namenode.avoid.write.stale.datanode": "true",
    "dfs.namenode.checkpoint.dir": "/mnt/hadoop/hdfs/namesecondary",
    "dfs.namenode.checkpoint.edits.dir": "${dfs.namenode.checkpoint.dir}",
    "dfs.namenode.checkpoint.period": "21600",
    "dfs.namenode.checkpoint.txns": "1000000",
    "dfs.namenode.fslock.fair": "false",
    "dfs.namenode.handler.count": "100",
    "dfs.namenode.http-address": "%NN_HOST%:50070",
    "dfs.namenode.https-address": "%NN_HOST%:50470",
    "dfs.namenode.name.dir": "/mnt/hadoop/hdfs/namenode",
    "dfs.namenode.name.dir.restore": "true",
    "dfs.namenode.rpc-address": "%NN_HOST%:8020",
    "dfs.namenode.safemode.threshold-pct": "1.0f",
    "dfs.namenode.secondary.http-address": "%SNN_HOST%:50090",
    "dfs.namenode.stale.datanode.interval": "30000",
    "dfs.namenode.startup.delay.block.deletion.sec": "3600",
    "dfs.namenode.write.stale.datanode.ratio": "1.0f",
    "dfs.permissions.enabled": "true",
    "dfs.permissions.superusergroup": "hdfs",
    "dfs.replication": "3",
    "dfs.replication.max": "50",
    "dfs.support.append": "true",
    "dfs.webhdfs.enabled": "true",
    "fs.permissions.umask-mode": "022",
    "nfs.exports.allowed.hosts": "* rw",
    "nfs.file.dump.dir": "/tmp/.hdfs-nfs"
  },
  "hive-env": {
    "content": "\n if [ \"$SERVICE\" = \"cli\" ]; then\n   if [ -z \"$DEBUG\" ]; then\n     export HADOOP_OPTS=\"$HADOOP_OPTS -XX:NewRatio=12 -Xms10m -XX:MaxHeapFreeRatio=40 -XX:MinHeapFreeRatio=15 -XX:+UseParNewGC -XX:-UseGCOverheadLimit\"\n   else\n     export HADOOP_OPTS=\"$HADOOP_OPTS -XX:NewRatio=12 -Xms10m -XX:MaxHeapFreeRatio=40 -XX:MinHeapFreeRatio=15 -XX:-UseGCOverheadLimit\"\n   fi\n fi\n\n# The heap size of the jvm stared by hive shell script can be controlled via:\n\nexport HADOOP_HEAPSIZE=\"{{hive_heapsize}}\"\nexport HADOOP_CLIENT_OPTS=\"-Xmx${HADOOP_HEAPSIZE}m $HADOOP_CLIENT_OPTS\"\n\n# Larger heap size may be required when running queries over large number of files or partitions.\n# By default hive shell scripts use a heap size of 256 (MB).  Larger heap size would also be\n# appropriate for hive server (hwi etc).\n\n\n# Set HADOOP_HOME to point to a specific hadoop install directory\nHADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\n\n# Hive Configuration Directory can be controlled by:\nexport HIVE_CONF_DIR={{hive_config_dir}}\n\n# Folder containing extra libraries required for hive compilation/execution can be controlled by:\nif [ \"${HIVE_AUX_JARS_PATH}\" != \"\" ]; then\n  export HIVE_AUX_JARS_PATH=${HIVE_AUX_JARS_PATH}\nelif [ -d \"/opt/bmr/hive/hcatalog/share/hcatalog\" ]; then\n  export HIVE_AUX_JARS_PATH=/opt/bmr/hive/hcatalog/share/hcatalog\nfi\n\nexport METASTORE_PORT={{hive_metastore_port}}\n    ",
    "hcat_log_dir": "/mnt/bmr/log/webhcat",
    "hcat_pid_dir": "/var/run/webhcat",
    "hcat_user": "hcat",
    "hive_ambari_database": "MySQL",
    "hive_database": "New MySQL Database",
    "hive_database_name": "hive",
    "hive_database_type": "mysql",
    "hive_exec_orc_storage_strategy": "SPEED",
    "hive_timeline_logging_enabled": "true",
    "hive_dbroot": "/usr/lib/hive/lib/",
    "hive_hostname": "%HIVE_HOST%",
    "hive_security_authorization": "None",
    "hive_log_dir": "/mnt/bmr/log/hive",
    "hive_pid_dir": "/var/run/hive",
    "hive_user": "hive",
    "webhcat_user": "hcat"
  },
  "hive-exec-log4j": {
    "content": "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Define some default values that can be overridden by system properties\n\nhive.log.threshold=ALL\nhive.root.logger=INFO,FA\nhive.log.dir=${java.io.tmpdir}/${user.name}\nhive.query.id=hadoop\nhive.log.file=${hive.query.id}.log\n\n# Define the root logger to the system property \"hadoop.root.logger\".\nlog4j.rootLogger=${hive.root.logger}, EventCounter\n\n# Logging Threshold\nlog4j.threshhold=${hive.log.threshold}\n\n#\n# File Appender\n#\n\nlog4j.appender.FA=org.apache.log4j.FileAppender\nlog4j.appender.FA.File=${hive.log.dir}/${hive.log.file}\nlog4j.appender.FA.layout=org.apache.log4j.PatternLayout\n\n# Pattern format: Date LogLevel LoggerName LogMessage\n#log4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\n# Debugging Pattern format\nlog4j.appender.FA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n\n\n\n#\n# console\n# Add \"console\" to rootlogger above if you want to use this\n#\n\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.target=System.err\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{2}: %m%n\n\n#custom logging levels\n#log4j.logger.xxx=DEBUG\n\n#\n# Event Counter Appender\n# Sends counts of logging messages at different severity levels to Hadoop Metrics.\n#\nlog4j.appender.EventCounter=org.apache.hadoop.hive.shims.HiveEventCounter\n\n\nlog4j.category.DataNucleus=ERROR,FA\nlog4j.category.Datastore=ERROR,FA\nlog4j.category.Datastore.Schema=ERROR,FA\nlog4j.category.JPOX.Datastore=ERROR,FA\nlog4j.category.JPOX.Plugin=ERROR,FA\nlog4j.category.JPOX.MetaData=ERROR,FA\nlog4j.category.JPOX.Query=ERROR,FA\nlog4j.category.JPOX.General=ERROR,FA\nlog4j.category.JPOX.Enhancer=ERROR,FA\n\n\n# Silence useless ZK logs\nlog4j.logger.org.apache.zookeeper.server.NIOServerCnxn=WARN,FA\nlog4j.logger.org.apache.zookeeper.ClientCnxnSocketNIO=WARN,FA\n\n    "
  },
  "hive-log4j": {
    "content": "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Define some default values that can be overridden by system properties\nhive.log.threshold=ALL\nhive.root.logger=INFO,DRFA\nhive.log.dir=${java.io.tmpdir}/${user.name}\nhive.log.file=hive.log\n\n# Define the root logger to the system property \"hadoop.root.logger\".\nlog4j.rootLogger=${hive.root.logger}, EventCounter\n\n# Logging Threshold\nlog4j.threshold=${hive.log.threshold}\n\n#\n# Daily Rolling File Appender\n#\n# Use the PidDailyerRollingFileAppend class instead if you want to use separate log files\n# for different CLI session.\n#\n# log4j.appender.DRFA=org.apache.hadoop.hive.ql.log.PidDailyRollingFileAppender\n\nlog4j.appender.DRFA=org.apache.log4j.DailyRollingFileAppender\n\nlog4j.appender.DRFA.File=${hive.log.dir}/${hive.log.file}\n\n# Rollver at midnight\nlog4j.appender.DRFA.DatePattern=.yyyy-MM-dd\n\n# 30-day backup\n#log4j.appender.DRFA.MaxBackupIndex=30\nlog4j.appender.DRFA.layout=org.apache.log4j.PatternLayout\n\n# Pattern format: Date LogLevel LoggerName LogMessage\n#log4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\n# Debugging Pattern format\nlog4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %-5p [%t]: %c{2} (%F:%M(%L)) - %m%n\n\n\n#\n# console\n# Add \"console\" to rootlogger above if you want to use this\n#\n\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.target=System.err\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} [%t]: %p %c{2}: %m%n\nlog4j.appender.console.encoding=UTF-8\n\n#custom logging levels\n#log4j.logger.xxx=DEBUG\n\n#\n# Event Counter Appender\n# Sends counts of logging messages at different severity levels to Hadoop Metrics.\n#\nlog4j.appender.EventCounter=org.apache.hadoop.hive.shims.HiveEventCounter\n\n\nlog4j.category.DataNucleus=ERROR,DRFA\nlog4j.category.Datastore=ERROR,DRFA\nlog4j.category.Datastore.Schema=ERROR,DRFA\nlog4j.category.JPOX.Datastore=ERROR,DRFA\nlog4j.category.JPOX.Plugin=ERROR,DRFA\nlog4j.category.JPOX.MetaData=ERROR,DRFA\nlog4j.category.JPOX.Query=ERROR,DRFA\nlog4j.category.JPOX.General=ERROR,DRFA\nlog4j.category.JPOX.Enhancer=ERROR,DRFA\n\n\n# Silence useless ZK logs\nlog4j.logger.org.apache.zookeeper.server.NIOServerCnxn=WARN,DRFA\nlog4j.logger.org.apache.zookeeper.ClientCnxnSocketNIO=WARN,DRFA\n    "
  },
  "hive-site": {
    "ambari.hive.db.schema.name": "hive",
    "datanucleus.cache.level2.type": "none",
    "datanucleus.connectionPool.minEvictableIdleTimeMillis": "800000",
    "datanucleus.connectionPool.testSQL": "SELECT 1",
    "datanucleus.connectionPool.timeBetweenEvictionRunsMillis": "800000",
    "datanucleus.connectionPoolingType": "DBCP",
    "fs.file.impl.disable.cache": "false",
    "fs.hdfs.impl.disable.cache": "false",
    "hive.auto.convert.join": "true",
    "hive.auto.convert.join.noconditionaltask": "true",
    "hive.auto.convert.join.noconditionaltask.size": "1000000000",
    "hive.auto.convert.sortmerge.join": "true",
    "hive.auto.convert.sortmerge.join.noconditionaltask": "true",
    "hive.auto.convert.sortmerge.join.to.mapjoin": "false",
    "hive.cbo.enable": "true",
    "hive.cli.print.header": "false",
    "hive.cluster.delegation.token.store.class": "org.apache.hadoop.hive.thrift.DBTokenStore",
    "hive.cluster.delegation.token.store.zookeeper.connectString": "localhost:2181",
    "hive.cluster.delegation.token.store.zookeeper.znode": "/hive/cluster/delegation",
    "hive.compactor.abortedtxn.threshold": "1000",
    "hive.compactor.check.interval": "300L",
    "hive.compactor.delta.num.threshold": "10",
    "hive.compactor.delta.pct.threshold": "0.1f",
    "hive.compactor.initiator.on": "false",
    "hive.compactor.worker.threads": "0",
    "hive.compactor.worker.timeout": "86400L",
    "hive.compute.query.using.stats": "true",
    "hive.convert.join.bucket.mapjoin.tez": "false",
    "hive.enforce.bucketing": "true",
    "hive.enforce.sorting": "true",
    "hive.enforce.sortmergebucketmapjoin": "false",
    "hive.exec.compress.intermediate": "false",
    "hive.exec.compress.output": "false",
    "hive.exec.dynamic.partition": "true",
    "hive.exec.dynamic.partition.mode": "nonstrict",
    "hive.exec.failure.hooks": "org.apache.hadoop.hive.ql.hooks.ATSHook",
    "hive.exec.max.created.files": "100000",
    "hive.exec.max.dynamic.partitions": "5000",
    "hive.exec.max.dynamic.partitions.pernode": "2000",
    "hive.exec.orc.compression.strategy": "SPEED",
    "hive.exec.orc.default.compress": "ZLIB",
    "hive.exec.orc.default.stripe.size": "67108864",
    "hive.exec.parallel": "false",
    "hive.exec.parallel.thread.number": "8",
    "hive.exec.post.hooks": "org.apache.hadoop.hive.ql.hooks.ATSHook",
    "hive.exec.pre.hooks": "org.apache.hadoop.hive.ql.hooks.ATSHook",
    "hive.exec.reducers.bytes.per.reducer": "67108864",
    "hive.exec.reducers.max": "1009",
    "hive.exec.scratchdir": "/tmp/hive",
    "hive.exec.submit.local.task.via.child": "true",
    "hive.exec.submitviachild": "false",
    "hive.execution.engine": "mr",
    "hive.fetch.task.aggr": "false",
    "hive.fetch.task.conversion": "more",
    "hive.fetch.task.conversion.threshold": "1073741824",
    "hive.heapsize": "1024",
    "hive.limit.optimize.enable": "true",
    "hive.limit.pushdown.memory.usage": "0.04",
    "hive.map.aggr": "true",
    "hive.map.aggr.hash.force.flush.memory.threshold": "0.9",
    "hive.map.aggr.hash.min.reduction": "0.5",
    "hive.map.aggr.hash.percentmemory": "0.5",
    "hive.mapjoin.bucket.cache.size": "10000",
    "hive.mapjoin.optimized.hashtable": "true",
    "hive.mapred.reduce.tasks.speculative.execution": "true",
    "hive.merge.mapfiles": "false",
    "hive.merge.mapredfiles": "false",
    "hive.merge.orcfile.stripe.level": "true",
    "hive.merge.rcfile.block.level": "true",
    "hive.merge.size.per.task": "256000000",
    "hive.merge.smallfiles.avgsize": "16000000",
    "hive.merge.tezfiles": "false",
    "hive.metastore.authorization.storage.checks": "false",
    "hive.metastore.cache.pinobjtypes": "Table,Database,Type,FieldSchema,Order",
    "hive.metastore.client.connect.retry.delay": "5",
    "hive.metastore.client.socket.timeout": "1800",
    "hive.metastore.connect.retries": "24",
    "hive.metastore.execute.setugi": "true",
    "hive.metastore.failure.retries": "24",
    "hive.metastore.pre.event.listeners": "org.apache.hadoop.hive.ql.security.authorization.AuthorizationPreEventListener",
    "hive.metastore.server.max.threads": "100000",
    "hive.metastore.uris": "thrift://%HIVE_METASTORE_HOST%:9083",
    "hive.metastore.warehouse.dir": "/apps/hive/warehouse",
    "hive.optimize.bucketmapjoin": "true",
    "hive.optimize.bucketmapjoin.sortedmerge": "true",
    "hive.optimize.constant.propagation": "true",
    "hive.optimize.index.filter": "true",
    "hive.optimize.mapjoin.mapreduce": "true",
    "hive.optimize.metadataonly": "true",
    "hive.optimize.null.scan": "true",
    "hive.optimize.reducededuplication": "true",
    "hive.optimize.reducededuplication.min.reducer": "4",
    "hive.optimize.sort.dynamic.partition": "false",
    "hive.orc.compute.splits.num.threads": "10",
    "hive.orc.splits.include.file.footer": "false",
    "hive.prewarm.enabled": "false",
    "hive.prewarm.numcontainers": "10",
    "hive.security.metastore.authenticator.manager": "org.apache.hadoop.hive.ql.security.HadoopDefaultMetastoreAuthenticator",
    "hive.security.metastore.authorization.auth.reads": "true",
    "hive.security.metastore.authorization.manager": "org.apache.hadoop.hive.ql.security.authorization.StorageBasedAuthorizationProvider,org.apache.hadoop.hive.ql.security.authorization.MetaStoreAuthzAPIAuthorizerEmbedOnly",
    "hive.server2.allow.user.substitution": "true",
    "hive.server2.enable.doAs": "true",
    "hive.server2.enable.impersonation": "true",
    "hive.server2.logging.operation.enabled": "true",
    "hive.server2.logging.operation.log.location": "${system:java.io.tmpdir}/${system:user.name}/operation_logs",
    "hive.server2.support.dynamic.service.discovery": "true",
    "hive.server2.table.type.mapping": "CLASSIC",
    "hive.server2.tez.default.queues": "default",
    "hive.server2.tez.initialize.default.sessions": "false",
    "hive.server2.tez.sessions.per.default.queue": "1",
    "hive.server2.thrift.http.path": "cliservice",
    "hive.server2.thrift.http.port": "10001",
    "hive.server2.thrift.max.worker.threads": "500",
    "hive.server2.thrift.port": "10000",
    "hive.server2.thrift.sasl.qop": "auth",
    "hive.server2.transport.mode": "binary",
    "hive.server2.use.SSL": "false",
    "hive.server2.zookeeper.namespace": "hiveserver2",
    "hive.smbjoin.cache.rows": "10000",
    "hive.stats.autogather": "true",
    "hive.stats.dbclass": "fs",
    "hive.stats.fetch.column.stats": "false",
    "hive.stats.fetch.partition.stats": "true",
    "hive.support.concurrency": "false",
    "hive.tez.auto.reducer.parallelism": "false",
    "hive.tez.container.size": "1024",
    "hive.tez.cpu.vcores": "-1",
    "hive.tez.dynamic.partition.pruning": "true",
    "hive.tez.dynamic.partition.pruning.max.data.size": "104857600",
    "hive.tez.dynamic.partition.pruning.max.event.size": "1048576",
    "hive.tez.input.format": "org.apache.hadoop.hive.ql.io.HiveInputFormat",
    "hive.tez.java.opts": "-server -Xmx545m -Djava.net.preferIPv4Stack=true -XX:NewRatio=8 -XX:+UseNUMA -XX:+UseParallelGC -XX:+PrintGCDetails -verbose:gc -XX:+PrintGCTimeStamps",
    "hive.tez.log.level": "INFO",
    "hive.tez.max.partition.factor": "2.0",
    "hive.tez.min.partition.factor": "0.25",
    "hive.tez.smb.number.waves": "0.5",
    "hive.txn.manager": "org.apache.hadoop.hive.ql.lockmgr.DummyTxnManager",
    "hive.txn.max.open.batch": "1000",
    "hive.txn.timeout": "300",
    "hive.user.install.directory": "/user/",
    "hive.vectorized.execution.enabled": "true",
    "hive.vectorized.execution.reduce.enabled": "false",
    "hive.vectorized.groupby.checkinterval": "4096",
    "hive.vectorized.groupby.flush.percent": "0.1",
    "hive.vectorized.groupby.maxentries": "100000",
    "hive.zookeeper.client.port": "2181",
    "hive.zookeeper.namespace": "hive_zookeeper_namespace",
    "hive.zookeeper.quorum": "localhost:2181",
    "javax.jdo.option.ConnectionDriverName": "com.mysql.jdbc.Driver",
    "javax.jdo.option.ConnectionPassword": "*Hive123",
    "javax.jdo.option.ConnectionURL": "jdbc:mysql://%HIVE_MYSQL_HOST%/hive?createDatabaseIfNotExist=true&characterEncoding=UTF-8",
    "javax.jdo.option.ConnectionUserName": "hive",
    "mapreduce.input.fileinputformat.list-status.num-threads": "5",
    "mapred.dfsclient.parallelism.max": "10"
  },
  "hue": {
    "hue.web.port": "8888"
  },
  "hue-site": {
    "app.black.list": "impala,pig,spark",
    "host": "%HUE_HOST%",
    "port": "8888"
  },
  "livy-site": {
    "livy.server.host": "%LIVY_HOST%",
    "livy.server.port": "8998",
    "livy.spark.master": "yarn",
    "livy.spark.deploy.mode": "cluster",
    "spark.home": "/opt/bmr/spark2",
    "hadoop.conf.dir": "/etc/hadoop/conf"
  },
  "kafka-broker": {
    "log.dirs": "/mnt/kafka-logs",
    "port": "9092",
    "zookeeper.connect": "%ZOOKEEPER_HOST%"
  },
  "kafka-env": {
    "content": "#!/bin/bash\n\n# Set KAFKA specific environment variables here.\n\n# The java implementation to use.\nexport JAVA_HOME={{java64_home}}\nexport PATH=$PATH:$JAVA_HOME/bin",
    "kafka_log_dir": "/mnt/bmr/log/kafka",
    "kafka_pid_dir": "/var/run/kafka",
    "kafka_user": "kafka"
  },
  "mapred-env": {
    "content": "\n# export JAVA_HOME=/home/y/libexec/jdk1.6.0/\n\nexport HADOOP_JOB_HISTORYSERVER_HEAPSIZE={{jobhistory_heapsize}}\n\nexport HADOOP_MAPRED_ROOT_LOGGER=INFO,RFA\n\n#export HADOOP_JOB_HISTORYSERVER_OPTS=\n#export HADOOP_MAPRED_LOG_DIR=\"\" # Where log files are stored.  $HADOOP_MAPRED_HOME/logs by default.\n#export HADOOP_JHS_LOGGER=INFO,RFA # Hadoop JobSummary logger.\n#export HADOOP_MAPRED_PID_DIR= # The pid files are stored. /tmp by default.\n#export HADOOP_MAPRED_IDENT_STRING= #A string representing this instance of hadoop. $USER by default\n#export HADOOP_MAPRED_NICENESS= #The scheduling priority for daemons. Defaults to 0.\nexport HADOOP_OPTS=\"$HADOOP_OPTS\"\n    ",
    "jobhistory_heapsize": "900",
    "mapred_log_dir_prefix": "/mnt/bmr/log/hadoop-mapreduce",
    "mapred_pid_dir_prefix": "/var/run/hadoop-mapreduce",
    "mapred_user": "mapred",
    "mapred_user_nofile_limit": "32768",
    "mapred_user_nproc_limit": "65536"
  },
  "mapred-site": {
    "mapreduce.admin.map.child.java.opts": "-server -XX:NewRatio=8 -Djava.net.preferIPv4Stack=true",
    "mapreduce.admin.reduce.child.java.opts": "-server -XX:NewRatio=8 -Djava.net.preferIPv4Stack=true",
    "mapreduce.admin.user.env": "LD_LIBRARY_PATH=/opt/bmr/hadoop/lib/native:/opt/bmr/hadoop/lib/native/Linux-amd64-64",
    "mapreduce.am.max-attempts": "5",
    "mapreduce.application.classpath": "/etc/hadoop/conf:$PWD/mr-framework/hadoop/share/hadoop/mapreduce/*:$PWD/mr-framework/hadoop/share/hadoop/mapreduce/lib/*:$PWD/mr-framework/hadoop/share/hadoop/common/*:$PWD/mr-framework/hadoop/share/hadoop/common/lib/*:$PWD/mr-framework/hadoop/share/hadoop/yarn/*:$PWD/mr-framework/hadoop/share/hadoop/yarn/lib/*:$PWD/mr-framework/hadoop/share/hadoop/hdfs/*:$PWD/mr-framework/hadoop/share/hadoop/hdfs/lib/*:/opt/bmr/hadoop/lib/hadoop-lzo-0.6.0.jar:/etc/hadoop/conf/secure:/opt/bmr/hbase/*:/opt/bmr/hbase/lib/*:/etc/hbase/conf",
    "mapreduce.application.framework.path": "/hdp/apps/mapreduce/mapreduce.tar.gz#mr-framework",
    "mapreduce.cluster.administrators": " hadoop",
    "mapreduce.framework.name": "yarn",
    "mapreduce.job.counters.max": "130",
    "mapreduce.job.emit-timeline-data": "false",
    "mapreduce.job.reduce.slowstart.completedmaps": "0.8",
    "mapreduce.jobhistory.address": "%HS_HOST%:8220",
    "mapreduce.jobhistory.bind-host": "0.0.0.0",
    "mapreduce.jobhistory.done-dir": "/mr-history/done",
    "mapreduce.jobhistory.intermediate-done-dir": "/mr-history/tmp",
    "mapreduce.jobhistory.recovery.enable": "true",
    "mapreduce.jobhistory.recovery.store.class": "org.apache.hadoop.mapreduce.v2.hs.HistoryServerLeveldbStateStoreService",
    "mapreduce.jobhistory.recovery.store.leveldb.path": "/hadoop/mapreduce/jhs",
    "mapreduce.jobhistory.webapp.address": "%HS_HOST%:8122",
    "mapreduce.map.java.opts": "-Xmx819m",
    "mapreduce.map.log.level": "INFO",
    "mapreduce.map.memory.mb": "1024",
    "mapreduce.map.output.compress": "true",
    "mapreduce.map.output.compress.codec": "org.apache.hadoop.io.compress.SnappyCodec",
    "mapreduce.map.sort.spill.percent": "0.7",
    "mapreduce.map.speculative": "true",
    "mapreduce.output.fileoutputformat.compress": "false",
    "mapreduce.output.fileoutputformat.compress.type": "BLOCK",
    "mapreduce.reduce.input.buffer.percent": "0.0",
    "mapreduce.reduce.java.opts": "-Xmx1228m",
    "mapreduce.reduce.log.level": "INFO",
    "mapreduce.reduce.memory.mb": "1536",
    "mapreduce.reduce.shuffle.fetch.retry.enabled": "1",
    "mapreduce.reduce.shuffle.fetch.retry.interval-ms": "1000",
    "mapreduce.reduce.shuffle.fetch.retry.timeout-ms": "30000",
    "mapreduce.reduce.shuffle.input.buffer.percent": "0.7",
    "mapreduce.reduce.shuffle.merge.percent": "0.66",
    "mapreduce.reduce.shuffle.parallelcopies": "30",
    "mapreduce.reduce.speculative": "true",
    "mapreduce.shuffle.port": "13562",
    "mapreduce.task.io.sort.factor": "100",
    "mapreduce.task.io.sort.mb": "128",
    "mapreduce.task.timeout": "300000",
    "yarn.app.mapreduce.am.admin-command-opts": " ",
    "yarn.app.mapreduce.am.command-opts": "-Xmx1228m",
    "yarn.app.mapreduce.am.log.level": "INFO",
    "yarn.app.mapreduce.am.resource.mb": "1536",
    "yarn.app.mapreduce.am.staging-dir": "/user"
  },
  "oozie-env": {
    "content": "\n#!/bin/bash\n\nif [ -d \"/usr/lib/bigtop-tomcat\" ]; then\n  export OOZIE_CONFIG=${OOZIE_CONFIG:-/etc/oozie/conf}\n  export CATALINA_BASE=${CATALINA_BASE:-{{oozie_server_dir}}}\n  export CATALINA_TMPDIR=${CATALINA_TMPDIR:-/var/lib/oozie}\n  export OOZIE_CATALINA_HOME=/usr/lib/bigtop-tomcat\nfi\n\n#Set JAVA HOME\nexport JAVA_HOME={{java_home}}\n\nexport JRE_HOME=${JAVA_HOME}\n\n# Set Oozie specific environment variables here.\n\n# Settings for the Embedded Tomcat that runs Oozie\n# Java System properties for Oozie should be specified in this variable\n#\n# export CATALINA_OPTS=\n\n# Oozie configuration file to load from Oozie configuration directory\n#\n# export OOZIE_CONFIG_FILE=oozie-site.xml\n\n# Oozie logs directory\n#\nexport OOZIE_LOG={{oozie_log_dir}}\n\n# Oozie pid directory\n#\nexport CATALINA_PID={{pid_file}}\n\n#Location of the data for oozie\nexport OOZIE_DATA={{oozie_data_dir}}\n\n# Oozie Log4J configuration file to load from Oozie configuration directory\n#\n# export OOZIE_LOG4J_FILE=oozie-log4j.properties\n\n# Reload interval of the Log4J configuration file, in seconds\n#\n# export OOZIE_LOG4J_RELOAD=10\n\n# The port Oozie server runs\n#\nexport OOZIE_HTTP_PORT={{oozie_server_port}}\n\n# The admin port Oozie server runs\n#\nexport OOZIE_ADMIN_PORT={{oozie_server_admin_port}}\n\n# The host name Oozie server runs on\n#\n# export OOZIE_HTTP_HOSTNAME=`hostname -f`\n\n# The base URL for callback URLs to Oozie\n#\n# export OOZIE_BASE_URL=\"http://${OOZIE_HTTP_HOSTNAME}:${OOZIE_HTTP_PORT}/oozie\"\nexport JAVA_LIBRARY_PATH={{hadoop_lib_home}}/native/Linux-amd64-64\n\n# At least 1 minute of retry time to account for server downtime during\n# upgrade/downgrade\nexport OOZIE_CLIENT_OPTS=\"${OOZIE_CLIENT_OPTS} -Doozie.connection.retry.count=5 \"\n\n# This is needed so that Oozie does not run into OOM or GC Overhead limit\n# exceeded exceptions. If the oozie server is handling large number of\n# workflows/coordinator jobs, the memory settings may need to be revised\nexport CATALINA_OPTS=\"${CATALINA_OPTS} -Xmx2048m -XX:MaxPermSize=256m \"\n    ",
    "oozie_admin_port": "11001",
    "oozie_data_dir": "/hadoop/oozie/data",
    "oozie_database": "New Derby Database",
    "oozie_derby_database": "Derby",
    "oozie_heapsize": "2048",
    "oozie_log_dir": "/mnt/bmr/log/oozie",
    "oozie_permsize": "256",
    "oozie_pid_dir": "/var/run/oozie",
    "oozie_user": "oozie"
  },
  "oozie-log4j": {
    "content": "\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License. See accompanying LICENSE file.\n#\n\n# If the Java System property 'oozie.log.dir' is not defined at Oozie start up time\n# XLogService sets its value to '${oozie.home}/logs'\n\nlog4j.appender.oozie=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.oozie.DatePattern='.'yyyy-MM-dd-HH\nlog4j.appender.oozie.File=${oozie.log.dir}/oozie.log\nlog4j.appender.oozie.Append=true\nlog4j.appender.oozie.layout=org.apache.log4j.PatternLayout\nlog4j.appender.oozie.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - SERVER[${oozie.instance.id}] %m%n\n\nlog4j.appender.oozieops=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.oozieops.DatePattern='.'yyyy-MM-dd\nlog4j.appender.oozieops.File=${oozie.log.dir}/oozie-ops.log\nlog4j.appender.oozieops.Append=true\nlog4j.appender.oozieops.layout=org.apache.log4j.PatternLayout\nlog4j.appender.oozieops.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - %m%n\n\nlog4j.appender.oozieinstrumentation=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.oozieinstrumentation.DatePattern='.'yyyy-MM-dd\nlog4j.appender.oozieinstrumentation.File=${oozie.log.dir}/oozie-instrumentation.log\nlog4j.appender.oozieinstrumentation.Append=true\nlog4j.appender.oozieinstrumentation.layout=org.apache.log4j.PatternLayout\nlog4j.appender.oozieinstrumentation.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - %m%n\n\nlog4j.appender.oozieaudit=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.oozieaudit.DatePattern='.'yyyy-MM-dd\nlog4j.appender.oozieaudit.File=${oozie.log.dir}/oozie-audit.log\nlog4j.appender.oozieaudit.Append=true\nlog4j.appender.oozieaudit.layout=org.apache.log4j.PatternLayout\nlog4j.appender.oozieaudit.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - %m%n\n\nlog4j.appender.openjpa=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.openjpa.DatePattern='.'yyyy-MM-dd\nlog4j.appender.openjpa.File=${oozie.log.dir}/oozie-jpa.log\nlog4j.appender.openjpa.Append=true\nlog4j.appender.openjpa.layout=org.apache.log4j.PatternLayout\nlog4j.appender.openjpa.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - %m%n\n\nlog4j.logger.openjpa=INFO, openjpa\nlog4j.logger.oozieops=INFO, oozieops\nlog4j.logger.oozieinstrumentation=ALL, oozieinstrumentation\nlog4j.logger.oozieaudit=ALL, oozieaudit\nlog4j.logger.org.apache.oozie=INFO, oozie\nlog4j.logger.org.apache.hadoop=WARN, oozie\nlog4j.logger.org.mortbay=WARN, oozie\nlog4j.logger.org.hsqldb=WARN, oozie\nlog4j.logger.org.apache.hadoop.security.authentication.server=INFO, oozie\n    "
  },
  "oozie-site": {
    "oozie.action.max.output.data": "20480",
    "oozie.authentication.simple.anonymous.allowed": "true",
    "oozie.base.url": "http://%OOZIE_HOST%:11000/oozie",
    "oozie.bmr.shell.action.timeout": "0",
    "oozie.credentials.credentialclasses": "hcat=org.apache.oozie.action.hadoop.HCatCredentials",
    "oozie.db.schema.name": "oozie",
    "oozie.service.ActionService.executor.ext.classes": "\n      org.apache.oozie.action.email.EmailActionExecutor,\n      org.apache.oozie.action.hadoop.HiveActionExecutor,\n      org.apache.oozie.action.hadoop.ShellActionExecutor,\n      org.apache.oozie.action.hadoop.SqoopActionExecutor,\n      org.apache.oozie.action.hadoop.DistcpActionExecutor\n",
    "oozie.service.AuthorizationService.security.enabled": "false",
    "oozie.service.CallableQueueService.callable.concurrency": "3",
    "oozie.service.CallableQueueService.queue.size": "1000",
    "oozie.service.CallableQueueService.threads": "10",
    "oozie.service.HadoopAccessorService.hadoop.configurations": "*=/etc/hadoop/conf",
    "oozie.service.JPAService.create.db.schema": "false",
    "oozie.service.JPAService.jdbc.driver": "org.apache.derby.jdbc.EmbeddedDriver",
    "oozie.service.JPAService.jdbc.password": "oozie",
    "oozie.service.JPAService.jdbc.url": "jdbc:derby:${oozie.data.dir}/${oozie.db.schema.name}-db;create=true",
    "oozie.service.JPAService.jdbc.username": "oozie",
    "oozie.service.JPAService.pool.max.active.conn": "10",
    "oozie.service.ProxyUserService.proxyuser.hue.groups": "*",
    "oozie.service.ProxyUserService.proxyuser.hue.hosts": "*",
    "oozie.service.PurgeService.older.than": "30",
    "oozie.service.PurgeService.purge.interval": "3600",
    "oozie.service.SchemaService.wf.ext.schemas": "shell-action-0.1.xsd,shell-action-0.2.xsd,shell-action-0.3.xsd,email-action-0.1.xsd,email-action-0.2.xsd,hive-action-0.2.xsd,hive-action-0.3.xsd,hive-action-0.4.xsd,hive-action-0.5.xsd,sqoop-action-0.2.xsd,sqoop-action-0.3.xsd,sqoop-action-0.4.xsd,ssh-action-0.1.xsd,ssh-action-0.2.xsd,distcp-action-0.1.xsd,distcp-action-0.2.xsd,oozie-sla-0.1.xsd,oozie-sla-0.2.xsd",
    "oozie.service.URIHandlerService.uri.handlers": "org.apache.oozie.dependency.FSURIHandler,org.apache.oozie.dependency.HCatURIHandler",
    "oozie.service.WorkflowAppService.system.libpath": "/user/${user.name}/share/lib",
    "oozie.service.coord.check.maximum.frequency": "false",
    "oozie.service.coord.normal.default.timeout": "120",
    "oozie.service.coord.push.check.requeue.interval": "30000",
    "oozie.services": "org.apache.oozie.service.SchedulerService,\n      org.apache.oozie.service.InstrumentationService,\n      org.apache.oozie.service.MemoryLocksService,\n      org.apache.oozie.service.UUIDService,\n      org.apache.oozie.service.ELService,\n      org.apache.oozie.service.AuthorizationService,\n      org.apache.oozie.service.UserGroupInformationService,\n      org.apache.oozie.service.HadoopAccessorService,\n      org.apache.oozie.service.JobsConcurrencyService,\n      org.apache.oozie.service.URIHandlerService,\n      org.apache.oozie.service.DagXLogInfoService,\n      org.apache.oozie.service.SchemaService,\n      org.apache.oozie.service.LiteWorkflowAppService,\n      org.apache.oozie.service.JPAService,\n      org.apache.oozie.service.StoreService,\n      org.apache.oozie.service.SLAStoreService,\n      org.apache.oozie.service.DBLiteWorkflowStoreService,\n      org.apache.oozie.service.CallbackService,\n      org.apache.oozie.service.ShareLibService,\n      org.apache.oozie.service.CallableQueueService,\n      org.apache.oozie.service.ActionService,\n      org.apache.oozie.service.ActionCheckerService,\n      org.apache.oozie.service.RecoveryService,\n      org.apache.oozie.service.PurgeService,\n      org.apache.oozie.service.CoordinatorEngineService,\n      org.apache.oozie.service.BundleEngineService,\n      org.apache.oozie.service.DagEngineService,\n      org.apache.oozie.service.CoordMaterializeTriggerService,\n      org.apache.oozie.service.StatusTransitService,\n      org.apache.oozie.service.PauseTransitService,\n      org.apache.oozie.service.GroupsService,\n      org.apache.oozie.service.ProxyUserService,\n      org.apache.oozie.service.XLogStreamingService,\n      org.apache.oozie.service.JvmPauseMonitorService",
    "oozie.services.ext": "org.apache.oozie.service.JMSAccessorService,org.apache.oozie.service.PartitionDependencyManagerService,org.apache.oozie.service.HCatAccessorService",
    "oozie.system.id": "oozie-${user.name}",
    "oozie.systemmode": "NORMAL",
    "use.system.libpath.for.mapreduce.and.pig.jobs": "false",
    "oozie.authentication.kerberos.keytab": "/etc/security/keytabs/spnego.service.keytab",
    "oozie.service.HadoopAccessorService.keytab.file": "/etc/security/keytabs/oozie.service.keytab"
  },
  "openvpn": {
    "openvpn.server.port": "8900"
  },
  "pig-env": {
    "content": "\nJAVA_HOME={{java64_home}}\nHADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\n\nif [ -d \"/usr/lib/tez\" ]; then\n  PIG_OPTS=\"$PIG_OPTS -Dmapreduce.framework.name=yarn\"\nfi\n    "
  },
  "pig-log4j": {
    "content": "\n#\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n#\n#\n\n# ***** Set root logger level to DEBUG and its only appender to A.\nlog4j.logger.org.apache.pig=info, A\n\n# ***** A is set to be a ConsoleAppender.\nlog4j.appender.A=org.apache.log4j.ConsoleAppender\n# ***** A uses PatternLayout.\nlog4j.appender.A.layout=org.apache.log4j.PatternLayout\nlog4j.appender.A.layout.ConversionPattern=%-4r [%t] %-5p %c %x - %m%n\n    "
  },
  "pig-properties": {
    "content": "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\n# Pig default configuration file. All values can be overwritten by pig.properties and command line arguments.\n# see bin/pig -help\n\n# brief logging (no timestamps)\nbrief=false\n\n# debug level, INFO is default\ndebug=INFO\n\n# verbose print all log messages to screen (default to print only INFO and above to screen)\nverbose=false\n\n# exectype local|mapreduce, mapreduce is default\nexectype=mapreduce\n\n# Enable insertion of information about script into hadoop job conf \npig.script.info.enabled=true\n\n# Do not spill temp files smaller than this size (bytes)\npig.spill.size.threshold=5000000\n\n# EXPERIMENT: Activate garbage collection when spilling a file bigger than this size (bytes)\n# This should help reduce the number of files being spilled.\npig.spill.gc.activation.size=40000000\n\n# the following two parameters are to help estimate the reducer number\npig.exec.reducers.bytes.per.reducer=1000000000\npig.exec.reducers.max=999\n\n# Temporary location to store the intermediate data.\npig.temp.dir=/tmp/\n\n# Threshold for merging FRJoin fragment files\npig.files.concatenation.threshold=100\npig.optimistic.files.concatenation=false;\n\npig.disable.counter=false\n\n# Avoid pig failures when multiple jobs write to the same location\npig.location.check.strict=false\n\nhcat.bin=/usr/bin/hcat\n\n    "
  },
  "spark2": {
    "history.port": "8701",
    "thriftserver.port": "8702",
    "ui.port": "8700"
  },
  "spark2-defaults": {
    "spark.eventLog.dir": "hdfs://%NN_HOST%:8020/spark-history",
    "spark.eventLog.enabled": "true",
    "spark.history.fs.logDirectory": "hdfs://%NN_HOST%:8020/spark-history",
    "spark.history.provider": "org.apache.spark.deploy.history.FsHistoryProvider",
    "spark.history.ui.port": "8701",
    "spark.ui.port": "8700",
    "spark.yarn.containerLauncherMaxThreads": "25",
    "spark.yarn.driver.memoryOverhead": "384",
    "spark.yarn.executor.memoryOverhead": "384",
    "spark.yarn.historyServer.address": "{{spark_history_server_host}}:{{spark_history_ui_port}}",
    "spark.yarn.max.executor.failures": "3",
    "spark.yarn.preserve.staging.files": "false",
    "spark.yarn.queue": "default",
    "spark.yarn.scheduler.heartbeat.interval-ms": "5000",
    "spark.yarn.submit.file.replication": "3",
    "spark.yarn.dist.files": "/opt/bmr/spark2/conf/hive-site.xml",
    "spark.jars": "/opt/bmr/spark2/jars/spark-streaming-kafka-0-10-assembly_2.11-2.1.0.jar",
    "spark.executor.extraClassPath": "/opt/bmr/hadoop/lib/hadoop-lzo-0.6.0.jar:/opt/bmr/spark2/jars/datanucleus-api-jdo-3.2.6.jar:/opt/bmr/spark2/jars/datanucleus-core-3.2.10.jar:/opt/bmr/spark2/jars/datanucleus-rdbms-3.2.9.jar:",
    "spark.driver.extraClassPath": "/opt/bmr/hadoop/lib/hadoop-lzo-0.6.0.jar:/opt/bmr/spark2/jars/datanucleus-api-jdo-3.2.6.jar:/opt/bmr/spark2/jars/datanucleus-core-3.2.10.jar:/opt/bmr/spark2/jars/datanucleus-rdbms-3.2.9.jar:"
  },
  "spark2-env": {
    "content": "\n#!/usr/bin/env bash\n\n# This file is sourced when running various Spark programs.\n# Copy it as spark-env.sh and edit that to configure Spark for your site.\n\n# Options read in YARN client mode\n#SPARK_EXECUTOR_INSTANCES=\"2\" #Number of workers to start (Default: 2)\n#SPARK_EXECUTOR_CORES=\"1\" #Number of cores for the workers (Default: 1).\n#SPARK_EXECUTOR_MEMORY=\"1G\" #Memory per Worker (e.g. 1000M, 2G) (Default: 1G)\n#SPARK_DRIVER_MEMORY=\"512 Mb\" #Memory for Master (e.g. 1000M, 2G) (Default: 512 Mb)\n#SPARK_YARN_APP_NAME=\"spark\" #The name of your application (Default: Spark)\n#SPARK_YARN_QUEUE=\"~@~Xdefault~@~Y\" #The hadoop queue to use for allocation requests (Default: @~Xdefault~@~Y)\n#SPARK_YARN_DIST_FILES=\"\" #Comma separated list of files to be distributed with the job.\n#SPARK_YARN_DIST_ARCHIVES=\"\" #Comma separated list of archives to be distributed with the job.\n\n# Generic options for the daemons used in the standalone deploy mode\n\n# Alternate conf dir. (Default: ${SPARK_HOME}/conf)\nexport HDP_VERSION=\"2.4.0.0-169\"\nexport LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/opt/bmr/hadoop/lib/native:/opt/bmr/hadoop/lib/native/Linux-amd64-64\nexport SPARK_CONF_DIR=${SPARK_CONF_DIR:-{{spark_home}}/conf}\n\n# Where log files are stored.(Default:${SPARK_HOME}/logs)\n#export SPARK_LOG_DIR=${SPARK_HOME:-{{spark_home}}}/logs\nexport SPARK_LOG_DIR={{spark_log_dir}}\n\n# Where the pid file is stored. (Default: /tmp)\nexport SPARK_PID_DIR={{spark_pid_dir}}\n\n# A string representing this instance of spark.(Default: $USER)\nSPARK_IDENT_STRING=$USER\n\n# The scheduling priority for daemons. (Default: 0)\nSPARK_NICENESS=0\n\nexport HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\nexport HADOOP_CONF_DIR=${HADOOP_CONF_DIR:-{{hadoop_conf_dir}}}\n\n# The java implementation to use.\nexport JAVA_HOME={{java_home}}\n\nif [ -d \"/etc/tez/conf/\" ]; then\n  export TEZ_CONF_DIR=/etc/tez/conf\nelse\n  export TEZ_CONF_DIR=\nfi",
    "spark_group": "spark",
    "spark_log_dir": "/mnt/bmr/log/spark",
    "spark_pid_dir": "/var/run/spark",
    "spark_thrift_cmd_opts": "",
    "spark_user": "spark"
  },
  "spark2-hive-site-override": {
    "hive.metastore.client.connect.retry.delay": "5",
    "hive.metastore.client.socket.timeout": "1800",
    "hive.server2.enable.doAs": "false",
    "hive.server2.thrift.port": "10005",
    "hive.server2.transport.mode": "binary",
    "javax.jdo.option.ConnectionDriverName": "com.mysql.jdbc.Driver",
    "javax.jdo.option.ConnectionPassword": "*Hive123",
    "javax.jdo.option.ConnectionURL": "jdbc:mysql://%HIVE_MYSQL_HOST%/hive?createDatabaseIfNotExist=true&characterEncoding=UTF-8",
    "javax.jdo.option.ConnectionUserName": "hive"
  },
  "spark2-log4j-properties": {
    "content": "\n# Set everything to be logged to the console\nlog4j.rootCategory=INFO, console\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.target=System.err\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{1}: %m%n\n\n# Settings to quiet third party logs that are too verbose\nlog4j.logger.org.eclipse.jetty=WARN\nlog4j.logger.org.eclipse.jetty.util.component.AbstractLifeCycle=ERROR\nlog4j.logger.org.apache.spark.repl.SparkIMain$exprTyper=INFO\nlog4j.logger.org.apache.spark.repl.SparkILoop$SparkILoopInterpreter=INFO"
  },
  "spark2-metrics-properties": {
    "content": "\n# syntax: [instance].sink|source.[name].[options]=[value]\n\n# This file configures Spark's internal metrics system. The metrics system is\n# divided into instances which correspond to internal components.\n# Each instance can be configured to report its metrics to one or more sinks.\n# Accepted values for [instance] are \"master\", \"worker\", \"executor\", \"driver\",\n# and \"applications\". A wild card \"*\" can be used as an instance name, in\n# which case all instances will inherit the supplied property.\n#\n# Within an instance, a \"source\" specifies a particular set of grouped metrics.\n# there are two kinds of sources:\n# 1. Spark internal sources, like MasterSource, WorkerSource, etc, which will\n# collect a Spark component's internal state. Each instance is paired with a\n# Spark source that is added automatically.\n# 2. Common sources, like JvmSource, which will collect low level state.\n# These can be added through configuration options and are then loaded\n# using reflection.\n#\n# A \"sink\" specifies where metrics are delivered to. Each instance can be\n# assigned one or more sinks.\n#\n# The sink|source field specifies whether the property relates to a sink or\n# source.\n#\n# The [name] field specifies the name of source or sink.\n#\n# The [options] field is the specific property of this source or sink. The\n# source or sink is responsible for parsing this property.\n#\n# Notes:\n# 1. To add a new sink, set the \"class\" option to a fully qualified class\n# name (see examples below).\n# 2. Some sinks involve a polling period. The minimum allowed polling period\n# is 1 second.\n# 3. Wild card properties can be overridden by more specific properties.\n# For example, master.sink.console.period takes precedence over\n# *.sink.console.period.\n# 4. A metrics specific configuration\n# \"spark.metrics.conf=${SPARK_HOME}/conf/metrics.properties\" should be\n# added to Java properties using -Dspark.metrics.conf=xxx if you want to\n# customize metrics system. You can also put the file in ${SPARK_HOME}/conf\n# and it will be loaded automatically.\n# 5. MetricsServlet is added by default as a sink in master, worker and client\n# driver, you can send http request \"/metrics/json\" to get a snapshot of all the\n# registered metrics in json format. For master, requests \"/metrics/master/json\" and\n# \"/metrics/applications/json\" can be sent seperately to get metrics snapshot of\n# instance master and applications. MetricsServlet may not be configured by self.\n#\n\n## List of available sinks and their properties.\n\n# org.apache.spark.metrics.sink.ConsoleSink\n# Name: Default: Description:\n# period 10 Poll period\n# unit seconds Units of poll period\n\n# org.apache.spark.metrics.sink.CSVSink\n# Name: Default: Description:\n# period 10 Poll period\n# unit seconds Units of poll period\n# directory /tmp Where to store CSV files\n\n# org.apache.spark.metrics.sink.GangliaSink\n# Name: Default: Description:\n# host NONE Hostname or multicast group of Ganglia server\n# port NONE Port of Ganglia server(s)\n# period 10 Poll period\n# unit seconds Units of poll period\n# ttl 1 TTL of messages sent by Ganglia\n# mode multicast Ganglia network mode ('unicast' or 'multicast')\n\n# org.apache.spark.metrics.sink.JmxSink\n\n# org.apache.spark.metrics.sink.MetricsServlet\n# Name: Default: Description:\n# path VARIES* Path prefix from the web server root\n# sample false Whether to show entire set of samples for histograms ('false' or 'true')\n#\n# * Default path is /metrics/json for all instances except the master. The master has two paths:\n# /metrics/aplications/json # App information\n# /metrics/master/json # Master information\n\n# org.apache.spark.metrics.sink.GraphiteSink\n# Name: Default: Description:\n# host NONE Hostname of Graphite server\n# port NONE Port of Graphite server\n# period 10 Poll period\n# unit seconds Units of poll period\n# prefix EMPTY STRING Prefix to prepend to metric name\n\n## Examples\n# Enable JmxSink for all instances by class name\n#*.sink.jmx.class=org.apache.spark.metrics.sink.JmxSink\n\n# Enable ConsoleSink for all instances by class name\n#*.sink.console.class=org.apache.spark.metrics.sink.ConsoleSink\n\n# Polling period for ConsoleSink\n#*.sink.console.period=10\n\n#*.sink.console.unit=seconds\n\n# Master instance overlap polling period\n#master.sink.console.period=15\n\n#master.sink.console.unit=seconds\n\n# Enable CsvSink for all instances\n#*.sink.csv.class=org.apache.spark.metrics.sink.CsvSink\n\n# Polling period for CsvSink\n#*.sink.csv.period=1\n\n#*.sink.csv.unit=minutes\n\n# Polling directory for CsvSink\n#*.sink.csv.directory=/tmp/\n\n# Worker instance overlap polling period\n#worker.sink.csv.period=10\n\n#worker.sink.csv.unit=minutes\n\n# Enable jvm source for instance master, worker, driver and executor\n#master.source.jvm.class=org.apache.spark.metrics.source.JvmSource\n\n#worker.source.jvm.class=org.apache.spark.metrics.source.JvmSource\n\n#driver.source.jvm.class=org.apache.spark.metrics.source.JvmSource\n\n#executor.source.jvm.class=org.apache.spark.metrics.source.JvmSource"
  },
  "spark2-thrift-fairscheduler": {
    "fairscheduler_content": "<?xml version=\"1.0\"?>\n            <allocations>\n            <pool name=\"default\">\n            <schedulingMode>FAIR</schedulingMode>\n            <weight>1</weight>\n            <minShare>2</minShare>\n            </pool>\n            </allocations>"
  },
  "spark2-thrift-sparkconf": {
    "spark.dynamicAllocation.enabled": "true",
    "spark.dynamicAllocation.initialExecutors": "0",
    "spark.dynamicAllocation.maxExecutors": "10",
    "spark.dynamicAllocation.minExecutors": "0",
    "spark.eventLog.dir": "{{spark_history_dir}}",
    "spark.eventLog.enabled": "true",
    "spark.executor.memory": "1g",
    "spark.history.fs.logDirectory": "{{spark_history_dir}}",
    "spark.history.provider": "org.apache.spark.deploy.history.FsHistoryProvider",
    "spark.master": "{{spark_thrift_master}}",
    "spark.scheduler.allocation.file": "{{spark_conf}}/spark-thrift-fairscheduler.xml",
    "spark.scheduler.mode": "FAIR",
    "spark.shuffle.service.enabled": "true",
    "spark.yarn.am.memory": "512m",
    "spark.yarn.queue": "default"
  },
  "ssl-client": {
    "ssl.client.keystore.location": "/etc/security/clientKeys/keystore.jks",
    "ssl.client.keystore.type": "jks",
    "ssl.client.truststore.location": "/etc/security/clientKeys/all.jks",
    "ssl.client.truststore.reload.interval": "10000",
    "ssl.client.truststore.type": "jks"
  },
  "ssl-server": {
    "ssl.server.keystore.location": "/etc/security/serverKeys/keystore.jks",
    "ssl.server.keystore.type": "jks",
    "ssl.server.truststore.location": "/etc/security/serverKeys/all.jks",
    "ssl.server.truststore.reload.interval": "10000",
    "ssl.server.truststore.type": "jks"
  },
  "tez-env": {
    "tez_user": "tez"
  },
  "tez-site": {
    "tez.am.am-rm.heartbeat.interval-ms.max": "250",
    "tez.am.container.idle.release-timeout-max.millis": "20000",
    "tez.am.container.idle.release-timeout-min.millis": "10000",
    "tez.am.container.reuse.enabled": "true",
    "tez.am.container.reuse.locality.delay-allocation-millis": "250",
    "tez.am.container.reuse.non-local-fallback.enabled": "false",
    "tez.am.container.reuse.rack-fallback.enabled": "true",
    "tez.am.launch.cluster-default.cmd-opts": "-server -Djava.net.preferIPv4Stack=true",
    "tez.am.launch.cmd-opts": "-XX:+PrintGCDetails -verbose:gc -XX:+PrintGCTimeStamps -XX:+UseNUMA -XX:+UseParallelGC",
    "tez.am.launch.env": "LD_LIBRARY_PATH=/opt/bmr/hadoop/lib/native:/opt/bmr/hadoop/lib/native/Linux-amd64-64",
    "tez.am.log.level": "INFO",
    "tez.am.max.app.attempts": "2",
    "tez.am.maxtaskfailures.per.node": "10",
    "tez.am.resource.memory.mb": "2048",
    "tez.cluster.additional.classpath.prefix": "/opt/bmr/hadoop/lib/hadoop-lzo-0.6.0.jar:/opt/bmr/hadoop/share/hadoop/common/hadoop-common-2.7.1.jar:/opt/bmr/hadoop/share/hadoop/common/lib/htrace-core-3.1.0-incubating.jar:/etc/hadoop/conf/secure",
    "tez.counters.max": "2000",
    "tez.counters.max.groups": "1000",
    "tez.generate.debug.artifacts": "false",
    "tez.grouping.max-size": "1073741824",
    "tez.grouping.min-size": "16777216",
    "tez.grouping.split-waves": "1.7",
    "tez.history.logging.service.class": "org.apache.tez.dag.history.logging.ats.ATSHistoryLoggingService",
    "tez.lib.uris": "/hdp/apps/tez/tez.tar.gz",
    "tez.runtime.compress": "true",
    "tez.runtime.compress.codec": "org.apache.hadoop.io.compress.SnappyCodec",
    "tez.runtime.io.sort.mb": "819",
    "tez.runtime.unordered.output.buffer.size-mb": "100",
    "tez.session.am.dag.submit.timeout.secs": "300",
    "tez.session.client.timeout.secs": "-1",
    "tez.shuffle-vertex-manager.max-src-fraction": "0.4",
    "tez.shuffle-vertex-manager.min-src-fraction": "0.2",
    "tez.staging-dir": "/tmp/${user.name}/staging",
    "tez.task.am.heartbeat.counter.interval-ms.max": "4000",
    "tez.task.get-task.sleep.interval-ms.max": "200",
    "tez.task.launch.cluster-default.cmd-opts": "-server -Djava.net.preferIPv4Stack=true",
    "tez.task.launch.cmd-opts": "-XX:+PrintGCDetails -verbose:gc -XX:+PrintGCTimeStamps -XX:+UseNUMA -XX:+UseParallelGC",
    "tez.task.launch.env": "LD_LIBRARY_PATH=/opt/bmr/hadoop/lib/native:/opt/bmr/hadoop/lib/native/Linux-amd64-64",
    "tez.task.max-events-per-heartbeat": "500",
    "tez.task.resource.memory.mb": "2048"
  },
  "webhcat-env": {
    "content": "\n# The file containing the running pid\nPID_FILE={{webhcat_pid_file}}\n\nTEMPLETON_LOG_DIR={{templeton_log_dir}}/\n\n\nWEBHCAT_LOG_DIR={{templeton_log_dir}}/\n\n# The console error log\nERROR_LOG={{templeton_log_dir}}/webhcat-console-error.log\n\n# The console log\nCONSOLE_LOG={{templeton_log_dir}}/webhcat-console.log\n\n#TEMPLETON_JAR=templeton_jar_name\n\n#HADOOP_PREFIX=hadoop_prefix\n\n#HCAT_PREFIX=hive_prefix\n\n# Set HADOOP_HOME to point to a specific hadoop install directory\nexport HADOOP_HOME={{hadoop_home}}\n    "
  },
  "webhcat-site": {
    "templeton.exec.timeout": "60000",
    "templeton.hadoop": "/opt/bmr/hadoop/bin/hadoop",
    "templeton.hadoop.conf.dir": "/etc/hadoop/conf",
    "templeton.hcat": "/opt/bmr/hive/hcatalog/bin/hcat",
    "templeton.hcat.home": "hive.tar.gz/hive/hcatalog",
    "templeton.hive.archive": "hdfs:///hdp/apps/hive/hive.tar.gz",
    "templeton.hive.home": "hive.tar.gz/hive",
    "templeton.hive.path": "hive.tar.gz/hive/bin/hive",
    "templeton.jar": "/opt/bmr/hive/hcatalog/share/webhcat/svr/lib/hive-webhcat-*.jar",
    "templeton.libjars": "/opt/bmr/zookeeper/zookeeper-3.4.6.jar",
    "templeton.override.enabled": "false",
    "templeton.pig.archive": "hdfs:///hdp/apps/pig/pig.tar.gz",
    "templeton.pig.path": "pig.tar.gz/pig/bin/pig",
    "templeton.port": "50111",
    "templeton.sqoop.archive": "hdfs:///hdp/apps/sqoop/sqoop.tar.gz",
    "templeton.sqoop.home": "sqoop.tar.gz/sqoop",
    "templeton.sqoop.path": "sqoop.tar.gz/sqoop/bin/sqoop",
    "templeton.storage.class": "org.apache.hive.hcatalog.templeton.tool.ZooKeeperStorage",
    "templeton.streaming.jar": "hdfs:///hdp/apps/mapreduce/hadoop-streaming-2.7.1.jar",
    "templeton.zookeeper.hosts": "%ZOOKEEPER_HOST%:2181",
    "webhcat.proxyuser.hue.groups": "*",
    "webhcat.proxyuser.hue.hosts": "*"
  },
  "yarn-env": {
    "apptimelineserver_heapsize": "1024",
    "content": "\nexport HADOOP_YARN_HOME={{hadoop_yarn_home}}\nexport YARN_LOG_DIR={{yarn_log_dir_prefix}}/$USER\nexport YARN_PID_DIR={{yarn_pid_dir_prefix}}/$USER\nexport HADOOP_LIBEXEC_DIR={{hadoop_libexec_dir}}\nexport JAVA_HOME={{java64_home}}\n\n# User for YARN daemons\nexport HADOOP_YARN_USER=${HADOOP_YARN_USER:-yarn}\n\n# resolve links - $0 may be a softlink\nexport YARN_CONF_DIR=\"${YARN_CONF_DIR:-$HADOOP_YARN_HOME/conf}\"\n\n# some Java parameters\n# export JAVA_HOME=/home/y/libexec/jdk1.6.0/\nif [ \"$JAVA_HOME\" != \"\" ]; then\n  #echo \"run java in $JAVA_HOME\"\n  JAVA_HOME=$JAVA_HOME\nfi\n\nif [ \"$JAVA_HOME\" = \"\" ]; then\n  echo \"Error: JAVA_HOME is not set.\"\n  exit 1\nfi\n\nJAVA=$JAVA_HOME/bin/java\nJAVA_HEAP_MAX=-Xmx1000m\n\n# For setting YARN specific HEAP sizes please use this\n# Parameter and set appropriately\nYARN_HEAPSIZE={{yarn_heapsize}}\n\n# check envvars which might override default args\nif [ \"$YARN_HEAPSIZE\" != \"\" ]; then\n  JAVA_HEAP_MAX=\"-Xmx\"\"$YARN_HEAPSIZE\"\"m\"\nfi\n\n# Resource Manager specific parameters\n\n# Specify the max Heapsize for the ResourceManager using a numerical value\n# in the scale of MB. For example, to specify an jvm option of -Xmx1000m, set\n# the value to 1000.\n# This value will be overridden by an Xmx setting specified in either YARN_OPTS\n# and/or YARN_RESOURCEMANAGER_OPTS.\n# If not specified, the default value will be picked from either YARN_HEAPMAX\n# or JAVA_HEAP_MAX with YARN_HEAPMAX as the preferred option of the two.\nexport YARN_RESOURCEMANAGER_HEAPSIZE={{resourcemanager_heapsize}}\n\n# Specify the JVM options to be used when starting the ResourceManager.\n# These options will be appended to the options specified as YARN_OPTS\n# and therefore may override any similar flags set in YARN_OPTS\n#export YARN_RESOURCEMANAGER_OPTS=\n\n# Node Manager specific parameters\n\n# Specify the max Heapsize for the NodeManager using a numerical value\n# in the scale of MB. For example, to specify an jvm option of -Xmx1000m, set\n# the value to 1000.\n# This value will be overridden by an Xmx setting specified in either YARN_OPTS\n# and/or YARN_NODEMANAGER_OPTS.\n# If not specified, the default value will be picked from either YARN_HEAPMAX\n# or JAVA_HEAP_MAX with YARN_HEAPMAX as the preferred option of the two.\nexport YARN_NODEMANAGER_HEAPSIZE={{nodemanager_heapsize}}\n\n# Specify the max Heapsize for the HistoryManager using a numerical value\n# in the scale of MB. For example, to specify an jvm option of -Xmx1000m, set\n# the value to 1024.\n# This value will be overridden by an Xmx setting specified in either YARN_OPTS\n# and/or YARN_HISTORYSERVER_OPTS.\n# If not specified, the default value will be picked from either YARN_HEAPMAX\n# or JAVA_HEAP_MAX with YARN_HEAPMAX as the preferred option of the two.\nexport YARN_HISTORYSERVER_HEAPSIZE={{apptimelineserver_heapsize}}\n\n# Specify the JVM options to be used when starting the NodeManager.\n# These options will be appended to the options specified as YARN_OPTS\n# and therefore may override any similar flags set in YARN_OPTS\n#export YARN_NODEMANAGER_OPTS=\n\n# so that filenames w/ spaces are handled correctly in loops below\nIFS=\n\n\n# default log directory and file\nif [ \"$YARN_LOG_DIR\" = \"\" ]; then\n  YARN_LOG_DIR=\"$HADOOP_YARN_HOME/logs\"\nfi\nif [ \"$YARN_LOGFILE\" = \"\" ]; then\n  YARN_LOGFILE='yarn.log'\nfi\n\n# default policy file for service-level authorization\nif [ \"$YARN_POLICYFILE\" = \"\" ]; then\n  YARN_POLICYFILE=\"hadoop-policy.xml\"\nfi\n\n# restore ordinary behaviour\nunset IFS\n\n\nYARN_OPTS=\"$YARN_OPTS -Dhadoop.log.dir=$YARN_LOG_DIR\"\nYARN_OPTS=\"$YARN_OPTS -Dyarn.log.dir=$YARN_LOG_DIR\"\nYARN_OPTS=\"$YARN_OPTS -Dhadoop.log.file=$YARN_LOGFILE\"\nYARN_OPTS=\"$YARN_OPTS -Dyarn.log.file=$YARN_LOGFILE\"\nYARN_OPTS=\"$YARN_OPTS -Dyarn.home.dir=$YARN_COMMON_HOME\"\nYARN_OPTS=\"$YARN_OPTS -Dyarn.id.str=$YARN_IDENT_STRING\"\nYARN_OPTS=\"$YARN_OPTS -Dhadoop.root.logger=${YARN_ROOT_LOGGER:-INFO,console}\"\nYARN_OPTS=\"$YARN_OPTS -Dyarn.root.logger=${YARN_ROOT_LOGGER:-INFO,console}\"\nif [ \"x$JAVA_LIBRARY_PATH\" != \"x\" ]; then\n  YARN_OPTS=\"$YARN_OPTS -Djava.library.path=$JAVA_LIBRARY_PATH\"\nfi\nYARN_OPTS=\"$YARN_OPTS -Dyarn.policy.file=$YARN_POLICYFILE\"\n    ",
    "is_supported_yarn_ranger": "true",
    "min_user_id": "1000",
    "nodemanager_heapsize": "1024",
    "resourcemanager_heapsize": "3072",
    "yarn_cgroups_enabled": "false",
    "yarn_heapsize": "1024",
    "yarn_log_dir_prefix": "/mnt/bmr/log/hadoop-yarn",
    "yarn_pid_dir_prefix": "/var/run/hadoop-yarn",
    "yarn_user": "yarn",
    "yarn_user_nofile_limit": "32768",
    "yarn_user_nproc_limit": "65536"
  },
  "yarn-log4j": {
    "content": "\n#Relative to Yarn Log Dir Prefix\nyarn.log.dir=.\n#\n# Job Summary Appender\n#\n# Use following logger to send summary to separate file defined by\n# hadoop.mapreduce.jobsummary.log.file rolled daily:\n# hadoop.mapreduce.jobsummary.logger=INFO,JSA\n#\nhadoop.mapreduce.jobsummary.logger=${hadoop.root.logger}\nhadoop.mapreduce.jobsummary.log.file=hadoop-mapreduce.jobsummary.log\nlog4j.appender.JSA=org.apache.log4j.DailyRollingFileAppender\n# Set the ResourceManager summary log filename\nyarn.server.resourcemanager.appsummary.log.file=hadoop-mapreduce.jobsummary.log\n# Set the ResourceManager summary log level and appender\nyarn.server.resourcemanager.appsummary.logger=${hadoop.root.logger}\n#yarn.server.resourcemanager.appsummary.logger=INFO,RMSUMMARY\n\n# To enable AppSummaryLogging for the RM,\n# set yarn.server.resourcemanager.appsummary.logger to\n# LEVEL,RMSUMMARY in hadoop-env.sh\n\n# Appender for ResourceManager Application Summary Log\n# Requires the following properties to be set\n#    - hadoop.log.dir (Hadoop Log directory)\n#    - yarn.server.resourcemanager.appsummary.log.file (resource manager app summary log filename)\n#    - yarn.server.resourcemanager.appsummary.logger (resource manager app summary log level and appender)\nlog4j.appender.RMSUMMARY=org.apache.log4j.RollingFileAppender\nlog4j.appender.RMSUMMARY.File=${yarn.log.dir}/${yarn.server.resourcemanager.appsummary.log.file}\nlog4j.appender.RMSUMMARY.MaxFileSize=256MB\nlog4j.appender.RMSUMMARY.MaxBackupIndex=20\nlog4j.appender.RMSUMMARY.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RMSUMMARY.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n\nlog4j.appender.JSA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.JSA.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{2}: %m%n\nlog4j.appender.JSA.DatePattern=.yyyy-MM-dd\nlog4j.appender.JSA.layout=org.apache.log4j.PatternLayout\nlog4j.logger.org.apache.hadoop.yarn.server.resourcemanager.RMAppManager$ApplicationSummary=${yarn.server.resourcemanager.appsummary.logger}\nlog4j.additivity.org.apache.hadoop.yarn.server.resourcemanager.RMAppManager$ApplicationSummary=false\n    "
  },
  "yarn-site": {
    "hadoop.registry.rm.enabled": "false",
    "hadoop.registry.zk.quorum": "localhost:2181",
    "yarn.acl.enable": "true",
    "yarn.admin.acl": "yarn",
    "yarn.application.classpath": "$HADOOP_CONF_DIR,/opt/bmr/hadoop/*,/opt/bmr/hadoop/lib/*,/opt/bmr/hadoop/share/hadoop/hdfs/*,/opt/bmr/hadoop/share/hadoop/hdfs/lib/*,/opt/bmr/hadoop/share/hadoop/yarn/*,/opt/bmr/hadoop/share/hadoop/yarn/lib/*,/opt/bmr/hadoop/share/hadoop/common/*,/opt/bmr/hadoop/share/hadoop/common/lib/*,/opt/bmr/hadoop/share/hadoop/mapreduce/*,/opt/bmr/hadoop/share/hadoop/mapreduce/lib/*,/opt/bmr/hadoop/share/hadoop/kms/*,/opt/bmr/hadoop/share/hadoop/kms/lib/*,/opt/bmr/hadoop/share/hadoop/tools/*,/opt/bmr/hadoop/share/hadoop/tools/lib/*",
    "yarn.client.nodemanager-connect.max-wait-ms": "900000",
    "yarn.client.nodemanager-connect.retry-interval-ms": "10000",
    "yarn.http.policy": "HTTP_ONLY",
    "yarn.log-aggregation-enable": "true",
    "yarn.log-aggregation.retain-seconds": "2592000",
    "yarn.log.server.url": "http://%RM_HOST%:8122/jobhistory/logs",
    "yarn.node-labels.enabled": "false",
    "yarn.node-labels.fs-store.retry-policy-spec": "2000, 500",
    "yarn.node-labels.fs-store.root-dir": "/system/yarn/node-labels",
    "yarn.node-labels.manager-class": "org.apache.hadoop.yarn.server.resourcemanager.nodelabels.MemoryRMNodeLabelsManager",
    "yarn.nodemanager.address": "0.0.0.0:45454",
    "yarn.nodemanager.admin-env": "MALLOC_ARENA_MAX=$MALLOC_ARENA_MAX",
    "yarn.nodemanager.aux-services": "mapreduce_shuffle",
    "yarn.nodemanager.aux-services.mapreduce_shuffle.class": "org.apache.hadoop.mapred.ShuffleHandler",
    "yarn.nodemanager.bind-host": "0.0.0.0",
    "yarn.nodemanager.container-executor.class": "org.apache.hadoop.yarn.server.nodemanager.DefaultContainerExecutor",
    "yarn.nodemanager.container-monitor.interval-ms": "3000",
    "yarn.nodemanager.delete.debug-delay-sec": "259200",
    "yarn.nodemanager.disk-health-checker.max-disk-utilization-per-disk-percentage": "90",
    "yarn.nodemanager.disk-health-checker.min-free-space-per-disk-mb": "1000",
    "yarn.nodemanager.disk-health-checker.min-healthy-disks": "0.25",
    "yarn.nodemanager.health-checker.interval-ms": "135000",
    "yarn.nodemanager.health-checker.script.timeout-ms": "60000",
    "yarn.nodemanager.linux-container-executor.cgroups.hierarchy": "hadoop-yarn",
    "yarn.nodemanager.linux-container-executor.cgroups.mount": "false",
    "yarn.nodemanager.linux-container-executor.cgroups.strict-resource-usage": "false",
    "yarn.nodemanager.linux-container-executor.group": "hadoop",
    "yarn.nodemanager.linux-container-executor.resources-handler.class": "org.apache.hadoop.yarn.server.nodemanager.util.DefaultLCEResourcesHandler",
    "yarn.nodemanager.local-dirs": "/mnt/hadoop/yarn/local",
    "yarn.nodemanager.log-aggregation.compression-type": "gz",
    "yarn.nodemanager.log-aggregation.debug-enabled": "false",
    "yarn.nodemanager.log-aggregation.num-log-files-per-app": "30",
    "yarn.nodemanager.log-aggregation.roll-monitoring-interval-seconds": "-1",
    "yarn.nodemanager.log-dirs": "/mnt/hadoop/yarn/log",
    "yarn.nodemanager.log.retain-second": "604800",
    "yarn.nodemanager.recovery.dir": "/mnt/bmr/log/hadoop-yarn/nodemanager/recovery-state",
    "yarn.nodemanager.recovery.enabled": "false",
    "yarn.nodemanager.remote-app-log-dir": "/app-logs",
    "yarn.nodemanager.remote-app-log-dir-suffix": "logs",
    "yarn.nodemanager.resource.cpu-vcores": "4",
    "yarn.nodemanager.resource.memory-mb": "8192",
    "yarn.nodemanager.resource.percentage-physical-cpu-limit": "100",
    "yarn.nodemanager.vmem-check-enabled": "false",
    "yarn.nodemanager.vmem-pmem-ratio": "2.1",
    "yarn.resourcemanager.address": "%RM_HOST%:8050",
    "yarn.resourcemanager.admin.address": "%RM_HOST%:8141",
    "yarn.resourcemanager.am.max-attempts": "5",
    "yarn.resourcemanager.bind-host": "0.0.0.0",
    "yarn.resourcemanager.connect.max-wait.ms": "900000",
    "yarn.resourcemanager.connect.retry-interval.ms": "30000",
    "yarn.resourcemanager.fs.state-store.retry-policy-spec": "2000, 500",
    "yarn.resourcemanager.fs.state-store.uri": "/tmp/yarn/system/rmstore",
    "yarn.resourcemanager.ha.enabled": "false",
    "yarn.resourcemanager.hostname": "%RM_HOST%",
    "yarn.resourcemanager.nodes.exclude-path": "/etc/hadoop/conf/yarn.exclude",
    "yarn.resourcemanager.recovery.enabled": "true",
    "yarn.resourcemanager.resource-tracker.address": "%RM_HOST%:8025",
    "yarn.resourcemanager.max-completed-applications": "1000",
    "yarn.resourcemanager.scheduler.address": "%RM_HOST%:8030",
    "yarn.resourcemanager.scheduler.class": "org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler",
    "yarn.resourcemanager.scheduler.monitor.enable": "false",
    "yarn.resourcemanager.state-store.max-completed-applications": "${yarn.resourcemanager.max-completed-applications}",
    "yarn.resourcemanager.store.class": "org.apache.hadoop.yarn.server.resourcemanager.recovery.FileSystemRMStateStore",
    "yarn.resourcemanager.system-metrics-publisher.dispatcher.pool-size": "10",
    "yarn.resourcemanager.system-metrics-publisher.enabled": "true",
    "yarn.resourcemanager.webapp.address": "%RM_HOST%:8088",
    "yarn.resourcemanager.webapp.delegation-token-auth-filter.enabled": "false",
    "yarn.resourcemanager.webapp.https.address": "%RM_HOST%:8090",
    "yarn.resourcemanager.work-preserving-recovery.enabled": "false",
    "yarn.resourcemanager.work-preserving-recovery.scheduling-wait-ms": "10000",
    "yarn.resourcemanager.zk-acl": "world:anyone:rwcda ",
    "yarn.resourcemanager.zk-address": "localhost:2181",
    "yarn.resourcemanager.zk-num-retries": "1000",
    "yarn.resourcemanager.zk-retry-interval-ms": "1000",
    "yarn.resourcemanager.zk-state-store.parent-path": "/rmstore",
    "yarn.resourcemanager.zk-timeout-ms": "10000",
    "yarn.scheduler.maximum-allocation-mb": "65536",
    "yarn.scheduler.maximum-allocation-vcores": "32",
    "yarn.scheduler.minimum-allocation-mb": "1024",
    "yarn.scheduler.minimum-allocation-vcores": "1",
    "yarn.timeline-service.address": "%RM_HOST%:10200",
    "yarn.timeline-service.bind-host": "0.0.0.0",
    "yarn.timeline-service.client.max-retries": "30",
    "yarn.timeline-service.client.retry-interval-ms": "1000",
    "yarn.timeline-service.enabled": "true",
    "yarn.timeline-service.entity-group-fs-store.active-dir": "/ats/active/",
    "yarn.timeline-service.entity-group-fs-store.cleaner-interval-seconds": "3600",
    "yarn.timeline-service.entity-group-fs-store.done-dir": "/ats/done/",
    "yarn.timeline-service.entity-group-fs-store.group-id-plugin-classes": "",
    "yarn.timeline-service.entity-group-fs-store.retain-seconds": "604800",
    "yarn.timeline-service.entity-group-fs-store.scan-interval-seconds": "60",
    "yarn.timeline-service.entity-group-fs-store.summary-store": "org.apache.hadoop.yarn.server.timeline.RollingLevelDBTimelineStore",
    "yarn.timeline-service.generic-application-history.store-class": "org.apache.hadoop.yarn.server.applicationhistoryservice.NullApplicationHistoryStore",
    "yarn.timeline-service.http-authentication.simple.anonymous.allowed": "true",
    "yarn.timeline-service.leveldb-state-store.path": "/hadoop/yarn/timeline",
    "yarn.timeline-service.leveldb-timeline-store.path": "/mnt/hadoop/yarn/timeline",
    "yarn.timeline-service.leveldb-timeline-store.read-cache-size": "104857600",
    "yarn.timeline-service.leveldb-timeline-store.start-time-read-cache-size": "10000",
    "yarn.timeline-service.leveldb-timeline-store.start-time-write-cache-size": "10000",
    "yarn.timeline-service.leveldb-timeline-store.ttl-interval-ms": "300000",
    "yarn.timeline-service.recovery.enabled": "true",
    "yarn.timeline-service.state-store-class": "org.apache.hadoop.yarn.server.timeline.recovery.LeveldbTimelineStateStore",
    "yarn.timeline-service.store-class": "org.apache.hadoop.yarn.server.timeline.LeveldbTimelineStore",
    "yarn.timeline-service.ttl-enable": "true",
    "yarn.timeline-service.ttl-ms": "2678400000",
    "yarn.timeline-service.version": "1.5",
    "yarn.timeline-service.webapp.address": "%RM_HOST%:8188",
    "yarn.timeline-service.webapp.https.address": "%RM_HOST%:8190"
  },
  "zeppelin": {
    "zeppelin.web.port": "8093"
  },
  "zoo.cfg": {
    "autopurge.purgeInterval": "24",
    "autopurge.snapRetainCount": "30",
    "clientPort": "2181",
    "dataDir": "/hadoop/zookeeper",
    "initLimit": "10",
    "syncLimit": "5",
    "tickTime": "2000"
  },
  "zookeeper-env": {
    "content": "\nexport JAVA_HOME={{java64_home}}\nexport ZOOKEEPER_HOME={{zk_home}}\nexport ZOO_LOG_DIR={{zk_log_dir}}\nexport ZOOPIDFILE={{zk_pid_file}}\nexport SERVER_JVMFLAGS={{zk_server_heapsize}}\nexport JAVA=$JAVA_HOME/bin/java\nexport CLASSPATH=$CLASSPATH:/usr/share/zookeeper/*\n\n{% if security_enabled %}\nexport SERVER_JVMFLAGS=\"$SERVER_JVMFLAGS -Djava.security.auth.login.config={{zk_server_jaas_file}}\"\nexport CLIENT_JVMFLAGS=\"$CLIENT_JVMFLAGS -Djava.security.auth.login.config={{zk_client_jaas_file}}\"\n{% endif %}\n    ",
    "zk_log_dir": "/mnt/bmr/log/zookeeper",
    "zk_pid_dir": "/var/run/zookeeper",
    "zk_user": "zookeeper"
  },
  "zookeeper-log4j": {
    "content": "\n#\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n#\n#\n\n#\n# ZooKeeper Logging Configuration\n#\n\n# DEFAULT: console appender only\nlog4j.rootLogger=INFO, CONSOLE\n\n# Example with rolling log file\n#log4j.rootLogger=DEBUG, CONSOLE, ROLLINGFILE\n\n# Example with rolling log file and tracing\n#log4j.rootLogger=TRACE, CONSOLE, ROLLINGFILE, TRACEFILE\n\n#\n# Log INFO level and above messages to the console\n#\nlog4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender\nlog4j.appender.CONSOLE.Threshold=INFO\nlog4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout\nlog4j.appender.CONSOLE.layout.ConversionPattern=%d{ISO8601} - %-5p [%t:%C{1}@%L] - %m%n\n\n#\n# Add ROLLINGFILE to rootLogger to get log file output\n#    Log DEBUG level and above messages to a log file\nlog4j.appender.ROLLINGFILE=org.apache.log4j.RollingFileAppender\nlog4j.appender.ROLLINGFILE.Threshold=DEBUG\nlog4j.appender.ROLLINGFILE.File=zookeeper.log\n\n# Max log file size of 10MB\nlog4j.appender.ROLLINGFILE.MaxFileSize=10MB\n# uncomment the next line to limit number of backup files\n#log4j.appender.ROLLINGFILE.MaxBackupIndex=10\n\nlog4j.appender.ROLLINGFILE.layout=org.apache.log4j.PatternLayout\nlog4j.appender.ROLLINGFILE.layout.ConversionPattern=%d{ISO8601} - %-5p [%t:%C{1}@%L] - %m%n\n\n\n#\n# Add TRACEFILE to rootLogger to get log file output\n#    Log DEBUG level and above messages to a log file\nlog4j.appender.TRACEFILE=org.apache.log4j.FileAppender\nlog4j.appender.TRACEFILE.Threshold=TRACE\nlog4j.appender.TRACEFILE.File=zookeeper_trace.log\n\nlog4j.appender.TRACEFILE.layout=org.apache.log4j.PatternLayout\n### Notice we are including log4j's NDC here (%x)\nlog4j.appender.TRACEFILE.layout.ConversionPattern=%d{ISO8601} - %-5p [%t:%C{1}@%L][%x] - %m%n\n    "
  },
  "admin-properties": {
    "SQL_COMMAND_INVOKER": "mysql",
    "DB_FLAVOR": "MYSQL",
    "SQL_CONNECTOR_JAR": "/usr/share/java/mysql-connector-java.jar",
    "db_host": "%RANGER_MYSQL_HOST%",
    "db_root_password": "*MysqlRoot123",
    "db_root_user": "root",
    "db_name": "ranger",
    "db_password": "*RangerAdmin123",
    "db_user": "rangeradmin",
    "audit_db_name": "ranger_audit",
    "audit_db_password": "*RangerLogger123",
    "audit_db_user": "rangerlogger",
    "policymgr_external_url": "http://%RANGER_ADMIN_HOST%:6080"
  },
  "ranger-env": {
    "admin_username": "admin",
    "admin_password": "admin",
    "bind_anonymous": "false",
    "create_db_dbuser": "true",
    "is_solrCloud_enabled": "false",
    "ranger-hbase-plugin-enabled": "No",
    "ranger-hdfs-plugin-enabled": "Yes",
    "ranger-hive-plugin-enabled": "Yes",
    "ranger-kafka-plugin-enabled": "No",
    "ranger-knox-plugin-enabled": "No",
    "ranger-storm-plugin-enabled": "No",
    "ranger-yarn-plugin-enabled": "Yes",
    "ranger_admin_log_dir": "/mnt/bmr/log/ranger/admin",
    "ranger_admin_username": "amb_ranger_admin",
    "ranger_admin_password": "admin",
    "ranger_group": "ranger",
    "ranger_pid_dir": "/var/run/ranger",
    "ranger_privelege_user_jdbc_url": "jdbc:mysql://%RANGER_MYSQL_HOST%",
    "ranger_user": "ranger",
    "ranger_usersync_log_dir": "/mnt/bmr/log/ranger/usersync",
    "xasecure.audit.destination.db": "false",
    "xasecure.audit.destination.hdfs": "true",
    "xasecure.audit.destination.hdfs.dir": "hdfs://%NN_HOST%:8020/ranger/audit",
    "xasecure.audit.destination.solr": "false",
    "xml_configurations_supported": "true"
  },
  "ranger-admin-site": {
    "ranger.audit.solr.urls": "",
    "ranger.audit.solr.username": "ranger_solr",
    "ranger.audit.solr.zookeepers": "NONE",
    "ranger.audit.source.type": "hdfs",
    "ranger.authentication.method": "UNIX",
    "ranger.credential.provider.path": "/etc/ranger/admin/rangeradmin.jceks",
    "ranger.externalurl": "{{ranger_external_url}}",
    "ranger.https.attrib.keystore.file": "/etc/ranger/admin/conf/ranger-admin-keystore.jks",
    "ranger.jpa.audit.jdbc.credential.alias": "rangeraudit",
    "ranger.jpa.audit.jdbc.dialect": "{{jdbc_dialect}}",
    "ranger.jpa.audit.jdbc.driver": "{{ranger_jdbc_driver}}",
    "ranger.jpa.audit.jdbc.url": "{{audit_jdbc_url}}",
    "ranger.jpa.audit.jdbc.user": "{{ranger_audit_db_user}}",
    "ranger.jpa.jdbc.credential.alias": "rangeradmin",
    "ranger.jpa.jdbc.dialect": "{{jdbc_dialect}}",
    "ranger.jpa.jdbc.driver": "com.mysql.jdbc.Driver",
    "ranger.jpa.jdbc.url": "jdbc:mysql://%RANGER_MYSQL_HOST%/ranger",
    "ranger.jpa.jdbc.user": "{{ranger_db_user}}",
    "ranger.ldap.ad.base.dn": "dc=example,dc=com",
    "ranger.ldap.ad.bind.dn": "{{ranger_ug_ldap_bind_dn}}",
    "ranger.ldap.ad.domain": "",
    "ranger.ldap.ad.referral": "ignore",
    "ranger.ldap.ad.url": "{{ranger_ug_ldap_url}}",
    "ranger.ldap.ad.user.searchfilter": "{{ranger_ug_ldap_user_searchfilter}}",
    "ranger.ldap.base.dn": "dc=example,dc=com",
    "ranger.ldap.bind.dn": "{{ranger_ug_ldap_bind_dn}}",
    "ranger.ldap.group.roleattribute": "cn",
    "ranger.ldap.group.searchbase": "{{ranger_ug_ldap_group_searchbase}}",
    "ranger.ldap.group.searchfilter": "{{ranger_ug_ldap_group_searchfilter}}",
    "ranger.ldap.referral": "ignore",
    "ranger.ldap.url": "{{ranger_ug_ldap_url}}",
    "ranger.ldap.user.dnpattern": "uid={0},ou=users,dc=xasecure,dc=net",
    "ranger.ldap.user.searchfilter": "{{ranger_ug_ldap_user_searchfilter}}",
    "ranger.service.host": "{{ranger_host}}",
    "ranger.service.http.enabled": "true",
    "ranger.service.http.port": "6080",
    "ranger.service.https.attrib.clientAuth": "want",
    "ranger.service.https.attrib.keystore.keyalias": "rangeradmin",
    "ranger.service.https.attrib.ssl.enabled": "false",
    "ranger.service.https.port": "6182",
    "ranger.sso.browser.useragent": "Mozilla,chrome",
    "ranger.sso.cookiename": "hadoop-jwt",
    "ranger.sso.enabled": "false",
    "ranger.sso.providerurl": "",
    "ranger.sso.publicKey": "",
    "ranger.sso.query.param.originalurl": "originalUrl",
    "ranger.unixauth.remote.login.enabled": "true",
    "ranger.unixauth.service.hostname": "{{ugsync_host}}",
    "ranger.unixauth.service.port": "5151"
  },
  "ranger-ugsync-site": {
    "ranger.usersync.credstore.filename": "/usr/hdp/current/ranger-usersync/conf/ugsync.jceks",
    "ranger.usersync.enabled": "true",
    "ranger.usersync.filesource.file": "/tmp/usergroup.txt",
    "ranger.usersync.filesource.text.delimiter": ",",
    "ranger.usersync.group.memberattributename": "",
    "ranger.usersync.group.nameattribute": "",
    "ranger.usersync.group.objectclass": "",
    "ranger.usersync.group.searchbase": "",
    "ranger.usersync.group.searchenabled": "false",
    "ranger.usersync.group.searchfilter": "",
    "ranger.usersync.group.searchscope": "",
    "ranger.usersync.group.usermapsyncenabled": "true",
    "ranger.usersync.keystore.file": "/usr/hdp/current/ranger-usersync/conf/unixauthservice.jks",
    "ranger.usersync.keystore.password": "admin",
    "ranger.usersync.ldap.bindalias": "testldapalias",
    "ranger.usersync.ldap.binddn": "",
    "ranger.usersync.ldap.bindkeystore": "",
    "ranger.usersync.ldap.groupname.caseconversion": "lower",
    "ranger.usersync.ldap.ldapbindpassword": "ranger_ldap_admin",
    "ranger.usersync.ldap.referral": "ignore",
    "ranger.usersync.ldap.searchBase": "dc=hadoop,dc=apache,dc=org",
    "ranger.usersync.ldap.url": "",
    "ranger.usersync.ldap.user.groupnameattribute": "memberof, ismemberof",
    "ranger.usersync.ldap.user.nameattribute": "",
    "ranger.usersync.ldap.user.objectclass": "person",
    "ranger.usersync.ldap.user.searchbase": "",
    "ranger.usersync.ldap.user.searchfilter": "",
    "ranger.usersync.ldap.user.searchscope": "sub",
    "ranger.usersync.ldap.username.caseconversion": "lower",
    "ranger.usersync.logdir": "/mnt/bmr/log/ranger/usersync",
    "ranger.usersync.pagedresultsenabled": "true",
    "ranger.usersync.pagedresultssize": "500",
    "ranger.usersync.passwordvalidator.path": "./native/credValidator.uexe",
    "ranger.usersync.policymanager.baseURL": "{{ranger_external_url}}",
    "ranger.usersync.policymanager.maxrecordsperapicall": "1000",
    "ranger.usersync.policymanager.mockrun": "false",
    "ranger.usersync.port": "5151",
    "ranger.usersync.sink.impl.class": "org.apache.ranger.unixusersync.process.PolicyMgrUserGroupBuilder",
    "ranger.usersync.sleeptimeinmillisbetweensynccycle": "60000",
    "ranger.usersync.source.impl.class": "org.apache.ranger.unixusersync.process.UnixUserGroupBuilder",
    "ranger.usersync.ssl": "true",
    "ranger.usersync.truststore.file": "/usr/hdp/current/ranger-usersync/conf/mytruststore.jks",
    "ranger.usersync.truststore.password": "admin",
    "ranger.usersync.unix.group.file": "/etc/group",
    "ranger.usersync.unix.minUserId": "500",
    "ranger.usersync.unix.password.file": "/etc/passwd"
  },
  "usersync-properties": {},
  "ranger-hdfs-plugin-properties": {
    "REPOSITORY_CONFIG_USERNAME": "hdfs",
    "REPOSITORY_CONFIG_PASSWORD": "hdfs",
    "ranger-hdfs-plugin-enabled": "Yes",
    "common.name.for.certificate": "",
    "policy_user": "ambari-qa",
    "hadoop.rpc.protection": ""
  },
  "ranger-hive-plugin-properties": {
    "REPOSITORY_CONFIG_USERNAME": "hive",
    "REPOSITORY_CONFIG_PASSWORD": "hive",
    "ranger-hive-plugin-enabled": "Yes",
    "common.name.for.certificate": "",
    "jdbc.driverClassName": "org.apache.hive.jdbc.HiveDriver",
    "hadoop.rpc.protection": "",
    "policy_user": "ambari-qa"
  },
  "ranger-yarn-plugin-properties": {
    "REPOSITORY_CONFIG_USERNAME": "yarn",
    "REPOSITORY_CONFIG_PASSWORD": "yarn",
    "ranger-yarn-plugin-enabled": "Yes",
    "common.name.for.certificate": "",
    "hadoop.rpc.protection": "",
    "policy_user": "ambari-qa"
  },
  "ranger-hdfs-audit": {
    "xasecure.audit.credential.provider.file": "jceks://file{{credential_file}}",
    "xasecure.audit.destination.db": "false",
    "xasecure.audit.destination.db.batch.filespool.dir": "/mnt/bmr/log/hadoop/hdfs/audit/db/spool",
    "xasecure.audit.destination.db.jdbc.driver": "{{jdbc_driver}}",
    "xasecure.audit.destination.db.jdbc.url": "{{audit_jdbc_url}}",
    "xasecure.audit.destination.db.user": "{{xa_audit_db_user}}",
    "xasecure.audit.destination.hdfs": "true",
    "xasecure.audit.destination.hdfs.batch.filespool.dir": "/mnt/bmr/log/hadoop/hdfs/audit/hdfs/spool",
    "xasecure.audit.destination.hdfs.dir": "hdfs://%NN_HOST%:8020/ranger/audit",
    "xasecure.audit.destination.solr": "false",
    "xasecure.audit.destination.solr.batch.filespool.dir": "/mnt/bmr/log/hadoop/hdfs/audit/solr/spool",
    "xasecure.audit.destination.solr.urls": "",
    "xasecure.audit.destination.solr.zookeepers": "NONE",
    "xasecure.audit.is.enabled": "true",
    "xasecure.audit.provider.summary.enabled": "false"
  },
  "ranger-yarn-audit": {
    "xasecure.audit.credential.provider.file": "jceks://file{{credential_file}}",
    "xasecure.audit.destination.db": "false",
    "xasecure.audit.destination.db.batch.filespool.dir": "/mnt/bmr/log/hadoop/yarn/audit/db/spool",
    "xasecure.audit.destination.db.jdbc.driver": "{{jdbc_driver}}",
    "xasecure.audit.destination.db.jdbc.url": "{{audit_jdbc_url}}",
    "xasecure.audit.destination.db.user": "{{xa_audit_db_user}}",
    "xasecure.audit.destination.hdfs": "true",
    "xasecure.audit.destination.hdfs.batch.filespool.dir": "/mnt/bmr/log/hadoop/yarn/audit/hdfs/spool",
    "xasecure.audit.destination.hdfs.dir": "hdfs://%NN_HOST%:8020/ranger/audit",
    "xasecure.audit.destination.solr": "false",
    "xasecure.audit.destination.solr.batch.filespool.dir": "/mnt/bmr/log/hadoop/yarn/audit/solr/spool",
    "xasecure.audit.destination.solr.urls": "",
    "xasecure.audit.destination.solr.zookeepers": "NONE",
    "xasecure.audit.is.enabled": "true",
    "xasecure.audit.provider.summary.enabled": "false"
  },
  "ranger-hive-audit": {
    "xasecure.audit.credential.provider.file": "jceks://file{{credential_file}}",
    "xasecure.audit.destination.db": "false",
    "xasecure.audit.destination.db.batch.filespool.dir": "/mnt/bmr/log/hive/audit/db/spool",
    "xasecure.audit.destination.db.jdbc.driver": "{{jdbc_driver}}",
    "xasecure.audit.destination.db.jdbc.url": "{{audit_jdbc_url}}",
    "xasecure.audit.destination.db.user": "{{xa_audit_db_user}}",
    "xasecure.audit.destination.hdfs": "true",
    "xasecure.audit.destination.hdfs.batch.filespool.dir": "/mnt/bmr/log/hive/audit/hdfs/spool",
    "xasecure.audit.destination.hdfs.dir": "hdfs://%NN_HOST%:8020/ranger/audit",
    "xasecure.audit.destination.solr": "false",
    "xasecure.audit.destination.solr.batch.filespool.dir": "/mnt/bmr/log/hive/audit/solr/spool",
    "xasecure.audit.destination.solr.urls": "",
    "xasecure.audit.destination.solr.zookeepers": "NONE",
    "xasecure.audit.is.enabled": "true",
    "xasecure.audit.provider.summary.enabled": "false"
  },
  "ranger-hive-security": {
    "ranger.plugin.hive.policy.source.impl": "org.apache.ranger.admin.client.RangerAdminRESTClient",
    "ranger.plugin.hive.policy.rest.ssl.config.file": "/etc/hadoop/conf/ranger-policymgr-ssl.xml",
    "ranger.plugin.hive.policy.rest.url": "{{policymgr_mgr_url}}",
    "ranger.plugin.hive.service.name": "{{repo_name}}",
    "ranger.plugin.hive.policy.cache.dir": "/etc/ranger/{{repo_name}}/policycache",
    "xasecure.hive.update.xapolicies.on.grant.revoke": "true",
    "ranger.plugin.hive.policy.pollIntervalMs": "30000"
  },
  "ranger-hdfs-security": {
    "xasecure.add-hadoop-authorization": "true",
    "ranger.plugin.hdfs.policy.rest.ssl.config.file": "/etc/hadoop/conf/ranger-policymgr-ssl.xml",
    "ranger.plugin.hdfs.policy.source.impl": "org.apache.ranger.admin.client.RangerAdminRESTClient",
    "ranger.plugin.hdfs.policy.cache.dir": "/etc/ranger/{{repo_name}}/policycache",
    "ranger.plugin.hdfs.policy.pollIntervalMs": "30000",
    "ranger.plugin.hdfs.service.name": "{{repo_name}}",
    "ranger.plugin.hdfs.policy.rest.url": "{{policymgr_mgr_url}}"
  },
  "ranger-yarn-security": {
    "ranger.plugin.yarn.policy.rest.ssl.config.file": "/etc/hadoop/conf/ranger-policymgr-ssl-yarn.xml",
    "ranger.plugin.yarn.policy.source.impl": "org.apache.ranger.admin.client.RangerAdminRESTClient",
    "ranger.plugin.yarn.policy.cache.dir": "/etc/ranger/{{repo_name}}/policycache",
    "ranger.plugin.yarn.policy.pollIntervalMs": "30000",
    "ranger.plugin.yarn.policy.rest.url": "{{policymgr_mgr_url}}",
    "ranger.plugin.yarn.service.name": "{{repo_name}}"
  },
  "krb5-conf": {
    "domains": "example.com",
    "manage_krb5_conf": "true",
    "conf_dir": "/etc",
    "content": "[libdefaults]\n  renew_lifetime = 7d\n  forwardable= true\n  default_realm = {{realm|upper()}}\nticket_lifetime = 24h\n  dns_lookup_realm = false\n  dns_lookup_kdc = false\n  #default_tgs_enctypes ={{encryption_types}}\n  #default_tkt_enctypes ={{encryption_types}}\n\n[logging]\n default = FILE:/var/log/krb5kdc.log\n admin_server = FILE:/var/log/kadmind.log\n kdc = FILE:/var/log/krb5kdc.log\n\n[realms]\n  {{realm}} = {\n  default_domain = example.com\n  admin_server = {{admin_server_host|default(kdc_host, True)}}\n  kdc = {{kdc_host}}\n }\n\n[domain_realm]\n .example.com = {{realm|upper()}}\n example.com = {{realm|upper()}}\n"
  },
  "kerberos-env": {
    "kdc_type": "mit-kdc",
    "manage_identities": "true",
    "install_packages": "true",
    "encryption_types": "aes des3-cbc-sha1 rc4 des-cbc-md5",
    "realm": "EXAMPLE.COM",
    "kdc_host": "%KDC_HOST%",
    "admin_server_host": "%KDC_HOST%",
    "executable_search_paths": "/usr/bin, /usr/kerberos/bin, /usr/sbin, /usr/lib/mit/bin, /usr/lib/mit/sbin",
    "password_length": "20",
    "password_min_lowercase_letters": "1",
    "password_min_uppercase_letters": "1",
    "password_min_digits": "1",
    "password_min_punctuation": "1",
    "password_min_whitespace": "0",
    "service_check_principal_name": "-",
    "case_insensitive_username_rules": "false",
    "create_attributes_template": "",
    "container_dn": "",
    "ldap_url": ""
  }
}
