{
  "configurations" : [
    {
      "ams-env" : {
        "properties_attributes" : { },
        "properties" : {
          "ambari_metrics_user" : "ams",
          "metrics_monitor_log_dir" : "/mnt/bmr/log/ambari-metrics-monitor",
          "metrics_collector_heapsize" : "512",
          "metrics_collector_pid_dir" : "/var/run/ambari-metrics-collector",
          "metrics_collector_log_dir" : "/mnt/bmr/log/ambari-metrics-collector",
          "metrics_monitor_pid_dir" : "/var/run/ambari-metrics-monitor",
          "content" : "\n# Set environment variables here.\n\n# The java implementation to use. Java 1.6 required.\nexport JAVA_HOME={{java64_home}}\n\n# Collector Log directory for log4j\nexport AMS_COLLECTOR_LOG_DIR={{ams_collector_log_dir}}\n\n# Monitor Log directory for outfile\nexport AMS_MONITOR_LOG_DIR={{ams_monitor_log_dir}}\n\n# Collector pid directory\nexport AMS_COLLECTOR_PID_DIR={{ams_collector_pid_dir}}\n\n# Monitor pid directory\nexport AMS_MONITOR_PID_DIR={{ams_monitor_pid_dir}}\n\n# AMS HBase pid directory\nexport AMS_HBASE_PID_DIR={{hbase_pid_dir}}\n\n# AMS Collector heapsize\nexport AMS_COLLECTOR_HEAPSIZE={{metrics_collector_heapsize}}\n\n# HBase compaction policy enabled\nexport AMS_HBASE_NORMALIZER_ENABLED={{ams_hbase_normalizer_enabled}}\n\n# HBase compaction policy enabled\nexport AMS_HBASE_FIFO_COMPACTION_ENABLED={{ams_hbase_fifo_compaction_enabled}}\n\n# AMS Collector options\nexport AMS_COLLECTOR_OPTS=\"-Djava.library.path=/usr/lib/ams-hbase/lib/hadoop-native\"\n{% if security_enabled %}\nexport AMS_COLLECTOR_OPTS=\"$AMS_COLLECTOR_OPTS -Djava.security.auth.login.config={{ams_collector_jaas_config_file}}\"\n{% endif %}\n\n# AMS Collector GC options\nexport AMS_COLLECTOR_GC_OPTS=\"-XX:+UseConcMarkSweepGC -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:{{ams_collector_log_dir}}/collector-gc.log-`date +'%Y%m%d%H%M'`\"\nexport AMS_COLLECTOR_OPTS=\"$AMS_COLLECTOR_OPTS $AMS_COLLECTOR_GC_OPTS\""
        }
      }
    },
    {
      "capacity-scheduler" : {
        "properties_attributes" : { },
        "properties" : {
          "yarn.scheduler.capacity.root.default-node-label-expression" : " ",
          "yarn.scheduler.capacity.root.accessible-node-labels" : "*",
          "yarn.scheduler.capacity.default.minimum-user-limit-percent" : "100",
          "yarn.scheduler.capacity.maximum-am-resource-percent" : "0.2",
          "yarn.scheduler.capacity.root.acl_administer_queue" : "yarn",
          "yarn.scheduler.capacity.root.default.acl_administer_jobs" : "yarn",
          "yarn.scheduler.capacity.resource-calculator" : "org.apache.hadoop.yarn.util.resource.DefaultResourceCalculator",
          "yarn.scheduler.capacity.root.default.capacity" : "100",
          "yarn.scheduler.capacity.root.default.user-limit-factor" : "1",
          "yarn.scheduler.capacity.root.acl_administer_jobs" : "yarn",
          "yarn.scheduler.capacity.root.queues" : "default",
          "yarn.scheduler.capacity.root.capacity" : "100",
          "yarn.scheduler.capacity.root.default.acl_submit_applications" : "yarn",
          "yarn.scheduler.capacity.root.default.maximum-capacity" : "100",
          "yarn.scheduler.capacity.node-locality-delay" : "-1",
          "yarn.scheduler.capacity.root.default.acl_administer_queue" : "yarn",
          "yarn.scheduler.capacity.maximum-applications" : "10000",
          "yarn.scheduler.capacity.root.default.state" : "RUNNING"
        }
      }
    },
    {
      "zoo.cfg" : {
        "properties_attributes" : { },
        "properties" : {
          "autopurge.purgeInterval" : "24",
          "dataDir" : "/hadoop/zookeeper",
          "autopurge.snapRetainCount" : "30",
          "clientPort" : "2181",
          "initLimit" : "10",
          "tickTime" : "2000",
          "syncLimit" : "5"
        }
      }
    },
    {
      "ams-hbase-site" : {
        "properties_attributes" : {
          "final" : {
            "hbase.zookeeper.quorum" : "true"
          }
        },
        "properties" : {
          "hfile.block.cache.size" : "0.3",
          "phoenix.query.spoolThresholdBytes" : "12582912",
          "hbase.zookeeper.property.dataDir" : "${hbase.tmp.dir}/zookeeper",
          "hbase.regionserver.thread.compaction.large" : "2",
          "hbase.master.port" : "61300",
          "zookeeper.session.timeout.localHBaseCluster" : "120000",
          "hbase.local.dir" : "${hbase.tmp.dir}/local",
          "phoenix.query.timeoutMs" : "1200000",
          "hbase.regionserver.thread.compaction.small" : "3",
          "hbase.zookeeper.quorum" : "{{zookeeper_quorum_hosts}}",
          "hbase.client.scanner.timeout.period" : "900000",
          "hbase.regionserver.info.port" : "61330",
          "phoenix.query.rowKeyOrderSaltedTable" : "true",
          "phoenix.mutate.batchSize" : "10000",
          "zookeeper.znode.parent" : "/ams-hbase-secure",
          "hbase.master.info.port" : "61310",
          "hbase.rootdir" : "file:///var/lib/ambari-metrics-collector/hbase",
          "hbase.cluster.distributed" : "false",
          "hbase.hregion.majorcompaction" : "0",
          "hbase.hstore.flusher.count" : "2",
          "hbase.master.normalizer.class" : "org.apache.hadoop.hbase.master.normalizer.SimpleRegionNormalizer",
          "hbase.snapshot.enabled" : "false",
          "phoenix.spool.directory" : "${hbase.tmp.dir}/phoenix-spool",
          "phoenix.coprocessor.maxMetaDataCacheSize" : "20480000",
          "hbase.zookeeper.property.tickTime" : "6000",
          "hbase.zookeeper.leaderport" : "61388",
          "phoenix.sequence.saltBuckets" : "2",
          "hbase.hstore.blockingStoreFiles" : "200",
          "zookeeper.session.timeout" : "120000",
          "phoenix.coprocessor.maxServerCacheTimeToLiveMs" : "60000",
          "hbase.master.info.bindAddress" : "0.0.0.0",
          "hbase.regionserver.global.memstore.lowerLimit" : "0.3",
          "dfs.client.read.shortcircuit" : "true",
          "phoenix.query.maxGlobalMemoryPercentage" : "15",
          "hbase.hregion.memstore.flush.size" : "134217728",
          "hbase.hregion.max.filesize" : "4294967296",
          "phoenix.groupby.maxCacheSize" : "307200000",
          "hbase.master.wait.on.regionservers.mintostart" : "1",
          "hbase.regionserver.global.memstore.upperLimit" : "0.35",
          "hbase.normalizer.period" : "600000",
          "hbase.tmp.dir" : "/var/lib/ambari-metrics-collector/hbase-tmp",
          "hbase.client.scanner.caching" : "10000",
          "hbase.replication" : "false",
          "hbase.zookeeper.peerport" : "61288",
          "hbase.regionserver.port" : "61320",
          "hbase.zookeeper.property.clientPort" : "{{zookeeper_clientPort}}",
          "hbase.hregion.memstore.block.multiplier" : "4",
          "hbase.normalizer.enabled" : "true"
        }
      }
    },
    {
      "zookeeper-log4j" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "\n#\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n#\n#\n\n#\n# ZooKeeper Logging Configuration\n#\n\n# DEFAULT: console appender only\nlog4j.rootLogger=INFO, CONSOLE\n\n# Example with rolling log file\n#log4j.rootLogger=DEBUG, CONSOLE, ROLLINGFILE\n\n# Example with rolling log file and tracing\n#log4j.rootLogger=TRACE, CONSOLE, ROLLINGFILE, TRACEFILE\n\n#\n# Log INFO level and above messages to the console\n#\nlog4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender\nlog4j.appender.CONSOLE.Threshold=INFO\nlog4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout\nlog4j.appender.CONSOLE.layout.ConversionPattern=%d{ISO8601} - %-5p [%t:%C{1}@%L] - %m%n\n\n#\n# Add ROLLINGFILE to rootLogger to get log file output\n#    Log DEBUG level and above messages to a log file\nlog4j.appender.ROLLINGFILE=org.apache.log4j.RollingFileAppender\nlog4j.appender.ROLLINGFILE.Threshold=DEBUG\nlog4j.appender.ROLLINGFILE.File=zookeeper.log\n\n# Max log file size of 10MB\nlog4j.appender.ROLLINGFILE.MaxFileSize=10MB\n# uncomment the next line to limit number of backup files\n#log4j.appender.ROLLINGFILE.MaxBackupIndex=10\n\nlog4j.appender.ROLLINGFILE.layout=org.apache.log4j.PatternLayout\nlog4j.appender.ROLLINGFILE.layout.ConversionPattern=%d{ISO8601} - %-5p [%t:%C{1}@%L] - %m%n\n\n\n#\n# Add TRACEFILE to rootLogger to get log file output\n#    Log DEBUG level and above messages to a log file\nlog4j.appender.TRACEFILE=org.apache.log4j.FileAppender\nlog4j.appender.TRACEFILE.Threshold=TRACE\nlog4j.appender.TRACEFILE.File=zookeeper_trace.log\n\nlog4j.appender.TRACEFILE.layout=org.apache.log4j.PatternLayout\n### Notice we are including log4j's NDC here (%x)\nlog4j.appender.TRACEFILE.layout.ConversionPattern=%d{ISO8601} - %-5p [%t:%C{1}@%L][%x] - %m%n\n    "
        }
      }
    },
    {
      "ranger-hdfs-policymgr-ssl" : {
        "properties_attributes" : { },
        "properties" : {
          "xasecure.policymgr.clientssl.truststore" : "/usr/hdp/current/hadoop-client/conf/ranger-plugin-truststore.jks",
          "xasecure.policymgr.clientssl.keystore" : "/usr/hdp/current/hadoop-client/conf/ranger-plugin-keystore.jks",
          "xasecure.policymgr.clientssl.keystore.credential.file" : "jceks://file{{credential_file}}",
          "xasecure.policymgr.clientssl.truststore.credential.file" : "jceks://file{{credential_file}}"
        }
      }
    },
    {
      "ams-site" : {
        "properties_attributes" : { },
        "properties" : {
          "timeline.metrics.cluster.aggregator.hourly.interval" : "3600",
          "timeline.metrics.cluster.aggregator.minute.checkpointCutOffMultiplier" : "2",
          "timeline.metrics.cluster.aggregator.daily.checkpointCutOffMultiplier" : "1",
          "timeline.metrics.host.aggregator.hourly.interval" : "3600",
          "timeline.metrics.service.rpc.address" : "0.0.0.0:60200",
          "timeline.metrics.service.operation.mode" : "embedded",
          "timeline.metrics.aggregator.checkpoint.dir" : "/var/lib/ambari-metrics-collector/checkpoint",
          "timeline.metrics.cluster.aggregator.second.checkpointCutOffMultiplier" : "2",
          "timeline.metrics.host.aggregator.minute.checkpointCutOffMultiplier" : "2",
          "timeline.metrics.service.watcher.timeout" : "30",
          "timeline.metrics.service.checkpointDelay" : "60",
          "timeline.metrics.cluster.aggregator.second.interval" : "120",
          "timeline.metrics.service.webapp.address" : "0.0.0.0:6188",
          "timeline.metrics.host.aggregator.daily.ttl" : "604800",
          "timeline.metrics.service.watcher.delay" : "30",
          "timeline.metrics.hbase.fifo.compaction.enabled" : "true",
          "timeline.metrics.host.aggregator.hourly.disabled" : "false",
          "timeline.metrics.service.cluster.aggregator.appIds" : "datanode,nodemanager,hbase",
          "timeline.metrics.cluster.aggregator.hourly.checkpointCutOffMultiplier" : "2",
          "timeline.metrics.host.aggregator.daily.checkpointCutOffMultiplier" : "1",
          "timeline.metrics.service.resultset.fetchSize" : "2000",
          "timeline.metrics.cluster.aggregator.hourly.ttl" : "604800",
          "timeline.metrics.host.aggregator.ttl" : "86400",
          "phoenix.spool.directory" : "/tmp",
          "timeline.metrics.host.aggregate.splitpoints" : " ",
          "timeline.metrics.cluster.aggregator.minute.interval" : "300",
          "timeline.metrics.cluster.aggregator.minute.ttl" : "604800",
          "timeline.metrics.host.aggregator.minute.interval" : "300",
          "timeline.metrics.host.aggregator.minute.disabled" : "false",
          "timeline.metrics.cluster.aggregate.splitpoints" : " ",
          "timeline.metrics.cluster.aggregator.minute.disabled" : "false",
          "timeline.metrics.service.use.groupBy.aggregators" : "true",
          "phoenix.query.maxGlobalMemoryPercentage" : "25",
          "timeline.metrics.service.default.result.limit" : "15840",
          "timeline.metrics.hbase.compression.scheme" : "SNAPPY",
          "timeline.metrics.cluster.aggregator.daily.ttl" : "604800",
          "timeline.metrics.sink.report.interval" : "60",
          "timeline.metrics.cluster.aggregator.second.timeslice.interval" : "30",
          "timeline.metrics.host.aggregator.hourly.ttl" : "604800",
          "timeline.metrics.cluster.aggregator.daily.interval" : "86400",
          "timeline.metrics.host.aggregator.daily.disabled" : "false",
          "timeline.metrics.cluster.aggregator.daily.disabled" : "false",
          "timeline.metrics.cluster.aggregator.hourly.disabled" : "false",
          "timeline.metrics.service.watcher.initial.delay" : "600",
          "timeline.metrics.host.aggregator.minute.ttl" : "604800",
          "timeline.metrics.hbase.data.block.encoding" : "FAST_DIFF",
          "timeline.metrics.cluster.aggregator.second.disabled" : "false",
          "timeline.metrics.sink.collection.period" : "60",
          "timeline.metrics.host.aggregator.hourly.checkpointCutOffMultiplier" : "2",
          "timeline.metrics.daily.aggregator.minute.interval" : "86400",
          "timeline.metrics.cluster.aggregator.second.ttl" : "2592000"
        }
      }
    },
    {
      "krb5-conf" : {
        "properties_attributes" : { },
        "properties" : {
          "manage_krb5_conf" : "true",
          "conf_dir" : "/etc",
          "content" : "\n[libdefaults]\n  renew_lifetime = 7d\n  forwardable = true\n  default_realm = {{realm}}\n  ticket_lifetime = 24h\n  dns_lookup_realm = false\n  dns_lookup_kdc = false\n  #default_tgs_enctypes = {{encryption_types}}\n  #default_tkt_enctypes = {{encryption_types}}\n\n{% if domains %}\n[domain_realm]\n{% for domain in domains.split(',') %}\n  {{domain}} = {{realm}}\n{% endfor %}\n{% endif %}\n\n[logging]\n  default = FILE:/var/log/krb5kdc.log\n  admin_server = FILE:/var/log/kadmind.log\n  kdc = FILE:/var/log/krb5kdc.log\n\n[realms]\n  {{realm}} = {\n    admin_server = {{admin_server_host|default(kdc_host, True)}}\n    kdc = {{kdc_host}}\n  }\n\n{# Append additional realm declarations below #}"
        }
      }
    },
    {
      "mapred-site" : {
        "properties_attributes" : { },
        "properties" : {
          "mapreduce.map.speculative" : "true",
          "mapreduce.jobhistory.keytab" : "/etc/security/keytabs/jhs.service.keytab",
          "mapreduce.jobhistory.recovery.store.class" : "org.apache.hadoop.mapreduce.v2.hs.HistoryServerLeveldbStateStoreService",
          "mapreduce.job.counters.max" : "130",
          "mapreduce.reduce.log.level" : "INFO",
          "mapreduce.shuffle.port" : "13562",
          "yarn.app.mapreduce.am.admin-command-opts" : " ",
          "mapreduce.jobhistory.principal" : "jhs/_HOST@BAIDU.COM",
          "mapreduce.job.emit-timeline-data" : "false",
          "mapreduce.jobhistory.recovery.enable" : "true",
          "mapreduce.map.log.level" : "INFO",
          "yarn.app.mapreduce.am.staging-dir" : "/user",
          "mapreduce.reduce.shuffle.merge.percent" : "0.66",
          "mapreduce.output.fileoutputformat.compress" : "false",
          "mapreduce.admin.map.child.java.opts" : "-server -XX:NewRatio=8 -Djava.net.preferIPv4Stack=true",
          "mapreduce.job.reduce.slowstart.completedmaps" : "0.8",
          "mapreduce.application.framework.path" : "/hdp/apps/mapreduce/mapreduce.tar.gz#mr-framework",
          "mapreduce.application.classpath" : "/etc/hadoop/conf:$PWD/mr-framework/hadoop/share/hadoop/mapreduce/*:$PWD/mr-framework/hadoop/share/hadoop/mapreduce/lib/*:$PWD/mr-framework/hadoop/share/hadoop/common/*:$PWD/mr-framework/hadoop/share/hadoop/common/lib/*:$PWD/mr-framework/hadoop/share/hadoop/yarn/*:$PWD/mr-framework/hadoop/share/hadoop/yarn/lib/*:$PWD/mr-framework/hadoop/share/hadoop/hdfs/*:$PWD/mr-framework/hadoop/share/hadoop/hdfs/lib/*:/opt/bmr/hadoop/lib/hadoop-lzo-0.6.0.jar:/etc/hadoop/conf/secure:/opt/bmr/hbase/*:/opt/bmr/hbase/lib/*:/etc/hbase/conf",
          "mapreduce.jobhistory.webapp.spnego-keytab-file" : "/etc/security/keytabs/spnego.service.keytab",
          "mapreduce.reduce.java.opts" : "-Xmx1228m",
          "mapreduce.map.output.compress" : "true",
          "mapreduce.map.output.compress.codec" : "org.apache.hadoop.io.compress.SnappyCodec",
          "mapreduce.reduce.input.buffer.percent" : "0.0",
          "mapreduce.jobhistory.intermediate-done-dir" : "/mr-history/tmp",
          "yarn.app.mapreduce.am.log.level" : "INFO",
          "mapreduce.reduce.shuffle.fetch.retry.interval-ms" : "1000",
          "mapreduce.reduce.shuffle.input.buffer.percent" : "0.7",
          "mapreduce.reduce.speculative" : "true",
          "mapreduce.output.fileoutputformat.compress.type" : "BLOCK",
          "mapreduce.task.io.sort.mb" : "128",
          "mapreduce.cluster.administrators" : " hadoop",
          "mapreduce.reduce.shuffle.fetch.retry.timeout-ms" : "30000",
          "mapreduce.jobhistory.webapp.spnego-principal" : "HTTP/_HOST@BAIDU.COM",
          "mapreduce.jobhistory.address" : "%HOSTGROUP::host_group_2%:8220",
          "mapreduce.map.sort.spill.percent" : "0.7",
          "mapreduce.map.memory.mb" : "1024",
          "mapreduce.admin.reduce.child.java.opts" : "-server -XX:NewRatio=8 -Djava.net.preferIPv4Stack=true",
          "mapreduce.jobhistory.bind-host" : "0.0.0.0",
          "mapreduce.task.timeout" : "300000",
          "mapreduce.admin.user.env" : "LD_LIBRARY_PATH=/opt/bmr/hadoop/lib/native:/opt/bmr/hadoop/lib/native/Linux-amd64-64",
          "mapreduce.am.max-attempts" : "5",
          "mapreduce.reduce.memory.mb" : "1536",
          "mapreduce.framework.name" : "yarn",
          "mapreduce.reduce.shuffle.parallelcopies" : "30",
          "mapreduce.jobhistory.done-dir" : "/mr-history/done",
          "mapreduce.jobhistory.webapp.address" : "%HOSTGROUP::host_group_2%:8122",
          "mapreduce.reduce.shuffle.fetch.retry.enabled" : "1",
          "mapreduce.task.io.sort.factor" : "100",
          "mapreduce.jobhistory.recovery.store.leveldb.path" : "/hadoop/mapreduce/jhs",
          "yarn.app.mapreduce.am.command-opts" : "-Xmx1228m",
          "mapreduce.map.java.opts" : "-Xmx819m",
          "yarn.app.mapreduce.am.resource.mb" : "1536"
        }
      }
    },
    {
      "ranger-yarn-policymgr-ssl" : {
        "properties_attributes" : { },
        "properties" : {
          "xasecure.policymgr.clientssl.truststore" : "/usr/hdp/current/hadoop-client/conf/ranger-yarn-plugin-truststore.jks",
          "xasecure.policymgr.clientssl.keystore" : "/usr/hdp/current/hadoop-client/conf/ranger-yarn-plugin-keystore.jks",
          "xasecure.policymgr.clientssl.keystore.credential.file" : "jceks://file{{credential_file}}",
          "xasecure.policymgr.clientssl.truststore.credential.file" : "jceks://file{{credential_file}}"
        }
      }
    },
    {
      "oozie-env" : {
        "properties_attributes" : { },
        "properties" : {
          "oozie_admin_port" : "11001",
          "oozie_derby_database" : "Derby",
          "oozie_heapsize" : "2048m",
          "oozie_data_dir" : "/hadoop/oozie/data",
          "oozie_pid_dir" : "/var/run/oozie",
          "oozie_user" : "oozie",
          "oozie_admin_users" : "{oozie_user}, oozie-admin",
          "oozie_database" : "New Derby Database",
          "oozie_log_dir" : "/mnt/bmr/log/oozie",
          "oozie_permsize" : "256m",
          "content" : "\n#!/bin/bash\n\nif [ -d \"/usr/lib/bigtop-tomcat\" ]; then\n  export OOZIE_CONFIG=${OOZIE_CONFIG:-/etc/oozie/conf}\n  export CATALINA_BASE=${CATALINA_BASE:-{{oozie_server_dir}}}\n  export CATALINA_TMPDIR=${CATALINA_TMPDIR:-/var/lib/oozie}\n  export OOZIE_CATALINA_HOME=/usr/lib/bigtop-tomcat\nfi\n\n#Set JAVA HOME\nexport JAVA_HOME={{java_home}}\n\nexport JRE_HOME=${JAVA_HOME}\n\n# Set Oozie specific environment variables here.\n\n# Settings for the Embedded Tomcat that runs Oozie\n# Java System properties for Oozie should be specified in this variable\n#\n# export CATALINA_OPTS=\n\n# Oozie configuration file to load from Oozie configuration directory\n#\n# export OOZIE_CONFIG_FILE=oozie-site.xml\n\n# Oozie logs directory\n#\nexport OOZIE_LOG={{oozie_log_dir}}\n\n# Oozie pid directory\n#\nexport CATALINA_PID={{pid_file}}\n\n#Location of the data for oozie\nexport OOZIE_DATA={{oozie_data_dir}}\n\n# Oozie Log4J configuration file to load from Oozie configuration directory\n#\n# export OOZIE_LOG4J_FILE=oozie-log4j.properties\n\n# Reload interval of the Log4J configuration file, in seconds\n#\n# export OOZIE_LOG4J_RELOAD=10\n\n# The port Oozie server runs\n#\nexport OOZIE_HTTP_PORT={{oozie_server_port}}\n\n# The admin port Oozie server runs\n#\nexport OOZIE_ADMIN_PORT={{oozie_server_admin_port}}\n\n# The host name Oozie server runs on\n#\n# export OOZIE_HTTP_HOSTNAME=`hostname -f`\n\n# The base URL for callback URLs to Oozie\n#\n# export OOZIE_BASE_URL=\"http://${OOZIE_HTTP_HOSTNAME}:${OOZIE_HTTP_PORT}/oozie\"\nexport JAVA_LIBRARY_PATH={{hadoop_lib_home}}/native/Linux-amd64-64\n\n# At least 1 minute of retry time to account for server downtime during\n# upgrade/downgrade\nexport OOZIE_CLIENT_OPTS=\"${OOZIE_CLIENT_OPTS} -Doozie.connection.retry.count=5 \"\n\n# This is needed so that Oozie does not run into OOM or GC Overhead limit\n# exceeded exceptions. If the oozie server is handling large number of\n# workflows/coordinator jobs, the memory settings may need to be revised\nexport CATALINA_OPTS=\"${CATALINA_OPTS} -Xmx2048m -XX:MaxPermSize=256m \"\n    "
        }
      }
    },
    {
      "ssl-server" : {
        "properties_attributes" : { },
        "properties" : {
          "ssl.server.truststore.location" : "/etc/security/serverKeys/all.jks",
          "ssl.server.truststore.reload.interval" : "10000",
          "ssl.server.truststore.type" : "jks",
          "ssl.server.keystore.location" : "/etc/security/serverKeys/keystore.jks",
          "ssl.server.keystore.type" : "jks"
        }
      }
    },
    {
      "hdfs-log4j" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#  http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n\n\n# Define some default values that can be overridden by system properties\n# To change daemon root logger use hadoop_root_logger in hadoop-env\nhadoop.root.logger=INFO,console\nhadoop.log.dir=.\nhadoop.log.file=hadoop.log\n\n\n# Define the root logger to the system property \"hadoop.root.logger\".\nlog4j.rootLogger=${hadoop.root.logger}, EventCounter\n\n# Logging Threshold\nlog4j.threshhold=ALL\n\n#\n# Daily Rolling File Appender\n#\n\nlog4j.appender.DRFA=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.DRFA.File=${hadoop.log.dir}/${hadoop.log.file}\n\n# Rollver at midnight\nlog4j.appender.DRFA.DatePattern=.yyyy-MM-dd\n\n# 30-day backup\n#log4j.appender.DRFA.MaxBackupIndex=30\nlog4j.appender.DRFA.layout=org.apache.log4j.PatternLayout\n\n# Pattern format: Date LogLevel LoggerName LogMessage\nlog4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\n# Debugging Pattern format\n#log4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n\n\n\n#\n# console\n# Add \"console\" to rootlogger above if you want to use this\n#\n\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.target=System.err\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{2}: %m%n\n\n#\n# TaskLog Appender\n#\n\n#Default values\nhadoop.tasklog.taskid=null\nhadoop.tasklog.iscleanup=false\nhadoop.tasklog.noKeepSplits=4\nhadoop.tasklog.totalLogFileSize=100\nhadoop.tasklog.purgeLogSplits=true\nhadoop.tasklog.logsRetainHours=12\n\nlog4j.appender.TLA=org.apache.hadoop.mapred.TaskLogAppender\nlog4j.appender.TLA.taskId=${hadoop.tasklog.taskid}\nlog4j.appender.TLA.isCleanup=${hadoop.tasklog.iscleanup}\nlog4j.appender.TLA.totalLogFileSize=${hadoop.tasklog.totalLogFileSize}\n\nlog4j.appender.TLA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.TLA.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\n\n#\n#Security audit appender\n#\nhadoop.security.logger=INFO,console\nhadoop.security.log.maxfilesize=256MB\nhadoop.security.log.maxbackupindex=20\nlog4j.category.SecurityLogger=${hadoop.security.logger}\nhadoop.security.log.file=SecurityAuth.audit\nlog4j.appender.DRFAS=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.DRFAS.File=${hadoop.log.dir}/${hadoop.security.log.file}\nlog4j.appender.DRFAS.layout=org.apache.log4j.PatternLayout\nlog4j.appender.DRFAS.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\nlog4j.appender.DRFAS.DatePattern=.yyyy-MM-dd\n\nlog4j.appender.RFAS=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFAS.File=${hadoop.log.dir}/${hadoop.security.log.file}\nlog4j.appender.RFAS.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFAS.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\nlog4j.appender.RFAS.MaxFileSize=${hadoop.security.log.maxfilesize}\nlog4j.appender.RFAS.MaxBackupIndex=${hadoop.security.log.maxbackupindex}\n\n#\n# hdfs audit logging\n#\nhdfs.audit.logger=INFO,console\nlog4j.logger.org.apache.hadoop.hdfs.server.namenode.FSNamesystem.audit=${hdfs.audit.logger}\nlog4j.additivity.org.apache.hadoop.hdfs.server.namenode.FSNamesystem.audit=false\nlog4j.appender.DRFAAUDIT=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.DRFAAUDIT.File=${hadoop.log.dir}/hdfs-audit.log\nlog4j.appender.DRFAAUDIT.layout=org.apache.log4j.PatternLayout\nlog4j.appender.DRFAAUDIT.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n\nlog4j.appender.DRFAAUDIT.DatePattern=.yyyy-MM-dd\n\n#\n# mapred audit logging\n#\nmapred.audit.logger=INFO,console\nlog4j.logger.org.apache.hadoop.mapred.AuditLogger=${mapred.audit.logger}\nlog4j.additivity.org.apache.hadoop.mapred.AuditLogger=false\nlog4j.appender.MRAUDIT=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.MRAUDIT.File=${hadoop.log.dir}/mapred-audit.log\nlog4j.appender.MRAUDIT.layout=org.apache.log4j.PatternLayout\nlog4j.appender.MRAUDIT.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n\nlog4j.appender.MRAUDIT.DatePattern=.yyyy-MM-dd\n\n#\n# Rolling File Appender\n#\n\nlog4j.appender.RFA=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFA.File=${hadoop.log.dir}/${hadoop.log.file}\n\n# Logfile size and and 30-day backups\nlog4j.appender.RFA.MaxFileSize=256MB\nlog4j.appender.RFA.MaxBackupIndex=10\n\nlog4j.appender.RFA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} - %m%n\nlog4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n\n\n\n# Custom Logging levels\n\nhadoop.metrics.log.level=INFO\n#log4j.logger.org.apache.hadoop.mapred.JobTracker=DEBUG\n#log4j.logger.org.apache.hadoop.mapred.TaskTracker=DEBUG\n#log4j.logger.org.apache.hadoop.fs.FSNamesystem=DEBUG\nlog4j.logger.org.apache.hadoop.metrics2=${hadoop.metrics.log.level}\n\n# Jets3t library\nlog4j.logger.org.jets3t.service.impl.rest.httpclient.RestS3Service=ERROR\n\n#\n# Null Appender\n# Trap security logger on the hadoop client side\n#\nlog4j.appender.NullAppender=org.apache.log4j.varia.NullAppender\n\n#\n# Event Counter Appender\n# Sends counts of logging messages at different severity levels to Hadoop Metrics.\n#\nlog4j.appender.EventCounter=org.apache.hadoop.log.metrics.EventCounter\n\n# Removes \"deprecated\" messages\nlog4j.logger.org.apache.hadoop.conf.Configuration.deprecation=WARN\n\n#\n# HDFS block state change log from block manager\n#\n# Uncomment the following to suppress normal block state change\n# messages from BlockManager in NameNode.\n#log4j.logger.BlockStateChange=WARN\n    "
        }
      }
    },
    {
      "ranger-yarn-security" : {
        "properties_attributes" : { },
        "properties" : {
          "ranger.plugin.yarn.policy.rest.ssl.config.file" : "/etc/hadoop/conf/ranger-policymgr-ssl-yarn.xml",
          "ranger.plugin.yarn.policy.source.impl" : "org.apache.ranger.admin.client.RangerAdminRESTClient",
          "ranger.plugin.yarn.policy.cache.dir" : "/etc/ranger/{{repo_name}}/policycache",
          "ranger.plugin.yarn.policy.pollIntervalMs" : "30000",
          "ranger.plugin.yarn.policy.rest.url" : "{{policymgr_mgr_url}}",
          "ranger.plugin.yarn.service.name" : "{{repo_name}}"
        }
      }
    },
    {
      "hadoop-policy" : {
        "properties_attributes" : { },
        "properties" : {
          "security.inter.datanode.protocol.acl" : "*",
          "security.refresh.usertogroups.mappings.protocol.acl" : "hadoop",
          "security.admin.operations.protocol.acl" : "hadoop",
          "security.client.datanode.protocol.acl" : "*",
          "security.datanode.protocol.acl" : "*",
          "security.inter.tracker.protocol.acl" : "*",
          "security.job.client.protocol.acl" : "*",
          "security.client.protocol.acl" : "*",
          "security.job.task.protocol.acl" : "*",
          "security.refresh.policy.protocol.acl" : "hadoop",
          "security.namenode.protocol.acl" : "*"
        }
      }
    },
    {
      "ranger-yarn-audit" : {
        "properties_attributes" : { },
        "properties" : {
          "xasecure.audit.credential.provider.file" : "jceks://file{{credential_file}}",
          "xasecure.audit.destination.hdfs.batch.filespool.dir" : "/var/log/hadoop/yarn/audit/hdfs/spool",
          "xasecure.audit.is.enabled" : "true",
          "xasecure.audit.destination.hdfs" : "true",
          "xasecure.audit.destination.solr.batch.filespool.dir" : "/var/log/hadoop/yarn/audit/solr/spool",
          "xasecure.audit.destination.hdfs.dir" : "hdfs://NAMENODE_HOSTNAME:8020/ranger/audit",
          "xasecure.audit.destination.db.jdbc.url" : "{{audit_jdbc_url}}",
          "xasecure.audit.destination.db.jdbc.driver" : "{{jdbc_driver}}",
          "xasecure.audit.destination.db" : "false",
          "xasecure.audit.destination.solr" : "false",
          "xasecure.audit.destination.db.user" : "{{xa_audit_db_user}}",
          "xasecure.audit.destination.solr.zookeepers" : "NONE",
          "xasecure.audit.provider.summary.enabled" : "false",
          "xasecure.audit.destination.db.batch.filespool.dir" : "/var/log/hadoop/yarn/audit/db/spool",
          "xasecure.audit.destination.solr.urls" : ""
        }
      }
    },
    {
      "tez-site" : {
        "properties_attributes" : { },
        "properties" : {
          "tez.am.launch.cmd-opts" : "-XX:+PrintGCDetails -verbose:gc -XX:+PrintGCTimeStamps -XX:+UseNUMA -XX:+UseParallelGC",
          "tez.runtime.sorter.class" : "PIPELINED",
          "tez.counters.max.groups" : "3000",
          "tez.task.resource.memory.mb" : "1536",
          "tez.am.view-acls" : "",
          "tez.runtime.optimize.local.fetch" : "true",
          "tez.runtime.pipelined.sorter.sort.threads" : "2",
          "tez.shuffle-vertex-manager.min-src-fraction" : "0.2",
          "tez.staging-dir" : "/tmp/${user.name}/staging",
          "tez.session.am.dag.submit.timeout.secs" : "300",
          "tez.am.container.reuse.locality.delay-allocation-millis" : "250",
          "tez.runtime.compress" : "true",
          "tez.session.client.timeout.secs" : "-1",
          "tez.am.am-rm.heartbeat.interval-ms.max" : "250",
          "tez.am.container.idle.release-timeout-min.millis" : "10000",
          "tez.task.launch.cmd-opts" : "-XX:+PrintGCDetails -verbose:gc -XX:+PrintGCTimeStamps -XX:+UseNUMA -XX:+UseParallelGC",
          "tez.am.launch.cluster-default.cmd-opts" : "-server -Djava.net.preferIPv4Stack=true -Dhdp.version=${hdp.version}",
          "tez.am.maxtaskfailures.per.node" : "10",
          "tez.lib.uris" : "/hdp/apps/tez/tez.tar.gz",
          "tez.am.tez-ui.history-url.template" : "__HISTORY_URL_BASE__?viewPath=%2F%23%2Ftez-app%2F__APPLICATION_ID__",
          "tez.counters.max" : "10000",
          "tez.generate.debug.artifacts" : "false",
          "tez.task.launch.env" : "LD_LIBRARY_PATH=/usr/hdp/${hdp.version}/hadoop/lib/native:/usr/hdp/${hdp.version}/hadoop/lib/native/Linux-amd64-64",
          "tez.use.cluster.hadoop-libs" : "false",
          "tez.runtime.convert.user-payload.to.history-text" : "false",
          "tez.runtime.unordered.output.buffer.size-mb" : "100",
          "tez.am.container.reuse.enabled" : "true",
          "tez.grouping.split-waves" : "1.7",
          "tez.shuffle-vertex-manager.max-src-fraction" : "0.4",
          "tez.grouping.max-size" : "1073741824",
          "tez.am.log.level" : "INFO",
          "tez.task.am.heartbeat.counter.interval-ms.max" : "4000",
          "tez.task.launch.cluster-default.cmd-opts" : "-server -Djava.net.preferIPv4Stack=true -Dhdp.version=${hdp.version}",
          "tez.task.max-events-per-heartbeat" : "500",
          "tez.history.logging.service.class" : "org.apache.tez.dag.history.logging.ats.ATSHistoryLoggingService",
          "tez.am.container.idle.release-timeout-max.millis" : "20000",
          "tez.am.resource.memory.mb" : "1536",
          "tez.am.max.app.attempts" : "2",
          "tez.cluster.additional.classpath.prefix" : "/opt/bmr/hadoop/lib/hadoop-lzo-0.6.0.jar:/etc/hadoop/conf/secure",
          "tez.am.container.reuse.non-local-fallback.enabled" : "false",
          "tez.am.container.reuse.rack-fallback.enabled" : "true",
          "tez.task.get-task.sleep.interval-ms.max" : "200",
          "tez.grouping.min-size" : "16777216",
          "tez.runtime.io.sort.mb" : "272",
          "tez.task.generate.counters.per.io" : "true",
          "tez.am.launch.env" : "LD_LIBRARY_PATH=/opt/bmr/hadoop/lib/native:/opt/bmr/hadoop/lib/native/Linux-amd64-64",
          "tez.runtime.compress.codec" : "org.apache.hadoop.io.compress.SnappyCodec"
        }
      }
    },
    {
      "core-site" : {
        "properties_attributes" : {
          "final" : {
            "fs.defaultFS" : "true"
          }
        },
        "properties" : {
          "fs.defaultFS" : "hdfs://%HOSTGROUP::host_group_2%:8020",
          "ipc.server.tcpnodelay" : "true",
          "mapreduce.jobtracker.webinterface.trusted" : "false",
          "fs.bos.multipart.uploads.speed" : "10485760",
          "hadoop.security.auth_to_local" : "RULE:[1:$1@$0](ambari-qa-6b1dd6eb-c598-41af-57ec-66dfd95f7ae1@BAIDU.COM)s/.*/ambari-qa/\nRULE:[1:$1@$0](hdfs-6b1dd6eb-c598-41af-57ec-66dfd95f7ae1@BAIDU.COM)s/.*/hdfs/\nRULE:[1:$1@$0](.*@BAIDU.COM)s/@.*//\nRULE:[2:$1@$0](amshbase@BAIDU.COM)s/.*/ams/\nRULE:[2:$1@$0](amszk@BAIDU.COM)s/.*/ams/\nRULE:[2:$1@$0](dn@BAIDU.COM)s/.*/hdfs/\nRULE:[2:$1@$0](jhs@BAIDU.COM)s/.*/mapred/\nRULE:[2:$1@$0](nm@BAIDU.COM)s/.*/yarn/\nRULE:[2:$1@$0](nn@BAIDU.COM)s/.*/hdfs/\nRULE:[2:$1@$0](oozie@BAIDU.COM)s/.*/oozie/\nRULE:[2:$1@$0](rm@BAIDU.COM)s/.*/yarn/\nRULE:[2:$1@$0](yarn@BAIDU.COM)s/.*/yarn/\nRULE:[2:$1@$0]([nd]n@.*)s/.*/hdfs/\nRULE:[2:$1@$0]([rn]m@.*)s/.*/yarn/\nRULE:[2:$1@$0](hm@.*)s/.*/hbase/\nRULE:[2:$1@$0](jhs@.*)s/.*/mapred/\nRULE:[2:$1@$0](rs@.*)s/.*/hbase/\nDEFAULT",
          "hadoop.proxyuser.root.groups" : "root,hdfs,hue",
          "hadoop.security.key.provider.path" : "",
          "fs.bos.secret.access.key" : "92747551f3ed4bbfb15a7ab7aa4af69c",
          "ipc.client.idlethreshold" : "8000",
          "hadoop.proxyuser.hdfs.groups" : "*",
          "fs.bos.multipart.uploads.factor" : "10.0",
          "fs.trash.interval" : "360",
          "hadoop.http.authentication.simple.anonymous.allowed" : "true",
          "hadoop.security.authorization" : "true",
          "ipc.client.connection.maxidletime" : "30000",
          "fs.bos.multipart.uploads.attempts" : "5",
          "hadoop.proxyuser.hcat.groups" : "users",
          "hadoop.proxyuser.hive.hosts" : "%HOSTGROUP::host_group_2%",
          "hadoop.proxyuser.root.hosts" : "ngc4ad0be-master-instance-4mw8egac.novalocal",
          "hadoop.proxyuser.httpfs.groups" : "*",
          "hadoop.proxyuser.httpfs.hosts" : "*",
          "ha.failover-controller.active-standby-elector.zk.op.retries" : "120",
          "fs.bos.multipart.uploads.block.size" : "9437184",
          "hadoop.security.authentication" : "kerberos",
          "fs.bos.access.key" : "9f94460ed8144534b8bdeba1e16be193",
          "hadoop.proxyuser.hdfs.hosts" : "*",
          "hadoop.proxyuser.hue.hosts" : "*",
          "fs.bos.endpoint" : "http://10.105.97.15",
          "ipc.client.connect.max.retries" : "50",
          "hadoop.proxyuser.yarn.groups" : "*",
          "io.file.buffer.size" : "131072",
          "fs.bos.impl" : "org.apache.hadoop.fs.bos.BaiduBosFileSystem",
          "hadoop.proxyuser.oozie.hosts" : "%HOSTGROUP::host_group_2%",
          "fs.bos.multipart.uploads.cocurrent.size" : "3",
          "hadoop.proxyuser.hcat.hosts" : "%HOSTGROUP::host_group_2%",
          "hadoop.proxyuser.hue.groups" : "*",
          "hadoop.proxyuser.oozie.groups" : "*",
          "net.topology.script.file.name" : "/etc/hadoop/conf/topology_script.py",
          "hadoop.http.staticuser.user" : "yarn",
          "io.compression.codecs" : "org.apache.hadoop.io.compress.GzipCodec,org.apache.hadoop.io.compress.DefaultCodec,org.apache.hadoop.io.compress.SnappyCodec,com.hadoop.compression.lzo.LzoCodec,com.hadoop.compression.lzo.LzopCodec,org.apache.hadoop.io.compress.BZip2Codec",
          "hadoop.proxyuser.hive.groups" : "*",
          "hadoop.proxyuser.yarn.hosts" : "%HOSTGROUP::host_group_2%",
          "hadoop.proxyuser.HTTP.groups" : "users",
          "io.serializations" : "org.apache.hadoop.io.serializer.WritableSerialization"
        }
      }
    },
    {
      "oozie-log4j" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License. See accompanying LICENSE file.\n#\n\n# If the Java System property 'oozie.log.dir' is not defined at Oozie start up time\n# XLogService sets its value to '${oozie.home}/logs'\n\nlog4j.appender.oozie=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.oozie.DatePattern='.'yyyy-MM-dd-HH\nlog4j.appender.oozie.File=${oozie.log.dir}/oozie.log\nlog4j.appender.oozie.Append=true\nlog4j.appender.oozie.layout=org.apache.log4j.PatternLayout\nlog4j.appender.oozie.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - SERVER[${oozie.instance.id}] %m%n\n\nlog4j.appender.oozieops=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.oozieops.DatePattern='.'yyyy-MM-dd\nlog4j.appender.oozieops.File=${oozie.log.dir}/oozie-ops.log\nlog4j.appender.oozieops.Append=true\nlog4j.appender.oozieops.layout=org.apache.log4j.PatternLayout\nlog4j.appender.oozieops.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - %m%n\n\nlog4j.appender.oozieinstrumentation=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.oozieinstrumentation.DatePattern='.'yyyy-MM-dd\nlog4j.appender.oozieinstrumentation.File=${oozie.log.dir}/oozie-instrumentation.log\nlog4j.appender.oozieinstrumentation.Append=true\nlog4j.appender.oozieinstrumentation.layout=org.apache.log4j.PatternLayout\nlog4j.appender.oozieinstrumentation.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - %m%n\n\nlog4j.appender.oozieaudit=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.oozieaudit.DatePattern='.'yyyy-MM-dd\nlog4j.appender.oozieaudit.File=${oozie.log.dir}/oozie-audit.log\nlog4j.appender.oozieaudit.Append=true\nlog4j.appender.oozieaudit.layout=org.apache.log4j.PatternLayout\nlog4j.appender.oozieaudit.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - %m%n\n\nlog4j.appender.openjpa=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.openjpa.DatePattern='.'yyyy-MM-dd\nlog4j.appender.openjpa.File=${oozie.log.dir}/oozie-jpa.log\nlog4j.appender.openjpa.Append=true\nlog4j.appender.openjpa.layout=org.apache.log4j.PatternLayout\nlog4j.appender.openjpa.layout.ConversionPattern=%d{ISO8601} %5p %c{1}:%L - %m%n\n\nlog4j.logger.openjpa=INFO, openjpa\nlog4j.logger.oozieops=INFO, oozieops\nlog4j.logger.oozieinstrumentation=ALL, oozieinstrumentation\nlog4j.logger.oozieaudit=ALL, oozieaudit\nlog4j.logger.org.apache.oozie=INFO, oozie\nlog4j.logger.org.apache.hadoop=WARN, oozie\nlog4j.logger.org.mortbay=WARN, oozie\nlog4j.logger.org.hsqldb=WARN, oozie\nlog4j.logger.org.apache.hadoop.security.authentication.server=INFO, oozie\n    "
        }
      }
    },
    {
      "ams-hbase-env" : {
        "properties_attributes" : { },
        "properties" : {
          "hbase_master_maxperm_size" : "128",
          "max_open_files_limit" : "32768",
          "hbase_pid_dir" : "/var/run/ambari-metrics-collector/",
          "regionserver_xmn_size" : "256",
          "hbase_log_dir" : "/mnt/bmr/log/ambari-metrics-collector",
          "hbase_regionserver_heapsize" : "256",
          "hbase_master_heapsize" : "256",
          "hbase_regionserver_xmn_ratio" : "0.2",
          "hbase_master_xmn_size" : "192",
          "content" : "\n# Set environment variables here.\n\n# The java implementation to use. Java 1.6+ required.\nexport JAVA_HOME={{java64_home}}\n\n# HBase Configuration directory\nexport HBASE_CONF_DIR=${HBASE_CONF_DIR:-{{hbase_conf_dir}}}\n\n# Extra Java CLASSPATH elements. Optional.\nadditional_cp={{hbase_classpath_additional}}\nif [  -n \"$additional_cp\" ];\nthen\n  export HBASE_CLASSPATH=${HBASE_CLASSPATH}:$additional_cp\nelse\n  export HBASE_CLASSPATH=${HBASE_CLASSPATH}\nfi\n\n# The maximum amount of heap to use for hbase shell.\nexport HBASE_SHELL_OPTS=\"-Xmx256m\"\n\n# Extra Java runtime options.\n# Below are what we set by default. May only work with SUN JVM.\n# For more on why as well as other possible settings,\n# see http://wiki.apache.org/hadoop/PerformanceTuning\nexport HBASE_OPTS=\"-XX:+UseConcMarkSweepGC -XX:ErrorFile={{hbase_log_dir}}/hs_err_pid%p.log -Djava.io.tmpdir={{hbase_tmp_dir}}\"\nexport SERVER_GC_OPTS=\"-verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:{{hbase_log_dir}}/gc.log-`date +'%Y%m%d%H%M'`\"\n# Uncomment below to enable java garbage collection logging.\n# export HBASE_OPTS=\"$HBASE_OPTS -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:$HBASE_HOME/logs/gc-hbase.log\"\n\n# Uncomment and adjust to enable JMX exporting\n# See jmxremote.password and jmxremote.access in $JRE_HOME/lib/management to configure remote password access.\n# More details at: http://java.sun.com/javase/6/docs/technotes/guides/management/agent.html\n#\n# export HBASE_JMX_BASE=\"-Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false\"\n\n{% if java_version < 8 %}\nexport HBASE_MASTER_OPTS=\" -XX:PermSize=64m -XX:MaxPermSize={{hbase_master_maxperm_size}} -Xms{{hbase_heapsize}} -Xmx{{hbase_heapsize}} -Xmn{{hbase_master_xmn_size}} -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly\"\nexport HBASE_REGIONSERVER_OPTS=\"-XX:MaxPermSize=128m -Xmn{{regionserver_xmn_size}} -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly -Xms{{regionserver_heapsize}} -Xmx{{regionserver_heapsize}}\"\n{% else %}\nexport HBASE_MASTER_OPTS=\" -Xms{{hbase_heapsize}} -Xmx{{hbase_heapsize}} -Xmn{{hbase_master_xmn_size}} -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly\"\nexport HBASE_REGIONSERVER_OPTS=\" -Xmn{{regionserver_xmn_size}} -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly -Xms{{regionserver_heapsize}} -Xmx{{regionserver_heapsize}}\"\n{% endif %}\n\n\n# export HBASE_THRIFT_OPTS=\"$HBASE_JMX_BASE -Dcom.sun.management.jmxremote.port=10103\"\n# export HBASE_ZOOKEEPER_OPTS=\"$HBASE_JMX_BASE -Dcom.sun.management.jmxremote.port=10104\"\n\n# File naming hosts on which HRegionServers will run. $HBASE_HOME/conf/regionservers by default.\nexport HBASE_REGIONSERVERS=${HBASE_CONF_DIR}/regionservers\n\n# Extra ssh options. Empty by default.\n# export HBASE_SSH_OPTS=\"-o ConnectTimeout=1 -o SendEnv=HBASE_CONF_DIR\"\n\n# Where log files are stored. $HBASE_HOME/logs by default.\nexport HBASE_LOG_DIR={{hbase_log_dir}}\n\n# A string representing this instance of hbase. $USER by default.\n# export HBASE_IDENT_STRING=$USER\n\n# The scheduling priority for daemon processes. See 'man nice'.\n# export HBASE_NICENESS=10\n\n# The directory where pid files are stored. /tmp by default.\nexport HBASE_PID_DIR={{hbase_pid_dir}}\n\n# Seconds to sleep between slave commands. Unset by default. This\n# can be useful in large clusters, where, e.g., slave rsyncs can\n# otherwise arrive faster than the master can service them.\n# export HBASE_SLAVE_SLEEP=0.1\n\n# Tell HBase whether it should manage it's own instance of Zookeeper or not.\nexport HBASE_MANAGES_ZK=false\n\n{% if security_enabled %}\nexport HBASE_OPTS=\"$HBASE_OPTS -Djava.security.auth.login.config={{client_jaas_config_file}}\"\nexport HBASE_MASTER_OPTS=\"$HBASE_MASTER_OPTS -Djava.security.auth.login.config={{master_jaas_config_file}}\"\nexport HBASE_REGIONSERVER_OPTS=\"$HBASE_REGIONSERVER_OPTS -Djava.security.auth.login.config={{regionserver_jaas_config_file}}\"\nexport HBASE_ZOOKEEPER_OPTS=\"$HBASE_ZOOKEEPER_OPTS -Djava.security.auth.login.config={{ams_zookeeper_jaas_config_file}}\"\n{% endif %}\n\n# use embedded native libs\n_HADOOP_NATIVE_LIB=\"/usr/lib/ams-hbase/lib/hadoop-native/\"\nexport HBASE_OPTS=\"$HBASE_OPTS -Djava.library.path=${_HADOOP_NATIVE_LIB}\"\n\n# Unset HADOOP_HOME to avoid importing HADOOP installed cluster related configs like: /usr/hdp/2.2.0.0-2041/hadoop/conf/\nexport HADOOP_HOME={{ams_hbase_home_dir}}",
          "hbase_classpath_additional" : ""
        }
      }
    },
    {
      "ams-log4j" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n# Define some default values that can be overridden by system properties\nams.log.dir=.\nams.log.file=ambari-metrics-collector.log\n\n# Root logger option\nlog4j.rootLogger=INFO,file\n\n# Direct log messages to a log file\nlog4j.appender.file=org.apache.log4j.RollingFileAppender\nlog4j.appender.file.File=${ams.log.dir}/${ams.log.file}\nlog4j.appender.file.MaxFileSize=80MB\nlog4j.appender.file.MaxBackupIndex=60\nlog4j.appender.file.layout=org.apache.log4j.PatternLayout\nlog4j.appender.file.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n"
        }
      }
    },
    {
      "hdfs-site" : {
        "properties_attributes" : {
          "final" : {
            "dfs.webhdfs.enabled" : "true",
            "dfs.namenode.http-address" : "true",
            "dfs.support.append" : "true",
            "dfs.namenode.name.dir" : "true",
            "dfs.datanode.failed.volumes.tolerated" : "true",
            "dfs.datanode.data.dir" : "true"
          }
        },
        "properties" : {
          "dfs.replication" : "3",
          "dfs.namenode.keytab.file" : "/etc/security/keytabs/nn.service.keytab",
          "dfs.namenode.audit.log.async" : "true",
          "dfs.namenode.checkpoint.dir" : "/mnt/hadoop/hdfs/namesecondary",
          "dfs.encryption.key.provider.uri" : "",
          "dfs.namenode.avoid.read.stale.datanode" : "true",
          "dfs.journalnode.http-address" : "0.0.0.0:8480",
          "nfs.kerberos.principal" : "nfs/_HOST@BAIDU.COM",
          "nfs.file.dump.dir" : "/tmp/.hdfs-nfs",
          "dfs.namenode.rpc-address" : "%HOSTGROUP::host_group_2%:8020",
          "dfs.namenode.https-address" : "%HOSTGROUP::host_group_2%:50470",
          "dfs.web.authentication.kerberos.principal" : "HTTP/_HOST@BAIDU.COM",
          "dfs.secondary.namenode.kerberos.principal" : "nn/_HOST@BAIDU.COM",
          "dfs.encrypt.data.transfer.cipher.suites" : "AES/CTR/NoPadding",
          "dfs.client.read.shortcircuit.streams.cache.size" : "4096",
          "dfs.hosts.exclude" : "/etc/hadoop/conf/dfs.exclude",
          "dfs.namenode.kerberos.internal.spnego.principal" : "HTTP/_HOST@BAIDU.COM",
          "dfs.namenode.acls.enabled" : "false",
          "dfs.journalnode.keytab.file" : "/etc/security/keytabs/jn.service.keytab",
          "dfs.secondary.namenode.keytab.file" : "/etc/security/keytabs/nn.service.keytab",
          "dfs.datanode.keytab.file" : "/etc/security/keytabs/dn.service.keytab",
          "dfs.namenode.accesstime.precision" : "0",
          "dfs.journalnode.kerberos.principal" : "jn/_HOST@BAIDU.COM",
          "dfs.namenode.fslock.fair" : "false",
          "dfs.web.authentication.kerberos.keytab" : "/etc/security/keytabs/spnego.service.keytab",
          "dfs.permissions.enabled" : "true",
          "dfs.datanode.balance.bandwidthPerSec" : "6250000",
          "dfs.namenode.stale.datanode.interval" : "30000",
          "dfs.secondary.namenode.kerberos.internal.spnego.principal" : "HTTP/_HOST@BAIDU.COM",
          "dfs.content-summary.limit" : "5000",
          "dfs.http.policy" : "HTTP_ONLY",
          "dfs.journalnode.https-address" : "0.0.0.0:8481",
          "dfs.datanode.du.reserved" : "10737418240",
          "dfs.datanode.kerberos.principal" : "dn/_HOST@BAIDU.COM",
          "dfs.domain.socket.path" : "/var/lib/hadoop-hdfs/dn_socket",
          "dfs.datanode.ipc.address" : "0.0.0.0:8010",
          "dfs.cluster.administrators" : " hdfs",
          "dfs.datanode.max.transfer.threads" : "1024",
          "dfs.namenode.handler.count" : "100",
          "dfs.https.port" : "50470",
          "dfs.replication.max" : "50",
          "dfs.client.read.shortcircuit" : "true",
          "dfs.webhdfs.enabled" : "true",
          "dfs.namenode.http-address" : "%HOSTGROUP::host_group_2%:50070",
          "dfs.namenode.name.dir" : "/mnt/hadoop/hdfs/namenode",
          "dfs.namenode.avoid.write.stale.datanode" : "true",
          "dfs.namenode.kerberos.principal" : "nn/_HOST@BAIDU.COM",
          "dfs.datanode.https.address" : "0.0.0.0:50475",
          "dfs.datanode.failed.volumes.tolerated" : "0",
          "dfs.client.retry.policy.enabled" : "false",
          "dfs.namenode.startup.delay.block.deletion.sec" : "3600",
          "dfs.block.access.token.enable" : "true",
          "dfs.datanode.data.dir" : "/mnt/hadoop/hdfs/data",
          "dfs.permissions.superusergroup" : "hdfs",
          "dfs.blocksize" : "134217728",
          "dfs.namenode.checkpoint.edits.dir" : "${dfs.namenode.checkpoint.dir}",
          "nfs.exports.allowed.hosts" : "* rw",
          "dfs.datanode.address" : "0.0.0.0:1019",
          "dfs.blockreport.initialDelay" : "120",
          "dfs.datanode.data.dir.perm" : "750",
          "dfs.namenode.write.stale.datanode.ratio" : "1.0f",
          "dfs.namenode.name.dir.restore" : "true",
          "dfs.heartbeat.interval" : "3",
          "dfs.namenode.secondary.http-address" : "%HOSTGROUP::host_group_2%:50090",
          "nfs.keytab.file" : "/etc/security/keytabs/nfs.service.keytab",
          "dfs.namenode.checkpoint.txns" : "1000000",
          "dfs.journalnode.edits.dir" : "/hadoop/hdfs/journalnode",
          "dfs.support.append" : "true",
          "fs.permissions.umask-mode" : "022",
          "dfs.namenode.safemode.threshold-pct" : "1.0f",
          "dfs.namenode.checkpoint.period" : "21600",
          "dfs.datanode.http.address" : "0.0.0.0:1022",
          "dfs.journalnode.kerberos.internal.spnego.principal" : "HTTP/_HOST@BAIDU.COM"
        }
      }
    },
    {
      "yarn-site" : {
        "properties_attributes" : { },
        "properties" : {
          "yarn.resourcemanager.zk-address" : "%HOSTGROUP::host_group_2%:2181",
          "yarn.nodemanager.container-monitor.interval-ms" : "3000",
          "yarn.resourcemanager.webapp.spnego-principal" : "HTTP/_HOST@BAIDU.COM",
          "yarn.timeline-service.entity-group-fs-store.active-dir" : "/ats/active/",
          "yarn.timeline-service.http-authentication.signer.secret.provider.object" : "",
          "yarn.resourcemanager.proxyusers.*.users" : "",
          "yarn.nodemanager.linux-container-executor.group" : "hadoop",
          "yarn.application.classpath" : "$HADOOP_CONF_DIR,/opt/bmr/hadoop/*,/opt/bmr/hadoop/lib/*,/opt/bmr/hadoop/share/hadoop/hdfs/*,/opt/bmr/hadoop/share/hadoop/hdfs/lib/*,/opt/bmr/hadoop/share/hadoop/yarn/*,/opt/bmr/hadoop/share/hadoop/yarn/lib/*,/opt/bmr/hadoop/share/hadoop/common/*,/opt/bmr/hadoop/share/hadoop/common/lib/*,/opt/bmr/hadoop/share/hadoop/mapreduce/*,/opt/bmr/hadoop/share/hadoop/mapreduce/lib/*,/opt/bmr/hadoop/share/hadoop/kms/*,/opt/bmr/hadoop/share/hadoop/kms/lib/*,/opt/bmr/hadoop/share/hadoop/tools/*,/opt/bmr/hadoop/share/hadoop/tools/lib/*",
          "yarn.timeline-service.http-authentication.token.validity" : "",
          "yarn.admin.acl" : "yarn,dr.who",
          "yarn.timeline-service.entity-group-fs-store.cleaner-interval-seconds" : "3600",
          "yarn.nodemanager.remote-app-log-dir-suffix" : "logs",
          "yarn.nodemanager.address" : "0.0.0.0:45454",
          "yarn.resourcemanager.webapp.address" : "%HOSTGROUP::host_group_2%:8088",
          "yarn.timeline-service.leveldb-timeline-store.ttl-interval-ms" : "300000",
          "yarn.node-labels.manager-class" : "org.apache.hadoop.yarn.server.resourcemanager.nodelabels.MemoryRMNodeLabelsManager",
          "yarn.scheduler.maximum-allocation-vcores" : "32",
          "yarn.timeline-service.http-authentication.kerberos.keytab" : "/etc/security/keytabs/spnego.service.keytab",
          "yarn.timeline-service.address" : "%HOSTGROUP::host_group_2%:10200",
          "yarn.timeline-service.enabled" : "true",
          "yarn.nodemanager.aux-services" : "mapreduce_shuffle",
          "yarn.nodemanager.resource.cpu-vcores" : "4",
          "yarn.resourcemanager.webapp.delegation-token-auth-filter.enabled" : "false",
          "yarn.nodemanager.aux-services.spark_shuffle.class" : "org.apache.spark.network.yarn.YarnShuffleService",
          "yarn.nodemanager.log-aggregation.debug-enabled" : "false",
          "yarn.resourcemanager.zk-acl" : "world:anyone:rwcda ",
          "yarn.timeline-service.http-authentication.signature.secret" : "",
          "yarn.resourcemanager.webapp.spnego-keytab-file" : "/etc/security/keytabs/spnego.service.keytab",
          "yarn.timeline-service.http-authentication.kerberos.principal" : "HTTP/_HOST@BAIDU.COM",
          "yarn.client.nodemanager-connect.max-wait-ms" : "900000",
          "yarn.http.policy" : "HTTP_ONLY",
          "yarn.timeline-service.http-authentication.simple.anonymous.allowed" : "true",
          "yarn.resourcemanager.zk-state-store.parent-path" : "/rmstore",
          "yarn.timeline-service.leveldb-timeline-store.start-time-read-cache-size" : "10000",
          "yarn.nodemanager.keytab" : "/etc/security/keytabs/nm.service.keytab",
          "yarn.resourcemanager.admin.address" : "%HOSTGROUP::host_group_2%:8141",
          "yarn.nodemanager.linux-container-executor.cgroups.strict-resource-usage" : "false",
          "yarn.resourcemanager.resource-tracker.address" : "%HOSTGROUP::host_group_2%:8025",
          "yarn.nodemanager.delete.debug-delay-sec" : "259200",
          "yarn.resourcemanager.fs.state-store.retry-policy-spec" : "2000, 500",
          "yarn.timeline-service.http-authentication.type" : "kerberos",
          "yarn.timeline-service.ttl-enable" : "true",
          "yarn.timeline-service.entity-group-fs-store.retain-seconds" : "604800",
          "yarn.log-aggregation.retain-seconds" : "2592000",
          "yarn.nodemanager.resource.memory-mb" : "8192",
          "yarn.nodemanager.disk-health-checker.min-healthy-disks" : "0.25",
          "yarn.node-labels.enabled" : "false",
          "yarn.nodemanager.log.retain-second" : "604800",
          "yarn.resourcemanager.connect.max-wait.ms" : "900000",
          "yarn.resourcemanager.proxyusers.*.groups" : "",
          "yarn.resourcemanager.zk-num-retries" : "1000",
          "yarn.scheduler.minimum-allocation-vcores" : "1",
          "yarn.resourcemanager.scheduler.class" : "org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler",
          "yarn.resourcemanager.system-metrics-publisher.enabled" : "true",
          "yarn.timeline-service.client.max-retries" : "30",
          "yarn.timeline-service.client.retry-interval-ms" : "1000",
          "yarn.nodemanager.webapp.spnego-keytab-file" : "/etc/security/keytabs/spnego.service.keytab",
          "yarn.nodemanager.webapp.spnego-principal" : "HTTP/_HOST@BAIDU.COM",
          "yarn.timeline-service.http-authentication.kerberos.name.rules" : "",
          "yarn.timeline-service.store-class" : "org.apache.hadoop.yarn.server.timeline.LeveldbTimelineStore",
          "yarn.timeline-service.bind-host" : "0.0.0.0",
          "yarn.timeline-service.generic-application-history.store-class" : "org.apache.hadoop.yarn.server.applicationhistoryservice.NullApplicationHistoryStore",
          "yarn.resourcemanager.fs.state-store.uri" : "/tmp/yarn/system/rmstore",
          "yarn.nodemanager.linux-container-executor.cgroups.hierarchy" : "hadoop-yarn",
          "yarn.timeline-service.http-authentication.proxyusers.*.hosts" : "",
          "yarn.resourcemanager.recovery.enabled" : "true",
          "yarn.resourcemanager.scheduler.address" : "%HOSTGROUP::host_group_2%:8030",
          "yarn.timeline-service.leveldb-timeline-store.start-time-write-cache-size" : "10000",
          "yarn.timeline-service.ttl-ms" : "2678400000",
          "yarn.nodemanager.health-checker.script.timeout-ms" : "60000",
          "yarn.timeline-service.http-authentication.proxyusers.*.users" : "",
          "yarn.log.server.url" : "http://%HOSTGROUP::host_group_2%:8122/jobhistory/logs",
          "yarn.timeline-service.entity-group-fs-store.group-id-plugin-classes" : "",
          "yarn.resourcemanager.address" : "%HOSTGROUP::host_group_2%:8050",
          "yarn.timeline-service.recovery.enabled" : "true",
          "yarn.nodemanager.recovery.dir" : "/mnt/bmr/log/hadoop-yarn/nodemanager/recovery-state",
          "yarn.resourcemanager.scheduler.monitor.enable" : "false",
          "hadoop.registry.rm.enabled" : "false",
          "yarn.resourcemanager.bind-host" : "0.0.0.0",
          "yarn.resourcemanager.keytab" : "/etc/security/keytabs/rm.service.keytab",
          "yarn.nodemanager.log-aggregation.num-log-files-per-app" : "30",
          "yarn.timeline-service.http-authentication.cookie.path" : "",
          "yarn.nodemanager.admin-env" : "MALLOC_ARENA_MAX=$MALLOC_ARENA_MAX",
          "yarn.nodemanager.linux-container-executor.cgroups.mount-path" : "",
          "yarn.resourcemanager.system-metrics-publisher.dispatcher.pool-size" : "10",
          "yarn.nodemanager.principal" : "nm/_HOST@BAIDU.COM",
          "yarn.resourcemanager.proxy-user-privileges.enabled" : "true",
          "yarn.acl.enable" : "true",
          "yarn.resourcemanager.ha.enabled" : "false",
          "yarn.resourcemanager.proxyusers.*.hosts" : "",
          "yarn.client.nodemanager-connect.retry-interval-ms" : "10000",
          "yarn.timeline-service.version" : "1.5",
          "yarn.nodemanager.linux-container-executor.resources-handler.class" : "org.apache.hadoop.yarn.server.nodemanager.util.DefaultLCEResourcesHandler",
          "yarn.timeline-service.leveldb-timeline-store.read-cache-size" : "104857600",
          "yarn.nodemanager.local-dirs" : "/mnt/hadoop/yarn/local",
          "yarn.timeline-service.leveldb-timeline-store.path" : "/mnt/hadoop/yarn/timeline",
          "yarn.nodemanager.recovery.enabled" : "false",
          "yarn.resourcemanager.zk-timeout-ms" : "10000",
          "yarn.resourcemanager.am.max-attempts" : "5",
          "yarn.resourcemanager.max-completed-applications" : "1000",
          "yarn.resourcemanager.state-store.max-completed-applications" : "${yarn.resourcemanager.max-completed-applications}",
          "yarn.nodemanager.linux-container-executor.cgroups.mount" : "false",
          "yarn.node-labels.fs-store.root-dir" : "/system/yarn/node-labels",
          "yarn.node-labels.fs-store.retry-policy-spec" : "2000, 500",
          "yarn.timeline-service.http-authentication.proxyusers.*.groups" : "",
          "yarn.nodemanager.aux-services.mapreduce_shuffle.class" : "org.apache.hadoop.mapred.ShuffleHandler",
          "yarn.log-aggregation-enable" : "true",
          "yarn.resourcemanager.work-preserving-recovery.enabled" : "false",
          "yarn.timeline-service.principal" : "yarn/_HOST@BAIDU.COM",
          "yarn.resourcemanager.store.class" : "org.apache.hadoop.yarn.server.resourcemanager.recovery.FileSystemRMStateStore",
          "yarn.timeline-service.http-authentication.signature.secret.file" : "",
          "yarn.timeline-service.leveldb-state-store.path" : "/hadoop/yarn/timeline",
          "yarn.timeline-service.entity-group-fs-store.done-dir" : "/ats/done/",
          "yarn.nodemanager.disk-health-checker.max-disk-utilization-per-disk-percentage" : "90",
          "hadoop.registry.zk.quorum" : "%HOSTGROUP::host_group_2%:2181",
          "yarn.nodemanager.log-aggregation.roll-monitoring-interval-seconds" : "-1",
          "yarn.nodemanager.container-executor.class" : "org.apache.hadoop.yarn.server.nodemanager.LinuxContainerExecutor",
          "yarn.resourcemanager.nodes.exclude-path" : "/etc/hadoop/conf/yarn.exclude",
          "yarn.timeline-service.state-store-class" : "org.apache.hadoop.yarn.server.timeline.recovery.LeveldbTimelineStateStore",
          "yarn.nodemanager.bind-host" : "0.0.0.0",
          "yarn.resourcemanager.hostname" : "%HOSTGROUP::host_group_2%",
          "yarn.resourcemanager.connect.retry-interval.ms" : "30000",
          "yarn.timeline-service.webapp.address" : "%HOSTGROUP::host_group_2%:8188",
          "yarn.resourcemanager.principal" : "rm/_HOST@BAIDU.COM",
          "yarn.scheduler.minimum-allocation-mb" : "1024",
          "yarn.timeline-service.entity-group-fs-store.summary-store" : "org.apache.hadoop.yarn.server.timeline.RollingLevelDBTimelineStore",
          "yarn.nodemanager.health-checker.interval-ms" : "135000",
          "yarn.nodemanager.disk-health-checker.min-free-space-per-disk-mb" : "1000",
          "yarn.resourcemanager.zk-retry-interval-ms" : "1000",
          "yarn.timeline-service.keytab" : "/etc/security/keytabs/yarn.service.keytab",
          "yarn.nodemanager.remote-app-log-dir" : "/app-logs",
          "yarn.scheduler.maximum-allocation-mb" : "65536",
          "yarn.nodemanager.vmem-check-enabled" : "false",
          "yarn.timeline-service.entity-group-fs-store.scan-interval-seconds" : "60",
          "yarn.resourcemanager.webapp.https.address" : "%HOSTGROUP::host_group_2%:8090",
          "yarn.timeline-service.webapp.https.address" : "%HOSTGROUP::host_group_2%:8190",
          "yarn.nodemanager.resource.percentage-physical-cpu-limit" : "100",
          "yarn.timeline-service.http-authentication.signer.secret.provider" : "",
          "yarn.nodemanager.vmem-pmem-ratio" : "2.1",
          "yarn.nodemanager.log-aggregation.compression-type" : "gz",
          "yarn.resourcemanager.work-preserving-recovery.scheduling-wait-ms" : "10000",
          "yarn.nodemanager.log-dirs" : "/mnt/hadoop/yarn/log",
          "yarn.timeline-service.http-authentication.cookie.domain" : ""
        }
      }
    },
    {
      "ams-hbase-log4j" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n\n# Define some default values that can be overridden by system properties\nhbase.root.logger=INFO,console\nhbase.security.logger=INFO,console\nhbase.log.dir=.\nhbase.log.file=hbase.log\n\n# Define the root logger to the system property \"hbase.root.logger\".\nlog4j.rootLogger=${hbase.root.logger}\n\n# Logging Threshold\nlog4j.threshold=ALL\n\n#\n# Daily Rolling File Appender\n#\nlog4j.appender.DRFA=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.DRFA.File=${hbase.log.dir}/${hbase.log.file}\n\n# Rollver at midnight\nlog4j.appender.DRFA.DatePattern=.yyyy-MM-dd\n\n# 30-day backup\n#log4j.appender.DRFA.MaxBackupIndex=30\nlog4j.appender.DRFA.layout=org.apache.log4j.PatternLayout\n\n# Pattern format: Date LogLevel LoggerName LogMessage\nlog4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\n\n# Rolling File Appender properties\nhbase.log.maxfilesize=256MB\nhbase.log.maxbackupindex=20\n\n# Rolling File Appender\nlog4j.appender.RFA=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFA.File=${hbase.log.dir}/${hbase.log.file}\n\nlog4j.appender.RFA.MaxFileSize=${hbase.log.maxfilesize}\nlog4j.appender.RFA.MaxBackupIndex=${hbase.log.maxbackupindex}\n\nlog4j.appender.RFA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\n\n#\n# Security audit appender\n#\nhbase.security.log.file=SecurityAuth.audit\nhbase.security.log.maxfilesize=256MB\nhbase.security.log.maxbackupindex=20\nlog4j.appender.RFAS=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFAS.File=${hbase.log.dir}/${hbase.security.log.file}\nlog4j.appender.RFAS.MaxFileSize=${hbase.security.log.maxfilesize}\nlog4j.appender.RFAS.MaxBackupIndex=${hbase.security.log.maxbackupindex}\nlog4j.appender.RFAS.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFAS.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\nlog4j.category.SecurityLogger=${hbase.security.logger}\nlog4j.additivity.SecurityLogger=false\n#log4j.logger.SecurityLogger.org.apache.hadoop.hbase.security.access.AccessController=TRACE\n\n#\n# Null Appender\n#\nlog4j.appender.NullAppender=org.apache.log4j.varia.NullAppender\n\n#\n# console\n# Add \"console\" to rootlogger above if you want to use this\n#\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.target=System.err\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\n\n# Custom Logging levels\n\nlog4j.logger.org.apache.zookeeper=INFO\n#log4j.logger.org.apache.hadoop.fs.FSNamesystem=DEBUG\nlog4j.logger.org.apache.hadoop.hbase=INFO\n# Make these two classes INFO-level. Make them DEBUG to see more zk debug.\nlog4j.logger.org.apache.hadoop.hbase.zookeeper.ZKUtil=INFO\nlog4j.logger.org.apache.hadoop.hbase.zookeeper.ZooKeeperWatcher=INFO\n#log4j.logger.org.apache.hadoop.dfs=DEBUG\n# Set this class to log INFO only otherwise its OTT\n# Enable this to get detailed connection error/retry logging.\n# log4j.logger.org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation=TRACE\n\n\n# Uncomment this line to enable tracing on _every_ RPC call (this can be a lot of output)\n#log4j.logger.org.apache.hadoop.ipc.HBaseServer.trace=DEBUG\n\n# Uncomment the below if you want to remove logging of client region caching'\n# and scan of .META. messages\n# log4j.logger.org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation=INFO\n# log4j.logger.org.apache.hadoop.hbase.client.MetaScanner=INFO"
        }
      }
    },
    {
      "kerberos-env" : {
        "properties_attributes" : { },
        "properties" : {
          "password_min_uppercase_letters" : "1",
          "password_min_whitespace" : "0",
          "password_min_punctuation" : "1",
          "password_min_digits" : "1",
          "encryption_types" : "aes des3-cbc-sha1 rc4 des-cbc-md5",
          "kdc_create_attributes" : "",
          "password_min_lowercase_letters" : "1",
          "password_length" : "20",
          "case_insensitive_username_rules" : "false",
          "manage_identities" : "true",
          "service_check_principal_name" : "${cluster_name}-${short_date}",
          "ad_create_attributes_template" : "\n{\n  \"objectClass\": [\"top\", \"person\", \"organizationalPerson\", \"user\"],\n  \"cn\": \"$principal_name\",\n  #if( $is_service )\n  \"servicePrincipalName\": \"$principal_name\",\n  #end\n  \"userPrincipalName\": \"$normalized_principal\",\n  \"unicodePwd\": \"$password\",\n  \"accountExpires\": \"0\",\n  \"userAccountControl\": \"66048\"\n}",
          "install_packages" : "true",
          "ldap_url" : "",
          "executable_search_paths" : "/usr/bin, /usr/kerberos/bin, /usr/sbin, /usr/lib/mit/bin, /usr/lib/mit/sbin"
        }
      }
    },
    {
      "ssl-client" : {
        "properties_attributes" : { },
        "properties" : {
          "ssl.client.truststore.reload.interval" : "10000",
          "ssl.client.keystore.location" : "/etc/security/clientKeys/keystore.jks",
          "ssl.client.truststore.location" : "/etc/security/clientKeys/all.jks",
          "ssl.client.truststore.type" : "jks",
          "ssl.client.keystore.type" : "jks"
        }
      }
    },
    {
      "ams-hbase-policy" : {
        "properties_attributes" : { },
        "properties" : {
          "security.masterregion.protocol.acl" : "*",
          "security.admin.protocol.acl" : "*",
          "security.client.protocol.acl" : "*"
        }
      }
    },
    {
      "ranger-hdfs-security" : {
        "properties_attributes" : { },
        "properties" : {
          "xasecure.add-hadoop-authorization" : "true",
          "ranger.plugin.hdfs.policy.rest.ssl.config.file" : "/etc/hadoop/conf/ranger-policymgr-ssl.xml",
          "ranger.plugin.hdfs.policy.source.impl" : "org.apache.ranger.admin.client.RangerAdminRESTClient",
          "ranger.plugin.hdfs.policy.cache.dir" : "/etc/ranger/{{repo_name}}/policycache",
          "ranger.plugin.hdfs.policy.pollIntervalMs" : "30000",
          "ranger.plugin.hdfs.service.name" : "{{repo_name}}",
          "ranger.plugin.hdfs.policy.rest.url" : "{{policymgr_mgr_url}}"
        }
      }
    },
    {
      "tez-env" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "\n# Tez specific configuration\nexport TEZ_CONF_DIR={{config_dir}}\n\n# Set HADOOP_HOME to point to a specific hadoop install directory\nexport HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\n\n# The java implementation to use.\nexport JAVA_HOME={{java64_home}}\n    ",
          "tez_user" : "tez"
        }
      }
    },
    {
      "ams-hbase-security-site" : {
        "properties_attributes" : { },
        "properties" : {
          "hbase.coprocessor.master.classes" : "org.apache.hadoop.hbase.security.access.AccessController",
          "hbase.myclient.keytab" : "/etc/security/keytabs/ams.collector.keytab",
          "hadoop.security.authentication" : "kerberos",
          "hbase.myclient.principal" : "amshbase/_HOST@BAIDU.COM",
          "ams.zookeeper.keytab" : "/etc/security/keytabs/ams-zk.service.keytab",
          "hbase.zookeeper.property.jaasLoginRenew" : "3600000",
          "hbase.regionserver.keytab.file" : "/etc/security/keytabs/ams-hbase.regionserver.keytab",
          "hbase.zookeeper.property.authProvider.1" : "org.apache.zookeeper.server.auth.SASLAuthenticationProvider",
          "hbase.regionserver.kerberos.principal" : "amshbase/_HOST@BAIDU.COM",
          "hbase.zookeeper.property.kerberos.removeHostFromPrincipal" : "true",
          "hbase.coprocessor.region.classes" : "org.apache.hadoop.hbase.security.token.TokenProvider,org.apache.hadoop.hbase.security.access.AccessController",
          "hbase.security.authentication" : "kerberos",
          "hbase.master.keytab.file" : "/etc/security/keytabs/ams-hbase.master.keytab",
          "hbase.security.authorization" : "true",
          "hbase.zookeeper.property.kerberos.removeRealmFromPrincipal" : "true",
          "hbase.master.kerberos.principal" : "amshbase/_HOST@BAIDU.COM",
          "ams.zookeeper.principal" : "amszk/_HOST@BAIDU.COM"
        }
      }
    },
    {
      "ranger-yarn-plugin-properties" : {
        "properties_attributes" : { },
        "properties" : {
          "ranger-yarn-plugin-enabled" : "No",
          "REPOSITORY_CONFIG_USERNAME" : "yarn",
          "common.name.for.certificate" : "",
          "hadoop.rpc.protection" : "",
          "policy_user" : "ambari-qa"
        }
      }
    },
    {
      "hadoop-env" : {
        "properties_attributes" : { },
        "properties" : {
          "hadoop_heapsize" : "1024",
          "proxyuser_group" : "users",
          "hdfs_user_keytab" : "/etc/security/keytabs/hdfs.headless.keytab",
          "hadoop_root_logger" : "INFO,RFA",
          "dtnode_heapsize" : "1024m",
          "hdfs_user" : "hdfs",
          "hadoop_pid_dir_prefix" : "/var/run/hadoop",
          "content" : "\n# Set Hadoop-specific environment variables here.\n\n# The only required environment variable is JAVA_HOME.  All others are\n# optional.  When running a distributed configuration it is best to\n# set JAVA_HOME in this file, so that it is correctly defined on\n# remote nodes.\n\n# The java implementation to use.  Required.\nexport JAVA_HOME={{java_home}}\nexport HADOOP_HOME_WARN_SUPPRESS=1\n\n# Hadoop home directory\nexport HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\n\n# Hadoop Configuration Directory\n\n{# this is different for HDP1 #}\n# Path to jsvc required by secure HDP 2.0 datanode\nexport JSVC_HOME={{jsvc_path}}\n\n\n# The maximum amount of heap to use, in MB. Default is 1000.\nexport HADOOP_HEAPSIZE=\"{{hadoop_heapsize}}\"\n\nexport HADOOP_NAMENODE_INIT_HEAPSIZE=\"-Xms{{namenode_heapsize}}\"\n\n# Extra Java runtime options.  Empty by default.\nexport HADOOP_OPTS=\"-Djava.net.preferIPv4Stack=true ${HADOOP_OPTS}\"\n\n# Command specific options appended to HADOOP_OPTS when specified\nexport HADOOP_NAMENODE_OPTS=\"-server -XX:ParallelGCThreads=8 -XX:+UseConcMarkSweepGC -XX:ErrorFile={{hdfs_log_dir_prefix}}/$USER/hs_err_pid%p.log -XX:NewSize={{namenode_opt_newsize}} -XX:MaxNewSize={{namenode_opt_maxnewsize}} -Xloggc:{{hdfs_log_dir_prefix}}/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -Xms{{namenode_heapsize}} -Xmx{{namenode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dhdfs.audit.logger=INFO,DRFAAUDIT ${HADOOP_NAMENODE_OPTS}\"\nHADOOP_JOBTRACKER_OPTS=\"-server -XX:ParallelGCThreads=8 -XX:+UseConcMarkSweepGC -XX:ErrorFile={{hdfs_log_dir_prefix}}/$USER/hs_err_pid%p.log -XX:NewSize={{jtnode_opt_newsize}} -XX:MaxNewSize={{jtnode_opt_maxnewsize}} -Xloggc:{{hdfs_log_dir_prefix}}/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -Xmx{{jtnode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dmapred.audit.logger=INFO,MRAUDIT -Dhadoop.mapreduce.jobsummary.logger=INFO,JSA ${HADOOP_JOBTRACKER_OPTS}\"\n\nHADOOP_TASKTRACKER_OPTS=\"-server -Xmx{{ttnode_heapsize}} -Dhadoop.security.logger=ERROR,console -Dmapred.audit.logger=ERROR,console ${HADOOP_TASKTRACKER_OPTS}\"\nexport HADOOP_DATANODE_OPTS=\"-Xmx{{dtnode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dhdfs.audit.logger=INFO,DRFAAUDIT ${HADOOP_DATANODE_OPTS}\"\nHADOOP_BALANCER_OPTS=\"-server -Xmx{{hadoop_heapsize}}m ${HADOOP_BALANCER_OPTS}\"\n\nexport HADOOP_SECONDARYNAMENODE_OPTS=$HADOOP_NAMENODE_OPTS\n\n# The following applies to multiple commands (fs, dfs, fsck, distcp etc)\nexport HADOOP_CLIENT_OPTS=\"-Xmx${HADOOP_HEAPSIZE}m -XX:MaxPermSize=512m $HADOOP_CLIENT_OPTS\"\n\n# On secure datanodes, user to run the datanode as after dropping privileges\nexport HADOOP_SECURE_DN_USER=${HADOOP_SECURE_DN_USER:-{{hadoop_secure_dn_user}}}\n\n# Extra ssh options.  Empty by default.\nexport HADOOP_SSH_OPTS=\"-o ConnectTimeout=5 -o SendEnv=HADOOP_CONF_DIR\"\n\n# Where log files are stored.  $HADOOP_HOME/logs by default.\nexport HADOOP_LOG_DIR={{hdfs_log_dir_prefix}}/$USER\n\n# History server logs\nexport HADOOP_MAPRED_LOG_DIR={{mapred_log_dir_prefix}}/$USER\n\n# Where log files are stored in the secure data environment.\nexport HADOOP_SECURE_DN_LOG_DIR={{hdfs_log_dir_prefix}}/$HADOOP_SECURE_DN_USER\n\n# File naming remote slave hosts.  $HADOOP_HOME/conf/slaves by default.\n# export HADOOP_SLAVES=${HADOOP_HOME}/conf/slaves\n\n# host:path where hadoop code should be rsync'd from.  Unset by default.\n# export HADOOP_MASTER=master:/home/$USER/src/hadoop\n\n# Seconds to sleep between slave commands.  Unset by default.  This\n# can be useful in large clusters, where, e.g., slave rsyncs can\n# otherwise arrive faster than the master can service them.\n# export HADOOP_SLAVE_SLEEP=0.1\n\n# The directory where pid files are stored. /tmp by default.\nexport HADOOP_PID_DIR={{hadoop_pid_dir_prefix}}/$USER\nexport HADOOP_SECURE_DN_PID_DIR={{hadoop_pid_dir_prefix}}/$HADOOP_SECURE_DN_USER\n\n# History server pid\nexport HADOOP_MAPRED_PID_DIR={{mapred_pid_dir_prefix}}/$USER\n\nYARN_RESOURCEMANAGER_OPTS=\"-Dyarn.server.resourcemanager.appsummary.logger=INFO,RMSUMMARY\"\n\n# A string representing this instance of hadoop. $USER by default.\nexport HADOOP_IDENT_STRING=$USER\n\n# The scheduling priority for daemon processes.  See 'man nice'.\n\n# export HADOOP_NICENESS=10\n\n# Use libraries from standard classpath\nJAVA_JDBC_LIBS=\"\"\n#Add libraries required by mysql connector\nfor jarFile in `ls /usr/share/java/*mysql* 2>/dev/null`\ndo\n  JAVA_JDBC_LIBS=${JAVA_JDBC_LIBS}:$jarFile\ndone\n# Add libraries required by oracle connector\nfor jarFile in `ls /usr/share/java/*ojdbc* 2>/dev/null`\ndo\n  JAVA_JDBC_LIBS=${JAVA_JDBC_LIBS}:$jarFile\ndone\n# Add libraries required by nodemanager\nMAPREDUCE_LIBS={{mapreduce_libs_path}}\nexport HADOOP_CLASSPATH=${HADOOP_CLASSPATH}${JAVA_JDBC_LIBS}:${MAPREDUCE_LIBS}:/opt/bmr/hadoop/lib/*\n\n# added to the HADOOP_CLASSPATH\nif [ -d \"/opt/bmr/tez\" ]; then\n  if [ -d \"/etc/tez/conf/\" ]; then\n    # When using versioned RPMs, the tez-client will be a symlink to the current folder of tez in HDP.\n    export HADOOP_CLASSPATH=${HADOOP_CLASSPATH}:/opt/bmr/tez/*:/opt/bmr/tez/lib/*:/etc/tez/conf/\n  fi\nfi\n\nif [ -d \"/opt/bmr/hbase\" ]; then\n  if [ -d \"/etc/hbase/conf/\" ]; then\n    # When using versioned RPMs, the hbase-client will be a symlink to the current folder of hbase in HDP.\n    export HADOOP_CLASSPATH=${HADOOP_CLASSPATH}:/opt/bmr/hbase/*:/opt/bmr/hbase/lib/*:/etc/hbase/conf\n  fi\nfi\n\n# Setting path to hdfs command line\nexport HADOOP_LIBEXEC_DIR={{hadoop_libexec_dir}}\n\n# Mostly required for hadoop 2.0\nexport JAVA_LIBRARY_PATH=${JAVA_LIBRARY_PATH}:/opt/bmr/hadoop/lib/native/:/opt/bmr/hadoop/lib/native/Linux-amd64-64/\n\nexport HADOOP_OPTS=\"$HADOOP_OPTS\"\n    ",
          "hdfs_log_dir_prefix" : "/mnt/bmr/log/hadoop",
          "namenode_opt_newsize" : "200m",
          "namenode_heapsize" : "1024m",
          "namenode_opt_maxpermsize" : "256m",
          "nfsgateway_heapsize" : "1024",
          "dfs.datanode.data.dir.mount.file" : "/etc/hadoop/conf/dfs_data_dir_mount.hist",
          "hdfs_user_nofile_limit" : "128000",
          "hdfs_principal_name" : "hdfs-6b1dd6eb-c598-41af-57ec-66dfd95f7ae1@BAIDU.COM",
          "keyserver_host" : "",
          "keyserver_port" : "",
          "hdfs_user_nproc_limit" : "65536",
          "namenode_opt_maxnewsize" : "256m",
          "namenode_opt_permsize" : "128m"
        }
      }
    },
    {
      "yarn-env" : {
        "properties_attributes" : { },
        "properties" : {
          "yarn_cgroups_enabled" : "false",
          "yarn_user_nproc_limit" : "65536",
          "yarn_log_dir_prefix" : "/mnt/bmr/log/hadoop-yarn",
          "apptimelineserver_heapsize" : "1024",
          "yarn_user_nofile_limit" : "32768",
          "content" : "\nexport HADOOP_YARN_HOME={{hadoop_yarn_home}}\nexport YARN_LOG_DIR={{yarn_log_dir_prefix}}/$USER\nexport YARN_PID_DIR={{yarn_pid_dir_prefix}}/$USER\nexport HADOOP_LIBEXEC_DIR={{hadoop_libexec_dir}}\nexport JAVA_HOME={{java64_home}}\n\n# User for YARN daemons\nexport HADOOP_YARN_USER=${HADOOP_YARN_USER:-yarn}\n\n# resolve links - $0 may be a softlink\nexport YARN_CONF_DIR=\"${YARN_CONF_DIR:-$HADOOP_YARN_HOME/conf}\"\n\n# some Java parameters\n# export JAVA_HOME=/home/y/libexec/jdk1.6.0/\nif [ \"$JAVA_HOME\" != \"\" ]; then\n  #echo \"run java in $JAVA_HOME\"\n  JAVA_HOME=$JAVA_HOME\nfi\n\nif [ \"$JAVA_HOME\" = \"\" ]; then\n  echo \"Error: JAVA_HOME is not set.\"\n  exit 1\nfi\n\nJAVA=$JAVA_HOME/bin/java\nJAVA_HEAP_MAX=-Xmx1000m\n\n# For setting YARN specific HEAP sizes please use this\n# Parameter and set appropriately\nYARN_HEAPSIZE={{yarn_heapsize}}\n\n# check envvars which might override default args\nif [ \"$YARN_HEAPSIZE\" != \"\" ]; then\n  JAVA_HEAP_MAX=\"-Xmx\"\"$YARN_HEAPSIZE\"\"m\"\nfi\n\n# Resource Manager specific parameters\n\n# Specify the max Heapsize for the ResourceManager using a numerical value\n# in the scale of MB. For example, to specify an jvm option of -Xmx1000m, set\n# the value to 1000.\n# This value will be overridden by an Xmx setting specified in either YARN_OPTS\n# and/or YARN_RESOURCEMANAGER_OPTS.\n# If not specified, the default value will be picked from either YARN_HEAPMAX\n# or JAVA_HEAP_MAX with YARN_HEAPMAX as the preferred option of the two.\nexport YARN_RESOURCEMANAGER_HEAPSIZE={{resourcemanager_heapsize}}\n\n# Specify the JVM options to be used when starting the ResourceManager.\n# These options will be appended to the options specified as YARN_OPTS\n# and therefore may override any similar flags set in YARN_OPTS\n#export YARN_RESOURCEMANAGER_OPTS=\n\n# Node Manager specific parameters\n\n# Specify the max Heapsize for the NodeManager using a numerical value\n# in the scale of MB. For example, to specify an jvm option of -Xmx1000m, set\n# the value to 1000.\n# This value will be overridden by an Xmx setting specified in either YARN_OPTS\n# and/or YARN_NODEMANAGER_OPTS.\n# If not specified, the default value will be picked from either YARN_HEAPMAX\n# or JAVA_HEAP_MAX with YARN_HEAPMAX as the preferred option of the two.\nexport YARN_NODEMANAGER_HEAPSIZE={{nodemanager_heapsize}}\n\n# Specify the max Heapsize for the HistoryManager using a numerical value\n# in the scale of MB. For example, to specify an jvm option of -Xmx1000m, set\n# the value to 1024.\n# This value will be overridden by an Xmx setting specified in either YARN_OPTS\n# and/or YARN_HISTORYSERVER_OPTS.\n# If not specified, the default value will be picked from either YARN_HEAPMAX\n# or JAVA_HEAP_MAX with YARN_HEAPMAX as the preferred option of the two.\nexport YARN_HISTORYSERVER_HEAPSIZE={{apptimelineserver_heapsize}}\n\n# Specify the JVM options to be used when starting the NodeManager.\n# These options will be appended to the options specified as YARN_OPTS\n# and therefore may override any similar flags set in YARN_OPTS\n#export YARN_NODEMANAGER_OPTS=\n\n# so that filenames w/ spaces are handled correctly in loops below\nIFS=\n\n\n# default log directory and file\nif [ \"$YARN_LOG_DIR\" = \"\" ]; then\n  YARN_LOG_DIR=\"$HADOOP_YARN_HOME/logs\"\nfi\nif [ \"$YARN_LOGFILE\" = \"\" ]; then\n  YARN_LOGFILE='yarn.log'\nfi\n\n# default policy file for service-level authorization\nif [ \"$YARN_POLICYFILE\" = \"\" ]; then\n  YARN_POLICYFILE=\"hadoop-policy.xml\"\nfi\n\n# restore ordinary behaviour\nunset IFS\n\n\nYARN_OPTS=\"$YARN_OPTS -Dhadoop.log.dir=$YARN_LOG_DIR\"\nYARN_OPTS=\"$YARN_OPTS -Dyarn.log.dir=$YARN_LOG_DIR\"\nYARN_OPTS=\"$YARN_OPTS -Dhadoop.log.file=$YARN_LOGFILE\"\nYARN_OPTS=\"$YARN_OPTS -Dyarn.log.file=$YARN_LOGFILE\"\nYARN_OPTS=\"$YARN_OPTS -Dyarn.home.dir=$YARN_COMMON_HOME\"\nYARN_OPTS=\"$YARN_OPTS -Dyarn.id.str=$YARN_IDENT_STRING\"\nYARN_OPTS=\"$YARN_OPTS -Dhadoop.root.logger=${YARN_ROOT_LOGGER:-INFO,console}\"\nYARN_OPTS=\"$YARN_OPTS -Dyarn.root.logger=${YARN_ROOT_LOGGER:-INFO,console}\"\nif [ \"x$JAVA_LIBRARY_PATH\" != \"x\" ]; then\n  YARN_OPTS=\"$YARN_OPTS -Djava.library.path=$JAVA_LIBRARY_PATH\"\nfi\nYARN_OPTS=\"$YARN_OPTS -Dyarn.policy.file=$YARN_POLICYFILE\"\n    ",
          "is_supported_yarn_ranger" : "true",
          "resourcemanager_heapsize" : "3072",
          "yarn_pid_dir_prefix" : "/var/run/hadoop-yarn",
          "yarn_user" : "yarn",
          "min_user_id" : "1000",
          "yarn_heapsize" : "1024",
          "nodemanager_heapsize" : "1024",
          "hadoop_yarn_home" : "/usr/hdp/current/hadoop-yarn-client"
        }
      }
    },
    {
      "ranger-hdfs-audit" : {
        "properties_attributes" : { },
        "properties" : {
          "xasecure.audit.credential.provider.file" : "jceks://file{{credential_file}}",
          "xasecure.audit.destination.hdfs.batch.filespool.dir" : "/var/log/hadoop/hdfs/audit/hdfs/spool",
          "xasecure.audit.is.enabled" : "true",
          "xasecure.audit.destination.hdfs" : "true",
          "xasecure.audit.destination.solr.batch.filespool.dir" : "/var/log/hadoop/hdfs/audit/solr/spool",
          "xasecure.audit.destination.hdfs.dir" : "hdfs://NAMENODE_HOSTNAME:8020/ranger/audit",
          "xasecure.audit.destination.db.jdbc.url" : "{{audit_jdbc_url}}",
          "xasecure.audit.destination.db.jdbc.driver" : "{{jdbc_driver}}",
          "xasecure.audit.destination.db" : "false",
          "xasecure.audit.destination.solr" : "false",
          "xasecure.audit.destination.db.user" : "{{xa_audit_db_user}}",
          "xasecure.audit.destination.solr.zookeepers" : "NONE",
          "xasecure.audit.provider.summary.enabled" : "false",
          "xasecure.audit.destination.db.batch.filespool.dir" : "/var/log/hadoop/hdfs/audit/db/spool",
          "xasecure.audit.destination.solr.urls" : ""
        }
      }
    },
    {
      "ranger-hdfs-plugin-properties" : {
        "properties_attributes" : { },
        "properties" : {
          "REPOSITORY_CONFIG_USERNAME" : "hadoop",
          "ranger-hdfs-plugin-enabled" : "No",
          "common.name.for.certificate" : "",
          "hadoop.rpc.protection" : "",
          "policy_user" : "ambari-qa"
        }
      }
    },
    {
      "oozie-site" : {
        "properties_attributes" : { },
        "properties" : {
          "oozie.base.url" : "http://%HOSTGROUP::host_group_2%:11000/oozie",
          "oozie.service.URIHandlerService.uri.handlers" : "org.apache.oozie.dependency.FSURIHandler,org.apache.oozie.dependency.HCatURIHandler",
          "oozie.service.HadoopAccessorService.keytab.file" : "/etc/security/keytabs/oozie.service.keytab",
          "oozie.service.HadoopAccessorService.kerberos.enabled" : "true",
          "oozie.authentication.simple.anonymous.allowed" : "true",
          "oozie.credentials.credentialclasses" : "hcat=org.apache.oozie.action.hadoop.HCatCredentials,hive2=org.apache.oozie.action.hadoop.Hive2Credentials",
          "oozie.service.JPAService.pool.max.active.conn" : "10",
          "oozie.service.PurgeService.older.than" : "30",
          "oozie.system.id" : "oozie-${user.name}",
          "oozie.systemmode" : "NORMAL",
          "oozie.service.JPAService.jdbc.driver" : "org.apache.derby.jdbc.EmbeddedDriver",
          "oozie.service.ProxyUserService.proxyuser.hue.groups" : "*",
          "oozie.service.AuthorizationService.security.enabled" : "false",
          "oozie.service.ActionService.executor.ext.classes" : "\n      org.apache.oozie.action.email.EmailActionExecutor,\n      org.apache.oozie.action.hadoop.HiveActionExecutor,\n      org.apache.oozie.action.hadoop.ShellActionExecutor,\n      org.apache.oozie.action.hadoop.SqoopActionExecutor,\n      org.apache.oozie.action.hadoop.DistcpActionExecutor\n",
          "oozie.service.CallableQueueService.threads" : "10",
          "oozie.service.coord.normal.default.timeout" : "120",
          "oozie.authentication.kerberos.keytab" : "/etc/security/keytabs/spnego.service.keytab",
          "oozie.service.coord.check.maximum.frequency" : "false",
          "oozie.service.WorkflowAppService.system.libpath" : "/user/${user.name}/share/lib",
          "oozie.service.PurgeService.purge.interval" : "3600",
          "oozie.service.AuthorizationService.authorization.enabled" : "true",
          "oozie.authentication.kerberos.name.rules" : "RULE:[1:$1@$0](ambari-qa-6b1dd6eb-c598-41af-57ec-66dfd95f7ae1@BAIDU.COM)s/.*/ambari-qa/\nRULE:[1:$1@$0](hdfs-6b1dd6eb-c598-41af-57ec-66dfd95f7ae1@BAIDU.COM)s/.*/hdfs/\nRULE:[1:$1@$0](.*@BAIDU.COM)s/@.*//\nRULE:[1:$1@$0](.*@.*TODO-KERBEROS-DOMAIN)s/@.*//\nRULE:[1:$1@$0](.*@BAIDU.COM)s/@.*//\nRULE:[2:$1@$0]([jt]t@.*TODO-KERBEROS-DOMAIN)s/.*/TODO-MAPREDUSER/\nRULE:[2:$1@$0]([nd]n@.*TODO-KERBEROS-DOMAIN)s/.*/TODO-HDFSUSER/\nRULE:[2:$1@$0](amshbase@BAIDU.COM)s/.*/ams/\nRULE:[2:$1@$0](amszk@BAIDU.COM)s/.*/ams/\nRULE:[2:$1@$0](dn@BAIDU.COM)s/.*/hdfs/\nRULE:[2:$1@$0](hm@.*TODO-KERBEROS-DOMAIN)s/.*/TODO-HBASE-USER/\nRULE:[2:$1@$0](jhs@BAIDU.COM)s/.*/mapred/\nRULE:[2:$1@$0](nm@BAIDU.COM)s/.*/yarn/\nRULE:[2:$1@$0](nn@BAIDU.COM)s/.*/hdfs/\nRULE:[2:$1@$0](oozie@BAIDU.COM)s/.*/oozie/\nRULE:[2:$1@$0](rm@BAIDU.COM)s/.*/yarn/\nRULE:[2:$1@$0](rs@.*TODO-KERBEROS-DOMAIN)s/.*/TODO-HBASE-USER/\nRULE:[2:$1@$0](yarn@BAIDU.COM)s/.*/yarn/\nDEFAULT",
          "oozie.bmr.shell.action.timeout" : "0",
          "oozie.service.HadoopAccessorService.hadoop.configurations" : "*=/etc/hadoop/conf",
          "oozie.service.JPAService.jdbc.username" : "oozie",
          "oozie.service.coord.push.check.requeue.interval" : "30000",
          "use.system.libpath.for.mapreduce.and.pig.jobs" : "false",
          "oozie.services.ext" : "org.apache.oozie.service.JMSAccessorService,org.apache.oozie.service.PartitionDependencyManagerService,org.apache.oozie.service.HCatAccessorService\n    ",
          "oozie.action.max.output.data" : "20480",
          "oozie.service.CallableQueueService.callable.concurrency" : "3",
          "oozie.service.SchemaService.wf.ext.schemas" : "shell-action-0.1.xsd,shell-action-0.2.xsd,shell-action-0.3.xsd,email-action-0.1.xsd,email-action-0.2.xsd,hive-action-0.2.xsd,hive-action-0.3.xsd,hive-action-0.4.xsd,hive-action-0.5.xsd,sqoop-action-0.2.xsd,sqoop-action-0.3.xsd,sqoop-action-0.4.xsd,ssh-action-0.1.xsd,ssh-action-0.2.xsd,distcp-action-0.1.xsd,distcp-action-0.2.xsd,oozie-sla-0.1.xsd,oozie-sla-0.2.xsd",
          "oozie.service.JPAService.create.db.schema" : "false",
          "oozie.service.CallableQueueService.queue.size" : "1000",
          "oozie.authentication.type" : "kerberos",
          "oozie.services" : "\n      org.apache.oozie.service.SchedulerService,\n      org.apache.oozie.service.InstrumentationService,\n      org.apache.oozie.service.MemoryLocksService,\n      org.apache.oozie.service.UUIDService,\n      org.apache.oozie.service.ELService,\n      org.apache.oozie.service.AuthorizationService,\n      org.apache.oozie.service.UserGroupInformationService,\n      org.apache.oozie.service.HadoopAccessorService,\n      org.apache.oozie.service.JobsConcurrencyService,\n      org.apache.oozie.service.URIHandlerService,\n      org.apache.oozie.service.DagXLogInfoService,\n      org.apache.oozie.service.SchemaService,\n      org.apache.oozie.service.LiteWorkflowAppService,\n      org.apache.oozie.service.JPAService,\n      org.apache.oozie.service.StoreService,\n      org.apache.oozie.service.SLAStoreService,\n      org.apache.oozie.service.DBLiteWorkflowStoreService,\n      org.apache.oozie.service.CallbackService,\n      org.apache.oozie.service.ShareLibService,\n      org.apache.oozie.service.CallableQueueService,\n      org.apache.oozie.service.ActionService,\n      org.apache.oozie.service.ActionCheckerService,\n      org.apache.oozie.service.RecoveryService,\n      org.apache.oozie.service.PurgeService,\n      org.apache.oozie.service.CoordinatorEngineService,\n      org.apache.oozie.service.BundleEngineService,\n      org.apache.oozie.service.DagEngineService,\n      org.apache.oozie.service.CoordMaterializeTriggerService,\n      org.apache.oozie.service.StatusTransitService,\n      org.apache.oozie.service.PauseTransitService,\n      org.apache.oozie.service.GroupsService,\n      org.apache.oozie.service.ProxyUserService,\n      org.apache.oozie.service.XLogStreamingService,\n      org.apache.oozie.service.JvmPauseMonitorService\n    ",
          "local.realm" : "BAIDU.COM",
          "oozie.db.schema.name" : "oozie",
          "oozie.service.ProxyUserService.proxyuser.hue.hosts" : "*"
        }
      }
    },
    {
      "zookeeper-env" : {
        "properties_attributes" : { },
        "properties" : {
          "zk_pid_dir" : "/var/run/zookeeper",
          "zookeeper_principal_name" : "zookeeper/_HOST@BAIDU.COM",
          "zk_log_dir" : "/mnt/bmr/log/zookeeper",
          "zk_user" : "zookeeper",
          "zookeeper_keytab_path" : "/etc/security/keytabs/zk.service.keytab",
          "content" : "\nexport JAVA_HOME={{java64_home}}\nexport ZOOKEEPER_HOME={{zk_home}}\nexport ZOO_LOG_DIR={{zk_log_dir}}\nexport ZOOPIDFILE={{zk_pid_file}}\nexport SERVER_JVMFLAGS={{zk_server_heapsize}}\nexport JAVA=$JAVA_HOME/bin/java\nexport CLASSPATH=$CLASSPATH:/usr/share/zookeeper/*\n\n{% if security_enabled %}\nexport SERVER_JVMFLAGS=\"$SERVER_JVMFLAGS -Djava.security.auth.login.config={{zk_server_jaas_file}}\"\nexport CLIENT_JVMFLAGS=\"$CLIENT_JVMFLAGS -Djava.security.auth.login.config={{zk_client_jaas_file}}\"\n{% endif %}\n    "
        }
      }
    },
    {
      "yarn-log4j" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "\n#Relative to Yarn Log Dir Prefix\nyarn.log.dir=.\n#\n# Job Summary Appender\n#\n# Use following logger to send summary to separate file defined by\n# hadoop.mapreduce.jobsummary.log.file rolled daily:\n# hadoop.mapreduce.jobsummary.logger=INFO,JSA\n#\nhadoop.mapreduce.jobsummary.logger=${hadoop.root.logger}\nhadoop.mapreduce.jobsummary.log.file=hadoop-mapreduce.jobsummary.log\nlog4j.appender.JSA=org.apache.log4j.DailyRollingFileAppender\n# Set the ResourceManager summary log filename\nyarn.server.resourcemanager.appsummary.log.file=hadoop-mapreduce.jobsummary.log\n# Set the ResourceManager summary log level and appender\nyarn.server.resourcemanager.appsummary.logger=${hadoop.root.logger}\n#yarn.server.resourcemanager.appsummary.logger=INFO,RMSUMMARY\n\n# To enable AppSummaryLogging for the RM,\n# set yarn.server.resourcemanager.appsummary.logger to\n# LEVEL,RMSUMMARY in hadoop-env.sh\n\n# Appender for ResourceManager Application Summary Log\n# Requires the following properties to be set\n#    - hadoop.log.dir (Hadoop Log directory)\n#    - yarn.server.resourcemanager.appsummary.log.file (resource manager app summary log filename)\n#    - yarn.server.resourcemanager.appsummary.logger (resource manager app summary log level and appender)\nlog4j.appender.RMSUMMARY=org.apache.log4j.RollingFileAppender\nlog4j.appender.RMSUMMARY.File=${yarn.log.dir}/${yarn.server.resourcemanager.appsummary.log.file}\nlog4j.appender.RMSUMMARY.MaxFileSize=256MB\nlog4j.appender.RMSUMMARY.MaxBackupIndex=20\nlog4j.appender.RMSUMMARY.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RMSUMMARY.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n\nlog4j.appender.JSA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.JSA.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{2}: %m%n\nlog4j.appender.JSA.DatePattern=.yyyy-MM-dd\nlog4j.appender.JSA.layout=org.apache.log4j.PatternLayout\nlog4j.logger.org.apache.hadoop.yarn.server.resourcemanager.RMAppManager$ApplicationSummary=${yarn.server.resourcemanager.appsummary.logger}\nlog4j.additivity.org.apache.hadoop.yarn.server.resourcemanager.RMAppManager$ApplicationSummary=false\n    "
        }
      }
    },
    {
      "mapred-env" : {
        "properties_attributes" : { },
        "properties" : {
          "jobhistory_heapsize" : "900",
          "mapred_user_nofile_limit" : "32768",
          "mapred_user" : "mapred",
          "mapred_user_nproc_limit" : "65536",
          "mapred_pid_dir_prefix" : "/var/run/hadoop-mapreduce",
          "mapred_log_dir_prefix" : "/mnt/bmr/log/hadoop-mapreduce",
          "content" : "\n# export JAVA_HOME=/home/y/libexec/jdk1.6.0/\n\nexport HADOOP_JOB_HISTORYSERVER_HEAPSIZE={{jobhistory_heapsize}}\n\nexport HADOOP_MAPRED_ROOT_LOGGER=INFO,RFA\n\n#export HADOOP_JOB_HISTORYSERVER_OPTS=\n#export HADOOP_MAPRED_LOG_DIR=\"\" # Where log files are stored.  $HADOOP_MAPRED_HOME/logs by default.\n#export HADOOP_JHS_LOGGER=INFO,RFA # Hadoop JobSummary logger.\n#export HADOOP_MAPRED_PID_DIR= # The pid files are stored. /tmp by default.\n#export HADOOP_MAPRED_IDENT_STRING= #A string representing this instance of hadoop. $USER by default\n#export HADOOP_MAPRED_NICENESS= #The scheduling priority for daemons. Defaults to 0.\nexport HADOOP_OPTS=\"$HADOOP_OPTS\"\n    "
        }
      }
    },
    {
      "cluster-env" : {
        "properties_attributes" : { },
        "properties" : {
          "user_group" : "hadoop",
          "override_uid" : "true",
          "security_enabled" : "true",
          "repo_suse_rhel_template" : "[{{repo_id}}]\nname={{repo_id}}\n{% if mirror_list %}mirrorlist={{mirror_list}}{% else %}baseurl={{base_url}}{% endif %}\n\npath=/\nenabled=1\ngpgcheck=0",
          "command_retry_enabled" : "true",
          "smokeuser" : "ambari-qa",
          "smokeuser_keytab" : "/etc/security/keytabs/smokeuser.headless.keytab",
          "commands_to_retry" : "INSTALL,START",
          "smokeuser_principal_name" : "ambari-qa-6b1dd6eb-c598-41af-57ec-66dfd95f7ae1@BAIDU.COM",
          "repo_ubuntu_template" : "{{package_type}} {{base_url}} {{components}}",
          "fetch_nonlocal_groups" : "true",
          "command_retry_max_time_in_sec" : "600",
          "kerberos_domain" : "EXAMPLE.COM",
          "ignore_groupsusers_create" : "false"
        }
      }
    }
  ],
  "host_groups" : [
    {
      "components" : [
        {
          "name" : "YARN_CLIENT"
        },
        {
          "name" : "HDFS_CLIENT"
        },
        {
          "name" : "HISTORYSERVER"
        },
        {
          "name" : "METRICS_MONITOR"
        },
        {
          "name" : "NAMENODE"
        },
        {
          "name" : "TEZ_CLIENT"
        },
        {
          "name" : "SECONDARY_NAMENODE"
        },
        {
          "name" : "MAPREDUCE2_CLIENT"
        },
        {
          "name" : "ZOOKEEPER_SERVER"
        },
        {
          "name" : "AMBARI_SERVER"
        },
        {
          "name" : "KERBEROS_CLIENT"
        },
        {
          "name" : "OOZIE_SERVER"
        },
        {
          "name" : "APP_TIMELINE_SERVER"
        },
        {
          "name" : "METRICS_COLLECTOR"
        },
        {
          "name" : "RESOURCEMANAGER"
        }
      ],
      "configurations" : [
      ],
      "name" : "host_group_2",
      "cardinality" : "1"
    },
    {
      "components" : [
        {
          "name" : "NODEMANAGER"
        },
        {
          "name" : "MAPREDUCE2_CLIENT"
        },
        {
          "name" : "HDFS_CLIENT"
        },
        {
          "name" : "OOZIE_CLIENT"
        },
        {
          "name" : "DATANODE"
        },
        {
          "name" : "METRICS_MONITOR"
        },
        {
          "name" : "KERBEROS_CLIENT"
        },
        {
          "name" : "ZOOKEEPER_CLIENT"
        }
      ],
      "configurations" : [],
      "name" : "host_group_1",
      "cardinality" : "2"
    }
  ],
  "Blueprints" : {
    "security" : {
      "type" : "KERBEROS",
      "kerberos_descriptor" : {
        "properties" : {
          "additional_realms" : "",
          "keytab_dir" : "/etc/security/keytabs",
          "realm" : "BAIDU.COM"
        },
        "identities" : [
          {
            "principal" : {
              "type" : "service",
              "value" : "HTTP/_HOST@${realm}"
            },
            "name" : "spnego",
            "keytab" : {
              "owner" : {
                "access" : "r",
                "name" : "root"
              },
              "file" : "${keytab_dir}/spnego.service.keytab",
              "group" : {
                "access" : "r",
                "name" : "${cluster-env/user_group}"
              }
            }
          },
          {
            "principal" : {
              "configuration" : "cluster-env/smokeuser_principal_name",
              "type" : "user",
              "local_username" : "${cluster-env/smokeuser}",
              "value" : "${cluster-env/smokeuser}-${cluster_name}@${realm}"
            },
            "name" : "smokeuser",
            "keytab" : {
              "owner" : {
                "access" : "r",
                "name" : "${cluster-env/smokeuser}"
              },
              "file" : "${keytab_dir}/smokeuser.headless.keytab",
              "configuration" : "cluster-env/smokeuser_keytab",
              "group" : {
                "access" : "r",
                "name" : "${cluster-env/user_group}"
              }
            }
          }
        ],
        "services" : [
          {
            "components" : [
              {
                "identities" : [
                  {
                    "name" : "/HDFS/NAMENODE/hdfs"
                  }
                ],
                "name" : "MAHOUT"
              }
            ],
            "identities" : [
              {
                "name" : "/smokeuser"
              }
            ],
            "name" : "MAHOUT"
          },
          {
            "components" : [
              {
                "identities" : [
                  {
                    "name" : "/HDFS/NAMENODE/hdfs"
                  }
                ],
                "configurations" : [
                  {
                    "tez-site" : {
                      "tez.am.view-acls" : ""
                    }
                  }
                ],
                "name" : "TEZ_CLIENT"
              }
            ],
            "name" : "TEZ"
          },
          {
            "components" : [
              {
                "identities" : [
                  {
                    "principal" : {
                      "configuration" : "hdfs-site/dfs.secondary.namenode.kerberos.principal",
                      "type" : "service",
                      "local_username" : "${hadoop-env/hdfs_user}",
                      "value" : "nn/_HOST@${realm}"
                    },
                    "name" : "secondary_namenode_nn",
                    "keytab" : {
                      "owner" : {
                        "access" : "r",
                        "name" : "${hadoop-env/hdfs_user}"
                      },
                      "file" : "${keytab_dir}/nn.service.keytab",
                      "configuration" : "hdfs-site/dfs.secondary.namenode.keytab.file",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      }
                    }
                  },
                  {
                    "principal" : {
                      "configuration" : "hdfs-site/dfs.secondary.namenode.kerberos.internal.spnego.principal",
                      "value" : "HTTP/_HOST@${realm}"
                    },
                    "name" : "/spnego"
                  }
                ],
                "name" : "SECONDARY_NAMENODE"
              },
              {
                "identities" : [
                  {
                    "name" : "/HDFS/NAMENODE/hdfs"
                  }
                ],
                "name" : "HDFS_CLIENT"
              },
              {
                "identities" : [
                  {
                    "principal" : {
                      "configuration" : "hdfs-site/dfs.datanode.kerberos.principal",
                      "type" : "service",
                      "local_username" : "${hadoop-env/hdfs_user}",
                      "value" : "dn/_HOST@${realm}"
                    },
                    "name" : "datanode_dn",
                    "keytab" : {
                      "owner" : {
                        "access" : "r",
                        "name" : "${hadoop-env/hdfs_user}"
                      },
                      "file" : "${keytab_dir}/dn.service.keytab",
                      "configuration" : "hdfs-site/dfs.datanode.keytab.file",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      }
                    }
                  }
                ],
                "configurations" : [
                  {
                    "hdfs-site" : {
                      "dfs.datanode.address" : "0.0.0.0:1019",
                      "dfs.datanode.http.address" : "0.0.0.0:1022"
                    }
                  }
                ],
                "name" : "DATANODE"
              },
              {
                "identities" : [
                  {
                    "principal" : {
                      "configuration" : "hdfs-site/nfs.kerberos.principal",
                      "type" : "service",
                      "local_username" : "${hadoop-env/hdfs_user}",
                      "value" : "nfs/_HOST@${realm}"
                    },
                    "name" : "nfsgateway",
                    "keytab" : {
                      "owner" : {
                        "access" : "r",
                        "name" : "${hadoop-env/hdfs_user}"
                      },
                      "file" : "${keytab_dir}/nfs.service.keytab",
                      "configuration" : "hdfs-site/nfs.keytab.file",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      }
                    }
                  }
                ],
                "name" : "NFS_GATEWAY"
              },
              {
                "identities" : [
                  {
                    "principal" : {
                      "configuration" : "hdfs-site/dfs.journalnode.kerberos.principal",
                      "type" : "service",
                      "local_username" : "${hadoop-env/hdfs_user}",
                      "value" : "jn/_HOST@${realm}"
                    },
                    "name" : "journalnode_jn",
                    "keytab" : {
                      "owner" : {
                        "access" : "r",
                        "name" : "${hadoop-env/hdfs_user}"
                      },
                      "file" : "${keytab_dir}/jn.service.keytab",
                      "configuration" : "hdfs-site/dfs.journalnode.keytab.file",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      }
                    }
                  },
                  {
                    "principal" : {
                      "configuration" : "hdfs-site/dfs.journalnode.kerberos.internal.spnego.principal",
                      "value" : "HTTP/_HOST@${realm}"
                    },
                    "name" : "/spnego"
                  }
                ],
                "name" : "JOURNALNODE"
              },
              {
                "identities" : [
                  {
                    "principal" : {
                      "configuration" : "hadoop-env/hdfs_principal_name",
                      "type" : "user",
                      "local_username" : "${hadoop-env/hdfs_user}",
                      "value" : "${hadoop-env/hdfs_user}-${cluster_name}@${realm}"
                    },
                    "name" : "hdfs",
                    "keytab" : {
                      "owner" : {
                        "access" : "r",
                        "name" : "${hadoop-env/hdfs_user}"
                      },
                      "file" : "${keytab_dir}/hdfs.headless.keytab",
                      "configuration" : "hadoop-env/hdfs_user_keytab",
                      "group" : {
                        "access" : "r",
                        "name" : "${cluster-env/user_group}"
                      }
                    }
                  },
                  {
                    "principal" : {
                      "configuration" : "hdfs-site/dfs.namenode.kerberos.principal",
                      "type" : "service",
                      "local_username" : "${hadoop-env/hdfs_user}",
                      "value" : "nn/_HOST@${realm}"
                    },
                    "name" : "namenode_nn",
                    "keytab" : {
                      "owner" : {
                        "access" : "r",
                        "name" : "${hadoop-env/hdfs_user}"
                      },
                      "file" : "${keytab_dir}/nn.service.keytab",
                      "configuration" : "hdfs-site/dfs.namenode.keytab.file",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      }
                    }
                  },
                  {
                    "principal" : {
                      "configuration" : "hdfs-site/dfs.namenode.kerberos.internal.spnego.principal",
                      "value" : "HTTP/_HOST@${realm}"
                    },
                    "name" : "/spnego"
                  }
                ],
                "configurations" : [
                  {
                    "hdfs-site" : {
                      "dfs.block.access.token.enable" : "true"
                    }
                  }
                ],
                "name" : "NAMENODE"
              }
            ],
            "identities" : [
              {
                "principal" : {
                  "configuration" : "hdfs-site/dfs.web.authentication.kerberos.principal",
                  "value" : "HTTP/_HOST@${realm}"
                },
                "name" : "/spnego",
                "keytab" : {
                  "owner" : { },
                  "file" : "${keytab_dir}/spnego.service.keytab",
                  "configuration" : "hdfs-site/dfs.web.authentication.kerberos.keytab",
                  "group" : { }
                }
              },
              {
                "name" : "/smokeuser"
              }
            ],
            "auth_to_local_properties" : [
              "core-site/hadoop.security.auth_to_local"
            ],
            "configurations" : [
              {
                "core-site" : {
                  "hadoop.security.authorization" : "true",
                  "hadoop.security.authentication" : "kerberos",
                  "hadoop.proxyuser.HTTP.groups" : "${hadoop-env/proxyuser_group}"
                }
              }
            ],
            "name" : "HDFS"
          },
          {
            "components" : [
              {
                "identities" : [
                  {
                    "name" : "/HDFS/NAMENODE/hdfs"
                  },
                  {
                    "principal" : {
                      "configuration" : "oozie-site/oozie.service.HadoopAccessorService.kerberos.principal",
                      "type" : "service",
                      "local_username" : "${oozie-env/oozie_user}",
                      "value" : "oozie/_HOST@${realm}"
                    },
                    "name" : "oozie_server",
                    "keytab" : {
                      "owner" : {
                        "access" : "r",
                        "name" : "${oozie-env/oozie_user}"
                      },
                      "file" : "${keytab_dir}/oozie.service.keytab",
                      "configuration" : "oozie-site/oozie.service.HadoopAccessorService.keytab.file",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      }
                    }
                  },
                  {
                    "principal" : {
                      "configuration" : "oozie-site/oozie.authentication.kerberos.principal",
                      "value" : "HTTP/_HOST@${realm}"
                    },
                    "name" : "/spnego",
                    "keytab" : {
                      "owner" : { },
                      "file" : "${keytab_dir}/spnego.service.keytab",
                      "configuration" : "oozie-site/oozie.authentication.kerberos.keytab",
                      "group" : { }
                    }
                  }
                ],
                "name" : "OOZIE_SERVER"
              }
            ],
            "identities" : [
              {
                "name" : "/spnego"
              },
              {
                "name" : "/smokeuser"
              }
            ],
            "auth_to_local_properties" : [
              "oozie-site/oozie.authentication.kerberos.name.rules"
            ],
            "configurations" : [
              {
                "oozie-site" : {
                  "oozie.service.HadoopAccessorService.kerberos.enabled" : "true",
                  "oozie.authentication.type" : "kerberos",
                  "oozie.service.AuthorizationService.authorization.enabled" : "true",
                  "local.realm" : "${realm}",
                  "oozie.credentials.credentialclasses" : "hcat=org.apache.oozie.action.hadoop.HCatCredentials,hive2=org.apache.oozie.action.hadoop.Hive2Credentials"
                }
              }
            ],
            "name" : "OOZIE"
          },
          {
            "components" : [
              {
                "identities" : [
                  {
                    "name" : "/HDFS/NAMENODE/hdfs"
                  },
                  {
                    "principal" : {
                      "configuration" : "mapred-site/mapreduce.jobhistory.principal",
                      "type" : "service",
                      "local_username" : "${mapred-env/mapred_user}",
                      "value" : "jhs/_HOST@${realm}"
                    },
                    "name" : "history_server_jhs",
                    "keytab" : {
                      "owner" : {
                        "access" : "r",
                        "name" : "${mapred-env/mapred_user}"
                      },
                      "file" : "${keytab_dir}/jhs.service.keytab",
                      "configuration" : "mapred-site/mapreduce.jobhistory.keytab",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      }
                    }
                  },
                  {
                    "principal" : {
                      "configuration" : "mapred-site/mapreduce.jobhistory.webapp.spnego-principal",
                      "value" : "HTTP/_HOST@${realm}"
                    },
                    "name" : "/spnego",
                    "keytab" : {
                      "owner" : { },
                      "file" : "${keytab_dir}/spnego.service.keytab",
                      "configuration" : "mapred-site/mapreduce.jobhistory.webapp.spnego-keytab-file",
                      "group" : { }
                    }
                  }
                ],
                "name" : "HISTORYSERVER"
              }
            ],
            "identities" : [
              {
                "name" : "/spnego"
              },
              {
                "name" : "/smokeuser"
              }
            ],
            "name" : "MAPREDUCE2"
          },
          {
            "components" : [
              {
                "identities" : [
                  {
                    "name" : "/HDFS/NAMENODE/hdfs"
                  }
                ],
                "name" : "ACCUMULO_MASTER"
              },
              {
                "name" : "ACCUMULO_MONITOR"
              },
              {
                "name" : "ACCUMULO_CLIENT"
              },
              {
                "name" : "ACCUMULO_TRACER"
              },
              {
                "name" : "ACCUMULO_TSERVER"
              },
              {
                "name" : "ACCUMULO_GC"
              }
            ],
            "identities" : [
              {
                "principal" : {
                  "configuration" : "accumulo-env/accumulo_principal_name",
                  "type" : "user",
                  "local_username" : "${accumulo-env/accumulo_user}",
                  "value" : "${accumulo-env/accumulo_user}-${cluster_name}@${realm}"
                },
                "name" : "accumulo",
                "keytab" : {
                  "owner" : {
                    "access" : "r",
                    "name" : "${accumulo-env/accumulo_user}"
                  },
                  "file" : "${keytab_dir}/accumulo.headless.keytab",
                  "configuration" : "accumulo-env/accumulo_user_keytab",
                  "group" : {
                    "access" : "r",
                    "name" : "${cluster-env/user_group}"
                  }
                }
              },
              {
                "principal" : {
                  "configuration" : "accumulo-site/general.kerberos.principal",
                  "type" : "service",
                  "local_username" : "${accumulo-env/accumulo_user}",
                  "value" : "${accumulo-env/accumulo_user}/_HOST@${realm}"
                },
                "name" : "accumulo_service",
                "keytab" : {
                  "owner" : {
                    "access" : "r",
                    "name" : "${accumulo-env/accumulo_user}"
                  },
                  "file" : "${keytab_dir}/accumulo.service.keytab",
                  "configuration" : "accumulo-site/general.kerberos.keytab",
                  "group" : {
                    "access" : "",
                    "name" : "${cluster-env/user_group}"
                  }
                }
              },
              {
                "principal" : {
                  "configuration" : "accumulo-site/trace.user",
                  "type" : "user",
                  "local_username" : "${accumulo-env/accumulo_user}",
                  "value" : "tracer-${cluster_name}@${realm}"
                },
                "name" : "accumulo_tracer",
                "keytab" : {
                  "owner" : {
                    "access" : "r",
                    "name" : "${accumulo-env/accumulo_user}"
                  },
                  "file" : "${keytab_dir}/accumulo-tracer.headless.keytab",
                  "configuration" : "accumulo-site/trace.token.property.keytab",
                  "group" : {
                    "access" : "",
                    "name" : "${cluster-env/user_group}"
                  }
                }
              },
              {
                "name" : "/smokeuser"
              }
            ],
            "configurations" : [
              {
                "accumulo-site" : {
                  "instance.security.authenticator" : "org.apache.accumulo.server.security.handler.KerberosAuthenticator",
                  "instance.rpc.sasl.enabled" : "true",
                  "general.delegation.token.lifetime" : "7d",
                  "trace.token.type" : "org.apache.accumulo.core.client.security.tokens.KerberosToken",
                  "instance.security.permissionHandler" : "org.apache.accumulo.server.security.handler.KerberosPermissionHandler",
                  "general.delegation.token.update.interval" : "1d",
                  "instance.security.authorizor" : "org.apache.accumulo.server.security.handler.KerberosAuthorizor"
                }
              },
              {
                "client" : {
                  "kerberos.server.primary" : "{{bare_accumulo_principal}}"
                }
              }
            ],
            "name" : "ACCUMULO"
          },
          {
            "components" : [
              {
                "name" : "SPARK_CLIENT"
              },
              {
                "identities" : [
                  {
                    "name" : "/HDFS/NAMENODE/hdfs"
                  }
                ],
                "name" : "SPARK_JOBHISTORYSERVER"
              },
              {
                "identities" : [
                  {
                    "name" : "/HDFS/NAMENODE/hdfs"
                  },
                  {
                    "name" : "/HIVE/HIVE_SERVER/hive_server_hive"
                  }
                ],
                "name" : "SPARK_THRIFTSERVER"
              }
            ],
            "identities" : [
              {
                "name" : "/smokeuser"
              },
              {
                "principal" : {
                  "configuration" : "spark-defaults/spark.history.kerberos.principal",
                  "type" : "user",
                  "local_username" : "${spark-env/spark_user}",
                  "value" : "${spark-env/spark_user}-${cluster_name}@${realm}"
                },
                "name" : "sparkuser",
                "keytab" : {
                  "owner" : {
                    "access" : "r",
                    "name" : "${spark-env/spark_user}"
                  },
                  "file" : "${keytab_dir}/spark.headless.keytab",
                  "configuration" : "spark-defaults/spark.history.kerberos.keytab",
                  "group" : {
                    "access" : "",
                    "name" : "${cluster-env/user_group}"
                  }
                }
              }
            ],
            "configurations" : [
              {
                "spark-defaults" : {
                  "spark.history.kerberos.enabled" : "true"
                }
              }
            ],
            "name" : "SPARK"
          },
          {
            "components" : [
              {
                "identities" : [
                  {
                    "principal" : {
                      "configuration" : "hbase-site/hbase.regionserver.kerberos.principal",
                      "type" : "service",
                      "local_username" : "${hbase-env/hbase_user}",
                      "value" : "hbase/_HOST@${realm}"
                    },
                    "name" : "hbase_regionserver_hbase",
                    "keytab" : {
                      "owner" : {
                        "access" : "r",
                        "name" : "${hbase-env/hbase_user}"
                      },
                      "file" : "${keytab_dir}/hbase.service.keytab",
                      "configuration" : "hbase-site/hbase.regionserver.keytab.file",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      }
                    }
                  }
                ],
                "name" : "HBASE_REGIONSERVER"
              },
              {
                "identities" : [
                  {
                    "name" : "/HDFS/NAMENODE/hdfs"
                  },
                  {
                    "principal" : {
                      "configuration" : "hbase-site/hbase.master.kerberos.principal",
                      "type" : "service",
                      "local_username" : "${hbase-env/hbase_user}",
                      "value" : "hbase/_HOST@${realm}"
                    },
                    "name" : "hbase_master_hbase",
                    "keytab" : {
                      "owner" : {
                        "access" : "r",
                        "name" : "${hbase-env/hbase_user}"
                      },
                      "file" : "${keytab_dir}/hbase.service.keytab",
                      "configuration" : "hbase-site/hbase.master.keytab.file",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      }
                    }
                  }
                ],
                "name" : "HBASE_MASTER"
              },
              {
                "identities" : [
                  {
                    "principal" : {
                      "configuration" : "hbase-site/phoenix.queryserver.kerberos.principal",
                      "type" : "service",
                      "local_username" : "${hbase-env/hbase_user}",
                      "value" : "hbase/_HOST@${realm}"
                    },
                    "name" : "hbase_queryserver_hbase",
                    "keytab" : {
                      "owner" : {
                        "access" : "r",
                        "name" : "${hbase-env/hbase_user}"
                      },
                      "file" : "${keytab_dir}/hbase.service.keytab",
                      "configuration" : "hbase-site/phoenix.queryserver.keytab.file",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      }
                    }
                  }
                ],
                "name" : "PHOENIX_QUERY_SERVER"
              }
            ],
            "identities" : [
              {
                "name" : "/spnego"
              },
              {
                "principal" : {
                  "configuration" : "hbase-env/hbase_principal_name",
                  "type" : "user",
                  "local_username" : "${hbase-env/hbase_user}",
                  "value" : "${hbase-env/hbase_user}-${cluster_name}@${realm}"
                },
                "name" : "hbase",
                "keytab" : {
                  "owner" : {
                    "access" : "r",
                    "name" : "${hbase-env/hbase_user}"
                  },
                  "file" : "${keytab_dir}/hbase.headless.keytab",
                  "configuration" : "hbase-env/hbase_user_keytab",
                  "group" : {
                    "access" : "r",
                    "name" : "${cluster-env/user_group}"
                  }
                }
              },
              {
                "name" : "/smokeuser"
              }
            ],
            "configurations" : [
              {
                "hbase-site" : {
                  "hbase.coprocessor.master.classes" : "{{hbase_coprocessor_master_classes}}",
                  "hbase.coprocessor.regionserver.classes" : "{{hbase_coprocessor_regionserver_classes}}",
                  "hbase.security.authentication" : "kerberos",
                  "hbase.coprocessor.region.classes" : "{{hbase_coprocessor_region_classes}}",
                  "hbase.security.authorization" : "true",
                  "hbase.bulkload.staging.dir" : "/apps/hbase/staging",
                  "zookeeper.znode.parent" : "/hbase-secure"
                }
              }
            ],
            "name" : "HBASE"
          },
          {
            "components" : [
              {
                "identities" : [
                  {
                    "principal" : {
                      "configuration" : "zookeeper-env/zookeeper_principal_name",
                      "type" : "service",
                      "value" : "zookeeper/_HOST@${realm}"
                    },
                    "name" : "zookeeper_zk",
                    "keytab" : {
                      "owner" : {
                        "access" : "r",
                        "name" : "${zookeeper-env/zk_user}"
                      },
                      "file" : "${keytab_dir}/zk.service.keytab",
                      "configuration" : "zookeeper-env/zookeeper_keytab_path",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      }
                    }
                  }
                ],
                "name" : "ZOOKEEPER_SERVER"
              }
            ],
            "identities" : [
              {
                "name" : "/smokeuser"
              }
            ],
            "name" : "ZOOKEEPER"
          },
          {
            "components" : [
              {
                "identities" : [
                  {
                    "principal" : {
                      "configuration" : "yarn-site/yarn.nodemanager.principal",
                      "type" : "service",
                      "local_username" : "${yarn-env/yarn_user}",
                      "value" : "nm/_HOST@${realm}"
                    },
                    "name" : "nodemanager_nm",
                    "keytab" : {
                      "owner" : {
                        "access" : "r",
                        "name" : "${yarn-env/yarn_user}"
                      },
                      "file" : "${keytab_dir}/nm.service.keytab",
                      "configuration" : "yarn-site/yarn.nodemanager.keytab",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      }
                    }
                  },
                  {
                    "principal" : {
                      "configuration" : "yarn-site/yarn.nodemanager.webapp.spnego-principal",
                      "value" : "HTTP/_HOST@${realm}"
                    },
                    "name" : "/spnego",
                    "keytab" : {
                      "owner" : { },
                      "file" : "${keytab_dir}/spnego.service.keytab",
                      "configuration" : "yarn-site/yarn.nodemanager.webapp.spnego-keytab-file",
                      "group" : { }
                    }
                  }
                ],
                "configurations" : [
                  {
                    "yarn-site" : {
                      "yarn.nodemanager.container-executor.class" : "org.apache.hadoop.yarn.server.nodemanager.LinuxContainerExecutor"
                    }
                  }
                ],
                "name" : "NODEMANAGER"
              },
              {
                "identities" : [
                  {
                    "principal" : {
                      "configuration" : "yarn-site/yarn.timeline-service.principal",
                      "type" : "service",
                      "local_username" : "${yarn-env/yarn_user}",
                      "value" : "yarn/_HOST@${realm}"
                    },
                    "name" : "app_timeline_server_yarn",
                    "keytab" : {
                      "owner" : {
                        "access" : "r",
                        "name" : "${yarn-env/yarn_user}"
                      },
                      "file" : "${keytab_dir}/yarn.service.keytab",
                      "configuration" : "yarn-site/yarn.timeline-service.keytab",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      }
                    }
                  },
                  {
                    "principal" : {
                      "configuration" : "yarn-site/yarn.timeline-service.http-authentication.kerberos.principal",
                      "value" : "HTTP/_HOST@${realm}"
                    },
                    "name" : "/spnego",
                    "keytab" : {
                      "owner" : { },
                      "file" : "${keytab_dir}/spnego.service.keytab",
                      "configuration" : "yarn-site/yarn.timeline-service.http-authentication.kerberos.keytab",
                      "group" : { }
                    }
                  }
                ],
                "name" : "APP_TIMELINE_SERVER"
              },
              {
                "identities" : [
                  {
                    "principal" : {
                      "configuration" : "yarn-site/yarn.resourcemanager.principal",
                      "type" : "service",
                      "local_username" : "${yarn-env/yarn_user}",
                      "value" : "rm/_HOST@${realm}"
                    },
                    "name" : "resource_manager_rm",
                    "keytab" : {
                      "owner" : {
                        "access" : "r",
                        "name" : "${yarn-env/yarn_user}"
                      },
                      "file" : "${keytab_dir}/rm.service.keytab",
                      "configuration" : "yarn-site/yarn.resourcemanager.keytab",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      }
                    }
                  },
                  {
                    "principal" : {
                      "configuration" : "yarn-site/yarn.resourcemanager.webapp.spnego-principal",
                      "value" : "HTTP/_HOST@${realm}"
                    },
                    "name" : "/spnego",
                    "keytab" : {
                      "owner" : { },
                      "file" : "${keytab_dir}/spnego.service.keytab",
                      "configuration" : "yarn-site/yarn.resourcemanager.webapp.spnego-keytab-file",
                      "group" : { }
                    }
                  }
                ],
                "name" : "RESOURCEMANAGER"
              }
            ],
            "identities" : [
              {
                "name" : "/spnego"
              },
              {
                "name" : "/smokeuser"
              }
            ],
            "configurations" : [
              {
                "capacity-scheduler" : {
                  "yarn.scheduler.capacity.root.default.acl_administer_queue" : "${yarn-env/yarn_user}",
                  "yarn.scheduler.capacity.root.acl_administer_queue" : "${yarn-env/yarn_user}",
                  "yarn.scheduler.capacity.root.default.acl_administer_jobs" : "${yarn-env/yarn_user}",
                  "yarn.scheduler.capacity.root.acl_administer_jobs" : "${yarn-env/yarn_user}",
                  "yarn.scheduler.capacity.root.default.acl_submit_applications" : "${yarn-env/yarn_user}"
                }
              },
              {
                "yarn-site" : {
                  "yarn.timeline-service.http-authentication.signer.secret.provider.object" : "",
                  "yarn.resourcemanager.proxyusers.*.users" : "",
                  "yarn.timeline-service.http-authentication.token.validity" : "",
                  "yarn.admin.acl" : "${yarn-env/yarn_user},dr.who",
                  "yarn.timeline-service.http-authentication.kerberos.name.rules" : "",
                  "yarn.timeline-service.http-authentication.cookie.path" : "",
                  "yarn.timeline-service.http-authentication.type" : "kerberos",
                  "yarn.nodemanager.linux-container-executor.cgroups.mount-path" : "",
                  "yarn.resourcemanager.proxy-user-privileges.enabled" : "true",
                  "yarn.acl.enable" : "true",
                  "yarn.timeline-service.http-authentication.signer.secret.provider" : "",
                  "yarn.timeline-service.http-authentication.proxyusers.*.groups" : "",
                  "yarn.timeline-service.http-authentication.proxyusers.*.hosts" : "",
                  "yarn.timeline-service.http-authentication.signature.secret" : "",
                  "yarn.timeline-service.http-authentication.signature.secret.file" : "",
                  "yarn.resourcemanager.proxyusers.*.hosts" : "",
                  "yarn.resourcemanager.proxyusers.*.groups" : "",
                  "yarn.timeline-service.enabled" : "true",
                  "yarn.timeline-service.http-authentication.proxyusers.*.users" : "",
                  "yarn.timeline-service.http-authentication.cookie.domain" : ""
                }
              },
              {
                "core-site" : {
                  "hadoop.proxyuser.yarn.groups" : "*",
                  "hadoop.proxyuser.yarn.hosts" : "${yarn-site/yarn.resourcemanager.hostname}"
                }
              }
            ],
            "name" : "YARN"
          },
          {
            "components" : [
              {
                "name" : "KERBEROS_CLIENT"
              }
            ],
            "identities" : [
              {
                "name" : "/smokeuser"
              }
            ],
            "name" : "KERBEROS"
          },
          {
            "components" : [
              {
                "identities" : [
                  {
                    "principal" : {
                      "configuration" : "kms-site/hadoop.kms.authentication.signer.secret.provider.zookeeper.kerberos.principal"
                    },
                    "name" : "/spnego",
                    "keytab" : {
                      "owner" : { },
                      "configuration" : "kms-site/hadoop.kms.authentication.signer.secret.provider.zookeeper.kerberos.keytab",
                      "group" : { }
                    }
                  },
                  {
                    "name" : "/smokeuser"
                  }
                ],
                "name" : "RANGER_KMS_SERVER"
              }
            ],
            "identities" : [
              {
                "name" : "/spnego",
                "keytab" : {
                  "owner" : { },
                  "configuration" : "kms-site/hadoop.kms.authentication.kerberos.keytab",
                  "group" : { }
                }
              },
              {
                "name" : "/smokeuser"
              }
            ],
            "configurations" : [
              {
                "kms-site" : {
                  "hadoop.kms.authentication.kerberos.principal" : "*",
                  "hadoop.kms.authentication.type" : "kerberos"
                }
              }
            ],
            "name" : "RANGER_KMS"
          },
          {
            "components" : [
              {
                "identities" : [
                  {
                    "principal" : {
                      "configuration" : "knox-env/knox_principal_name",
                      "type" : "service",
                      "local_username" : "${knox-env/knox_user}",
                      "value" : "${knox-env/knox_user}/_HOST@${realm}"
                    },
                    "name" : "knox_principal",
                    "keytab" : {
                      "owner" : {
                        "access" : "r",
                        "name" : "${knox-env/knox_user}"
                      },
                      "file" : "${keytab_dir}/knox.service.keytab",
                      "configuration" : "knox-env/knox_keytab_path",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      }
                    }
                  }
                ],
                "configurations" : [
                  {
                    "oozie-site" : {
                      "oozie.service.ProxyUserService.proxyuser.${knox-env/knox_user}.groups" : "${hadoop-env/proxyuser_group}",
                      "oozie.service.ProxyUserService.proxyuser.${knox-env/knox_user}.hosts" : "${clusterHostInfo/knox_gateway_hosts}"
                    }
                  },
                  {
                    "webhcat-site" : {
                      "webhcat.proxyuser.${knox-env/knox_user}.groups" : "${hadoop-env/proxyuser_group}",
                      "webhcat.proxyuser.${knox-env/knox_user}.hosts" : "${clusterHostInfo/knox_gateway_hosts}"
                    }
                  },
                  {
                    "gateway-site" : {
                      "gateway.hadoop.kerberos.secured" : "true",
                      "java.security.krb5.conf" : "/etc/krb5.conf"
                    }
                  },
                  {
                    "core-site" : {
                      "hadoop.proxyuser.${knox-env/knox_user}.hosts" : "${clusterHostInfo/knox_gateway_hosts}",
                      "hadoop.proxyuser.${knox-env/knox_user}.groups" : "${hadoop-env/proxyuser_group}"
                    }
                  }
                ],
                "name" : "KNOX_GATEWAY"
              }
            ],
            "name" : "KNOX"
          },
          {
            "components" : [
              {
                "identities" : [
                  {
                    "name" : "/HDFS/NAMENODE/hdfs"
                  }
                ],
                "name" : "PIG"
              }
            ],
            "name" : "PIG"
          },
          {
            "components" : [
              {
                "identities" : [
                  {
                    "principal" : {
                      "configuration" : "storm-env/storm_ui_principal_name"
                    },
                    "name" : "/spnego",
                    "keytab" : {
                      "owner" : { },
                      "configuration" : "storm-env/storm_ui_keytab",
                      "group" : { }
                    }
                  }
                ],
                "name" : "STORM_UI_SERVER"
              },
              {
                "name" : "SUPERVISOR"
              },
              {
                "identities" : [
                  {
                    "principal" : {
                      "configuration" : "storm-env/nimbus_principal_name",
                      "type" : "service",
                      "value" : "nimbus/_HOST@${realm}"
                    },
                    "name" : "nimbus_server",
                    "keytab" : {
                      "owner" : {
                        "access" : "r",
                        "name" : "${storm-env/storm_user}"
                      },
                      "file" : "${keytab_dir}/nimbus.service.keytab",
                      "configuration" : "storm-env/nimbus_keytab",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      }
                    }
                  }
                ],
                "name" : "NIMBUS"
              },
              {
                "identities" : [
                  {
                    "principal" : {
                      "configuration" : "storm-env/nimbus_principal_name",
                      "type" : "service",
                      "value" : "nimbus/_HOST@${realm}"
                    },
                    "name" : "nimbus_server",
                    "keytab" : {
                      "owner" : {
                        "access" : "r",
                        "name" : "${storm-env/storm_user}"
                      },
                      "file" : "${keytab_dir}/nimbus.service.keytab",
                      "configuration" : "storm-env/nimbus_keytab",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      }
                    }
                  }
                ],
                "name" : "DRPC_SERVER"
              }
            ],
            "identities" : [
              {
                "name" : "/spnego"
              },
              {
                "name" : "/smokeuser"
              },
              {
                "principal" : {
                  "configuration" : "storm-env/storm_principal_name",
                  "type" : "user",
                  "value" : "${storm-env/storm_user}-${cluster_name}@${realm}"
                },
                "name" : "storm_components",
                "keytab" : {
                  "owner" : {
                    "access" : "r",
                    "name" : "${storm-env/storm_user}"
                  },
                  "file" : "${keytab_dir}/storm.headless.keytab",
                  "configuration" : "storm-env/storm_keytab",
                  "group" : {
                    "access" : "",
                    "name" : "${cluster-env/user_group}"
                  }
                }
              }
            ],
            "configurations" : [
              {
                "storm-site" : {
                  "nimbus.authorizer" : "backtype.storm.security.auth.authorizer.SimpleACLAuthorizer",
                  "java.security.auth.login.config" : "{{conf_dir}}/storm_jaas.conf",
                  "drpc.authorizer" : "backtype.storm.security.auth.authorizer.DRPCSimpleACLAuthorizer",
                  "storm.principal.tolocal" : "backtype.storm.security.auth.KerberosPrincipalToLocal",
                  "storm.zookeeper.superACL" : "sasl:{{storm_bare_jaas_principal}}",
                  "ui.filter.params" : "{'type': 'kerberos', 'kerberos.principal': '{{storm_ui_jaas_principal}}', 'kerberos.keytab': '{{storm_ui_keytab_path}}', 'kerberos.name.rules': 'DEFAULT'}",
                  "nimbus.supervisor.users" : "['{{storm_bare_jaas_principal}}']",
                  "nimbus.admins" : "['{{storm_bare_jaas_principal}}']",
                  "ui.filter" : "org.apache.hadoop.security.authentication.server.AuthenticationFilter",
                  "supervisor.enable" : "true"
                }
              }
            ],
            "name" : "STORM"
          },
          {
            "components" : [
              {
                "identities" : [
                  {
                    "principal" : {
                      "configuration" : "application-properties/atlas.authentication.principal",
                      "type" : "service",
                      "local_username" : "${atlas-env/metadata_user}",
                      "value" : "atlas/_HOST@${realm}"
                    },
                    "name" : "atlas",
                    "keytab" : {
                      "owner" : {
                        "access" : "r",
                        "name" : "${atlas-env/metadata_user}"
                      },
                      "file" : "${keytab_dir}/atlas.service.keytab",
                      "configuration" : "application-properties/atlas.authentication.keytab",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      }
                    }
                  },
                  {
                    "principal" : {
                      "configuration" : "application-properties/atlas.http.authentication.kerberos.principal",
                      "value" : "HTTP/_HOST@${realm}"
                    },
                    "name" : "/spnego",
                    "keytab" : {
                      "owner" : { },
                      "configuration" : "application-properties/atlas.http.authentication.kerberos.keytab",
                      "group" : { }
                    }
                  }
                ],
                "name" : "ATLAS_SERVER"
              }
            ],
            "auth_to_local_properties" : [
              "application-properties/atlas.http.authentication.kerberos.name.rules"
            ],
            "configurations" : [
              {
                "application-properties" : {
                  "atlas.authentication.method" : "kerberos",
                  "atlas.http.authentication.enabled" : "true",
                  "atlas.http.authentication.type" : "kerberos"
                }
              }
            ],
            "name" : "ATLAS"
          },
          {
            "components" : [
              {
                "identities" : [
                  {
                    "name" : "/HDFS/NAMENODE/hdfs"
                  },
                  {
                    "principal" : {
                      "configuration" : "hive-site/hive.server2.authentication.kerberos.principal",
                      "type" : "service",
                      "local_username" : "${hive-env/hive_user}",
                      "value" : "hive/_HOST@${realm}"
                    },
                    "name" : "hive_server_hive",
                    "keytab" : {
                      "owner" : {
                        "access" : "r",
                        "name" : "${hive-env/hive_user}"
                      },
                      "file" : "${keytab_dir}/hive.service.keytab",
                      "configuration" : "hive-site/hive.server2.authentication.kerberos.keytab",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      }
                    }
                  },
                  {
                    "principal" : {
                      "configuration" : "hive-site/hive.server2.authentication.spnego.principal"
                    },
                    "name" : "/spnego",
                    "keytab" : {
                      "owner" : { },
                      "configuration" : "hive-site/hive.server2.authentication.spnego.keytab",
                      "group" : { }
                    }
                  }
                ],
                "name" : "HIVE_SERVER"
              },
              {
                "identities" : [
                  {
                    "principal" : {
                      "configuration" : "hive-site/hive.metastore.kerberos.principal",
                      "type" : "service",
                      "local_username" : "${hive-env/hive_user}",
                      "value" : "hive/_HOST@${realm}"
                    },
                    "name" : "hive_metastore_hive",
                    "keytab" : {
                      "owner" : {
                        "access" : "r",
                        "name" : "${hive-env/hive_user}"
                      },
                      "file" : "${keytab_dir}/hive.service.keytab",
                      "configuration" : "hive-site/hive.metastore.kerberos.keytab.file",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      }
                    }
                  }
                ],
                "name" : "HIVE_METASTORE"
              },
              {
                "identities" : [
                  {
                    "principal" : {
                      "configuration" : "webhcat-site/templeton.kerberos.principal"
                    },
                    "name" : "/spnego",
                    "keytab" : {
                      "owner" : { },
                      "configuration" : "webhcat-site/templeton.kerberos.keytab",
                      "group" : { }
                    }
                  }
                ],
                "name" : "WEBHCAT_SERVER"
              }
            ],
            "identities" : [
              {
                "name" : "/spnego"
              },
              {
                "name" : "/smokeuser"
              }
            ],
            "configurations" : [
              {
                "hive-site" : {
                  "hive.metastore.sasl.enabled" : "true",
                  "hive.server2.authentication" : "KERBEROS"
                }
              },
              {
                "webhcat-site" : {
                  "templeton.hive.properties" : "hive.metastore.local=false,hive.metastore.uris=${clusterHostInfo/hive_metastore_host|each(thrift://%s:9083, \\\\,, \\s*\\,\\s*)},hive.metastore.sasl.enabled=true,hive.metastore.execute.setugi=true,hive.metastore.warehouse.dir=/apps/hive/warehouse,hive.exec.mode.local.auto=false,hive.metastore.kerberos.principal=hive/_HOST@${realm}",
                  "templeton.kerberos.secret" : "secret"
                }
              },
              {
                "core-site" : {
                  "hadoop.proxyuser.HTTP.hosts" : "${clusterHostInfo/webhcat_server_host}"
                }
              }
            ],
            "name" : "HIVE"
          },
          {
            "components" : [
              {
                "identities" : [
                  {
                    "name" : "/HDFS/NAMENODE/hdfs"
                  }
                ],
                "name" : "SLIDER"
              }
            ],
            "name" : "SLIDER"
          },
          {
            "components" : [
              {
                "identities" : [
                  {
                    "principal" : {
                      "configuration" : "ams-hbase-security-site/hbase.master.kerberos.principal",
                      "type" : "service",
                      "local_username" : "${ams-env/ambari_metrics_user}",
                      "value" : "amshbase/_HOST@${realm}"
                    },
                    "name" : "ams_hbase_master_hbase",
                    "keytab" : {
                      "owner" : {
                        "access" : "r",
                        "name" : "${ams-env/ambari_metrics_user}"
                      },
                      "file" : "${keytab_dir}/ams-hbase.master.keytab",
                      "configuration" : "ams-hbase-security-site/hbase.master.keytab.file",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      }
                    }
                  },
                  {
                    "principal" : {
                      "configuration" : "ams-hbase-security-site/hbase.regionserver.kerberos.principal",
                      "type" : "service",
                      "local_username" : "${ams-env/ambari_metrics_user}",
                      "value" : "amshbase/_HOST@${realm}"
                    },
                    "name" : "ams_hbase_regionserver_hbase",
                    "keytab" : {
                      "owner" : {
                        "access" : "r",
                        "name" : "${ams-env/ambari_metrics_user}"
                      },
                      "file" : "${keytab_dir}/ams-hbase.regionserver.keytab",
                      "configuration" : "ams-hbase-security-site/hbase.regionserver.keytab.file",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      }
                    }
                  },
                  {
                    "principal" : {
                      "configuration" : "ams-hbase-security-site/hbase.myclient.principal",
                      "type" : "service",
                      "local_username" : "${ams-env/ambari_metrics_user}",
                      "value" : "amshbase/_HOST@${realm}"
                    },
                    "name" : "ams_collector",
                    "keytab" : {
                      "owner" : {
                        "access" : "r",
                        "name" : "${ams-env/ambari_metrics_user}"
                      },
                      "file" : "${keytab_dir}/ams.collector.keytab",
                      "configuration" : "ams-hbase-security-site/hbase.myclient.keytab",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      }
                    }
                  },
                  {
                    "principal" : {
                      "configuration" : "ams-hbase-security-site/ams.zookeeper.principal",
                      "type" : "service",
                      "local_username" : "${ams-env/ambari_metrics_user}",
                      "value" : "amszk/_HOST@${realm}"
                    },
                    "name" : "ams_zookeeper",
                    "keytab" : {
                      "owner" : {
                        "access" : "r",
                        "name" : "${ams-env/ambari_metrics_user}"
                      },
                      "file" : "${keytab_dir}/ams-zk.service.keytab",
                      "configuration" : "ams-hbase-security-site/ams.zookeeper.keytab",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      }
                    }
                  }
                ],
                "configurations" : [
                  {
                    "ams-hbase-security-site" : {
                      "hbase.coprocessor.master.classes" : "org.apache.hadoop.hbase.security.access.AccessController",
                      "hadoop.security.authentication" : "kerberos",
                      "hbase.security.authentication" : "kerberos",
                      "hbase.coprocessor.region.classes" : "org.apache.hadoop.hbase.security.token.TokenProvider,org.apache.hadoop.hbase.security.access.AccessController",
                      "hbase.security.authorization" : "true",
                      "hbase.zookeeper.property.kerberos.removeRealmFromPrincipal" : "true",
                      "hbase.zookeeper.property.jaasLoginRenew" : "3600000",
                      "hbase.zookeeper.property.authProvider.1" : "org.apache.zookeeper.server.auth.SASLAuthenticationProvider",
                      "hbase.zookeeper.property.kerberos.removeHostFromPrincipal" : "true"
                    }
                  },
                  {
                    "ams-hbase-site" : {
                      "zookeeper.znode.parent" : "/ams-hbase-secure"
                    }
                  }
                ],
                "name" : "METRICS_COLLECTOR"
              }
            ],
            "identities" : [
              {
                "name" : "/spnego"
              }
            ],
            "name" : "AMBARI_METRICS"
          },
          {
            "components" : [
              {
                "identities" : [
                  {
                    "principal" : {
                      "configuration" : "kafka-env/kafka_principal_name",
                      "type" : "service",
                      "value" : "${kafka-env/kafka_user}/_HOST@${realm}"
                    },
                    "name" : "kafka_broker",
                    "keytab" : {
                      "owner" : {
                        "access" : "r",
                        "name" : "${kafka-env/kafka_user}"
                      },
                      "file" : "${keytab_dir}/kafka.service.keytab",
                      "configuration" : "kafka-env/kafka_keytab",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      }
                    }
                  }
                ],
                "name" : "KAFKA_BROKER"
              }
            ],
            "identities" : [
              {
                "name" : "/smokeuser"
              }
            ],
            "configurations" : [
              {
                "kafka-broker" : {
                  "principal.to.local.class" : "kafka.security.auth.KerberosPrincipalToLocal",
                  "authorizer.class.name" : "kafka.security.auth.SimpleAclAuthorizer",
                  "super.users" : "user:${kafka-env/kafka_user}",
                  "security.inter.broker.protocol" : "PLAINTEXTSASL"
                }
              }
            ],
            "name" : "KAFKA"
          },
          {
            "components" : [
              {
                "identities" : [
                  {
                    "name" : "/HDFS/NAMENODE/hdfs"
                  },
                  {
                    "principal" : {
                      "configuration" : "falcon-startup.properties/*.falcon.service.authentication.kerberos.principal",
                      "type" : "service",
                      "local_username" : "${falcon-env/falcon_user}",
                      "value" : "falcon/_HOST@${realm}"
                    },
                    "name" : "falcon_server",
                    "keytab" : {
                      "owner" : {
                        "access" : "r",
                        "name" : "${falcon-env/falcon_user}"
                      },
                      "file" : "${keytab_dir}/falcon.service.keytab",
                      "configuration" : "falcon-startup.properties/*.falcon.service.authentication.kerberos.keytab",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      }
                    }
                  },
                  {
                    "principal" : {
                      "configuration" : "falcon-startup.properties/*.falcon.http.authentication.kerberos.principal",
                      "value" : "HTTP/_HOST@${realm}"
                    },
                    "name" : "/spnego",
                    "keytab" : {
                      "owner" : { },
                      "configuration" : "falcon-startup.properties/*.falcon.http.authentication.kerberos.keytab",
                      "group" : { }
                    }
                  }
                ],
                "name" : "FALCON_SERVER"
              }
            ],
            "identities" : [
              {
                "name" : "/spnego"
              },
              {
                "name" : "/smokeuser"
              }
            ],
            "auth_to_local_properties" : [
              "falcon-startup.properties/*.falcon.http.authentication.kerberos.name.rules|new_lines_escaped"
            ],
            "configurations" : [
              {
                "falcon-startup.properties" : {
                  "*.dfs.namenode.kerberos.principal" : "nn/_HOST@${realm}",
                  "*.falcon.http.authentication.type" : "kerberos",
                  "*.falcon.authentication.type" : "kerberos"
                }
              }
            ],
            "name" : "FALCON"
          },
          {
            "components" : [
              {
                "name" : "SPARK2_CLIENT"
              },
              {
                "identities" : [
                  {
                    "name" : "/HDFS/NAMENODE/hdfs"
                  },
                  {
                    "name" : "/HIVE/HIVE_SERVER/hive_server_hive"
                  }
                ],
                "name" : "SPARK2_THRIFTSERVER"
              },
              {
                "identities" : [
                  {
                    "name" : "/HDFS/NAMENODE/hdfs"
                  }
                ],
                "name" : "SPARK2_JOBHISTORYSERVER"
              }
            ],
            "identities" : [
              {
                "name" : "/smokeuser"
              },
              {
                "principal" : {
                  "configuration" : "spark2-defaults/spark.history.kerberos.principal",
                  "type" : "user",
                  "local_username" : "${spark2-env/spark_user}",
                  "value" : "${spark2-env/spark_user}-${cluster_name|toLower()}@${realm}"
                },
                "name" : "spark2user",
                "keytab" : {
                  "owner" : {
                    "access" : "r",
                    "name" : "${spark2-env/spark_user}"
                  },
                  "file" : "${keytab_dir}/spark2.headless.keytab",
                  "configuration" : "spark2-defaults/spark.history.kerberos.keytab",
                  "group" : {
                    "access" : "",
                    "name" : "${cluster-env/user_group}"
                  }
                }
              }
            ],
            "configurations" : [
              {
                "spark2-defaults" : {
                  "spark.history.kerberos.enabled" : "true"
                }
              },
              {
                "spark2-thrift-sparkconf" : {
                  "spark.yarn.principal" : "${spark2-env/hive_kerberos_principal}",
                  "spark.yarn.keytab" : "${spark2-env/hive_kerberos_keytab}"
                }
              }
            ],
            "name" : "SPARK2"
          }
        ]
      }
    },
    "stack_name" : "HDP",
    "stack_version" : "2.4"
  }
}
